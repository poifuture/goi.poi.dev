{"version":3,"sources":["webpack:///./src/components/WordCards/TinyTag.tsx","webpack:///./src/utils/PoiResponsive.ts","webpack:///./src/components/WordCards/GoiTranslation.tsx","webpack:///./src/components/WordCards/GoiSentence.tsx","webpack:///./src/components/WordCards/JaWordCard.tsx","webpack:///./src/containers/GoiTester.tsx","webpack:///./src/components/ResponsiveDialog.tsx","webpack:///./src/utils/PoiI18n.ts","webpack:///./src/containers/WordAdder.tsx","webpack:///./src/containers/CommandsBar.tsx","webpack:///./src/pages/index.tsx"],"names":["TinyTag","_React$Component","apply","this","arguments","prototype","render","react_default","a","createElement","Box","Object","assign","display","border","borderRadius","marginLeft","props","children","React","Component","ToggleEvents","toggleEventHandler","onClick","onFocus","onBlur","onMouseEnter","onMouseLeave","onClose","GoiTranslation","_this","call","toggleStateHint","state","displayHint","setState","_this$props","i18nTranslation","from","displayFrom","className","style","fontSize","entries","translation","map","_ref","translationLanguage","translationText","keys","length","hint","WordCards_TinyTag","_ref2","hintLanguage","hintText","key","visibility","dangerouslySetInnerHTML","__html","color","width","justifyContent","defaultProps","en","zh","jp","locales","GoiSentence","i18nSentence","sentence","audios","source","link","contributor","circledNumber","x","String","fromCharCode","Math","floor","JaWordCard","level","statusColor","status","word","sortedTranslationsDictionarys","i","dictionarys","tmpDictionary","translations","includes","push","filteredTranslationsDictionarys","slice","sortedSentences","_loop","tmpSentences","sentences","filter","_toConsumableArray","filteredSentences","console","debug","minHeight","alignItems","common","BatteryUnknownOutlined_default","BatteryCharging20Outlined_default","BatteryCharging30Outlined_default","BatteryCharging50Outlined_default","BatteryCharging60Outlined_default","BatteryCharging80Outlined_default","BatteryCharging90Outlined_default","BatteryChargingFullOutlined_default","BatteryAlertOutlined_default","tone","Array","isArray","singleTone","join","pos","romaji","Fragment","wapuro","List","dictionaryName","WordCards_GoiTranslation","sentenceId","WordCards_GoiSentence","textbook","textbookId","GoiTester","JudgeInputElement","requestJudge","_asyncToGenerator","regenerator_default","mark","_callee","_temp","skip","poiUserId","savingId","judgeResult","wrap","_context","prev","next","currentWord","toJS","judgeAnswer","answer","testerInput","sent","requestNext","stop","_x","_ref3","_callee2","_temp2","forget","_this$props2","currentWordKey","learnedCandidates","prioritiedCandidates","pendingCandidates","_context2","GoiWordRecord","Forget","showNextWord","displayDetail","_x2","_proto","componentDidMount","_componentDidMount","_callee3","_context3","lazyInitUser","lazyInitSaving","_this2","_this$props3","t","i18n","savingLanguage","saving","Language","wordCardStatus","wordCardDisplay","marginTop","Helmet_default","startsWith","defaultValue","wordkey","TextField","label","variant","value","flexGrow","updateIsTyping","isTyping","onChange","e","target","InputProps","placeholder","endAdornment","InputAdornment","position","IconButton","aria-label","edge","KeyboardReturnOutlined_default","onKeyDown","Button","size","RedoOutlined_default","ForwardOutlined_default","WordCards_JaWordCard","currentLevel","MoreHorizOutlined_default","LinkOffOutlined_default","connect","GoiUser","get","GoiSaving","getIn","has","tester","dispatch","LazyInitUserAction","_ref5","LazyInitSavingAction","_ref6","UpdateIsTypingAction","_ref7","_temp3","_ref8","ShowNextWordAction","_ref9","_ref10","VerifyAnswerAction","withTranslation","ResponsiveDialog","useMediaQuery","useTheme","breakpoints","down","Dialog","PaperProps","margin","LookUp","i18nString","locale","ja","QueryRegexPopup","regex","WordAdder","getSuggestionQuerys","suggestions","suggestion","Query","getPendingQuerys","pendings","pending","addSuggestion","WordAdder_asyncToGenerator","SubQuerys","addPendingQuerys","querys","concat","WordAdder_toConsumableArray","Display","clearAllPendingQuerys","Promise","all","query","removePendingQuery","onClickConfirm","addingWordsProgress","addWordsFromQuerys","close","addCustomQuery","addPendingQuery","customQuery","trim","_this$props4","_this$props5","_learnedCount$priorit","learnedCount","prioritiedCount","pendingCount","counters","components_ResponsiveDialog","open","DialogTitle","DialogContent","dividers","dense","marginRight","flex","readOnly","clearPendingWords","DeleteOutlined_default","ListItem","Divider","component","Typography","TotalCount","LearnedCount","AddedCount","NewCount","ListItemText","primary","language","WordAdder_QueryRegexPopup","total","secondary","learned","added","new","ListItemSecondaryAction","AddOutlined_default","SearchOutlined_default","ExploreOffOutlined_default","CloseOutlined_default","FormControlLabel","control","Checkbox","checked","disabled","DialogActions","ClearPendingWordsAction","AddPendingQueryAction","AddPendingQuerysAction","_ref11","RemovePendingQueryAction","_ref12","_ref13","AddWordsFromQuerysAction","DisplayWordAdderAction","CommandsBar","commandsContainerRef","createRef","openMenu","isMenuOpened","closeMenu","toggleMenu","isCommandsExpanded","navigate","to","replace","smDown","window","innerWidth","bottom","right","maxWidth","height","marginBottom","current","scrollTo","left","behavior","FirstPageOutlined_default","ref","overflowX","overflowY","direction","whiteSpace","NavigateNextOutlined_default","FormatQuoteOutlined_default","RefreshOutlined_default","PlaylistPlayOutlined_default","CreateOutlined_default","FingerprintOutlined_default","VolumeOffOutlined_default","FlagOutlined_default","CloudOffOutlined_default","isEmpty","showWordAdder","SpeedDial","ariaLabel","icon","MenuOutlined_default","ButtonProps","background","SpeedDialAction","ShareOutlined_default","tooltipTitle","tooltipOpen","SmsOutlined_default","HighlightOutlined_default","PersonOutlined_default","ShowWordAdderAction","__webpack_exports__","overflow","Hidden","xsDown","NavBar","smUp","poisky","containers_CommandsBar","containers_WordAdder","Container","containers_GoiTester"],"mappings":"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","file":"component---src-pages-index-tsx-738a56801e8bc97f5870.js","sourcesContent":["import React from \"react\"\nimport { I18nString } from \"../../types/GoiDictionaryTypes\"\nimport { List as MuiList, Box } from \"@material-ui/core\"\nimport { BoxProps } from \"@material-ui/core/Box\"\n\nexport interface TinyTagPropsType extends BoxProps {}\nexport class TinyTag extends React.Component<TinyTagPropsType> {\n  render() {\n    return (\n      <Box\n        display=\"inline-flex\"\n        border={1}\n        borderRadius={3}\n        marginLeft=\"5px\"\n        {...this.props}\n      >\n        {this.props.children}\n      </Box>\n    )\n  }\n}\n\nexport default TinyTag\n","export const ToggleEvents = (\n  toggleEventHandler: (value?: boolean, event?: string) => void | Promise<void>\n) => {\n  return {\n    onClick: () => toggleEventHandler(true, \"onClick\"),\n    onFocus: () => toggleEventHandler(true, \"onFocus\"),\n    onBlur: () => toggleEventHandler(false, \"onBlur\"),\n    onMouseEnter: () => toggleEventHandler(true, \"onMouseEnter\"),\n    onMouseLeave: () => toggleEventHandler(false, \"onMouseLeave\"),\n    onClose: () => toggleEventHandler(false, \"onClose\"),\n  }\n}\n","import React from \"react\"\nimport { I18nString } from \"../../types/GoiDictionaryTypes\"\nimport { List as MuiList, Box } from \"@material-ui/core\"\nimport TinyTag from \"./TinyTag\"\nimport { ToggleEvents } from \"../../utils/PoiResponsive\"\n\nexport type GoiTranslationPropsType = {\n  i18nTranslation: {\n    translation: I18nString\n    hint?: I18nString\n  }\n  displayHint?: boolean\n  locales?: string[] // WIP\n  from?: string\n  displayFrom?: boolean\n}\ninterface GoiTranslationStateType {\n  displayHint: boolean\n}\n\nexport class GoiTranslation extends React.Component<\n  GoiTranslationPropsType,\n  GoiTranslationStateType\n> {\n  static defaultProps = {\n    i18nTranslation: {\n      translation: {\n        en: \"English Translation\",\n        zh: \"中文翻译\",\n        jp: \"日本語\",\n      },\n      hint: {\n        en: \"English Hint\",\n        zh: \"中文提示\",\n        jp: \"日本語\",\n      },\n    },\n    displayHint: true,\n    locales: [\"jp\", \"zh\", \"en\"],\n    from: \"\",\n    displayFrom: false,\n  }\n  constructor(props: GoiTranslationPropsType) {\n    super(props)\n    this.state = {\n      displayHint: false,\n    }\n  }\n  toggleStateHint = (display?: boolean) => {\n    if (typeof display === \"undefined\") {\n      display = !this.state.displayHint\n    }\n    this.setState({ displayHint: display })\n  }\n  render() {\n    const { i18nTranslation, from, displayFrom } = this.props\n    const displayHint = this.props.displayHint || this.state.displayHint\n    return (\n      <li>\n        <div\n          className=\"word-card-single-translation\"\n          style={{ fontSize: \"8vmin\" }}\n        >\n          {Object.entries(i18nTranslation.translation).map(\n            ([translationLanguage, translationText]) => {\n              return Object.keys(i18nTranslation.translation).length > 1\n                ? `${translationLanguage}:${translationText}; `\n                : `${translationText}`\n            }\n          )}\n        </div>\n        {i18nTranslation.hint && (\n          <div className=\"word-card-single-translation-hint\">\n            <TinyTag {...ToggleEvents(this.toggleStateHint)}>Hint</TinyTag>\n            {Object.entries(i18nTranslation.hint).map(\n              ([hintLanguage, hintText]) => (\n                <span\n                  key={hintLanguage}\n                  style={{ visibility: displayHint ? \"inherit\" : \"hidden\" }}\n                >\n                  {Object.keys(i18nTranslation.hint || {}).length > 1 && (\n                    <TinyTag>{hintLanguage}</TinyTag>\n                  )}\n                  <span\n                    dangerouslySetInnerHTML={{\n                      __html: hintText || \"\",\n                    }}\n                  />\n                </span>\n              )\n            )}\n          </div>\n        )}\n        {displayFrom && (\n          <div\n            style={{\n              color: \"gray\",\n              width: \"100%\",\n              fontSize: \"1.5vmin\",\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n            }}\n          >\n            from {from}\n          </div>\n        )}\n      </li>\n    )\n  }\n}\n\nexport default GoiTranslation\n","import React from \"react\"\nimport { I18nString } from \"../../types/GoiDictionaryTypes\"\nimport { List as MuiList, Box } from \"@material-ui/core\"\nimport TinyTag from \"./TinyTag\"\n\nexport type GoiSentencePropsType = {\n  i18nSentence: {\n    from: string\n    sentence: string\n    audios?: { cv: string; wav: string }[]\n    translation?: I18nString\n    source?: string\n    link?: string\n    contributor?: string\n  }\n  locales?: string[] // WIP\n  displayFrom?: boolean\n}\n\nexport class GoiSentence extends React.Component<GoiSentencePropsType> {\n  static defaultProps = {\n    i18nSentence: {\n      from: \"\",\n      sentence: \"It's a sample sentence.\",\n      translation: {\n        en: \"It's the translation of the sample sentence.\",\n        zh: \"这是例句的中文翻译\",\n        jp: \"これは例句の日本語の翻訳です\",\n      },\n      audios: [],\n      source: \"PoiGoi\",\n      link: \"https://goi.poi.dev/\",\n      contributor: \"凪\",\n    },\n    displayHint: true,\n    locales: [\"jp\", \"zh\", \"en\"],\n    displayFrom: false,\n  }\n  render() {\n    const { i18nSentence, displayFrom } = this.props\n    return (\n      <li>\n        <div\n          className=\"word-card-single-sentence\"\n          style={{ fontSize: \"4vmin\" }}\n        >\n          <span\n            dangerouslySetInnerHTML={{ __html: i18nSentence.sentence }}\n          ></span>\n        </div>\n        <div\n          className=\"word-card-single-sentence-translation\"\n          style={{ fontSize: \"4vmin\" }}\n        >\n          {i18nSentence.translation &&\n            Object.entries(i18nSentence.translation).map(\n              ([translationLanguage, translationText]) => {\n                return Object.keys(i18nSentence.translation || []).length > 1\n                  ? `${translationLanguage}:${translationText}; `\n                  : `${translationText}`\n              }\n            )}\n        </div>\n        {displayFrom && (\n          <div\n            style={{\n              color: \"gray\",\n              width: \"100%\",\n              fontSize: \"1.5vmin\",\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n            }}\n          >\n            from {i18nSentence.from}\n          </div>\n        )}\n      </li>\n    )\n  }\n}\n\nexport default GoiSentence\n","import React from \"react\"\nimport { GoiJaWordType } from \"../../types/GoiDictionaryTypes\"\nimport { List as MuiList, Box } from \"@material-ui/core\"\nimport GoiTranslation from \"./GoiTranslation\"\nimport TinyTag from \"./TinyTag\"\nimport GoiSentence from \"./GoiSentence\"\nimport BatteryUnknownIcon from \"@material-ui/icons/BatteryUnknownOutlined\"\nimport BatteryCharging20Icon from \"@material-ui/icons/BatteryCharging20Outlined\"\nimport BatteryCharging30Icon from \"@material-ui/icons/BatteryCharging30Outlined\"\nimport BatteryCharging50Icon from \"@material-ui/icons/BatteryCharging50Outlined\"\nimport BatteryCharging60Icon from \"@material-ui/icons/BatteryCharging60Outlined\"\nimport BatteryCharging80Icon from \"@material-ui/icons/BatteryCharging80Outlined\"\nimport BatteryCharging90Icon from \"@material-ui/icons/BatteryCharging90Outlined\"\nimport BatteryChargingFullIcon from \"@material-ui/icons/BatteryChargingFullOutlined\"\nimport BatteryAlertIcon from \"@material-ui/icons/BatteryAlertOutlined\"\n\nexport type WordCardPropsType = {\n  word: GoiJaWordType\n  display: \"simple\" | \"detailed\" | \"test-common\" | \"test-translation\"\n  status:\n    | \"input\"\n    | \"first\"\n    | \"perfect\"\n    | \"good\"\n    | \"warning\"\n    | \"failed\"\n    | \"peek\"\n    | \"review\"\n  dictionarys: string[]\n  level: number\n}\n\nconst circledNumber = (x: number) => {\n  if (x === 0) {\n    return String.fromCharCode(9450)\n  }\n  if (x >= 1 && x < 20) {\n    return String.fromCharCode(9311 + Math.floor(x))\n  }\n  return \"\"\n}\nexport class JaWordCard extends React.Component<WordCardPropsType> {\n  static defaultProps = {\n    word: {\n      common: \"Common Placeholder\",\n      translation: \"Translation Placeholder\",\n    },\n    display: \"detailed\",\n    status: \"view\",\n    dictionarys: [\n      \"KanaDictionary\",\n      \"GoiSimpleJaDictionary\",\n      \"BiaozhunRibenyu\",\n      \"XinbianRiyu\",\n      \"Xinbian\",\n      \"AnimeSong\",\n      \"Anime\",\n      \"JishoOrg\",\n      \"GooJisho\",\n    ],\n    level: -1,\n  }\n  render() {\n    const { level } = this.props\n    const statusColor =\n      this.props.status === \"input\"\n        ? \"gray\"\n        : this.props.status === \"first\"\n        ? \"blue\"\n        : this.props.status === \"perfect\"\n        ? \"green\"\n        : this.props.status === \"good\"\n        ? \"lightgreen\"\n        : this.props.status === \"warning\"\n        ? \"orange\"\n        : this.props.status === \"failed\"\n        ? \"red\"\n        : this.props.status === \"peek\"\n        ? \"blue\"\n        : this.props.status === \"review\"\n        ? \"black\"\n        : \"black\"\n    const word = Object.assign({}, this.props.word)\n    const sortedTranslationsDictionarys = []\n    for (let i = 0; i < this.props.dictionarys.length; i++) {\n      const tmpDictionary = this.props.dictionarys[i]\n      if (Object.keys(word.translations).includes(tmpDictionary)) {\n        sortedTranslationsDictionarys.push(tmpDictionary)\n      }\n    }\n    const filteredTranslationsDictionarys =\n      this.props.display !== \"detailed\"\n        ? sortedTranslationsDictionarys.slice(0, 1)\n        : sortedTranslationsDictionarys\n    const sortedSentences = []\n    for (let i = 0; i < this.props.dictionarys.length; i++) {\n      const tmpDictionary = this.props.dictionarys[i]\n      const tmpSentences = (word.sentences || []).filter(\n        sentence => sentence.from === tmpDictionary\n      )\n      sortedSentences.push(...tmpSentences)\n    }\n    const filteredSentences =\n      this.props.display !== \"detailed\"\n        ? sortedSentences.slice(0, 1)\n        : sortedSentences\n    console.debug(filteredTranslationsDictionarys, filteredSentences)\n    return (\n      <div className=\"word-card\">\n        <div\n          className=\"word-card-common\"\n          style={{\n            minHeight: \"20vmin\",\n            fontSize: \"10vmin\",\n            color: statusColor,\n            visibility:\n              this.props.display === \"test-common\" ? \"hidden\" : \"inherit\",\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n        >\n          <span dangerouslySetInnerHTML={{ __html: word.common }} />\n        </div>\n        <div\n          className=\"word-card-tags\"\n          style={{ display: \"flex\", alignItems: \"center\" }}\n        >\n          <div\n            style={{\n              display: \"inline-flex\",\n              visibility:\n                this.props.display === \"test-common\" ? \"hidden\" : \"inherit\",\n            }}\n          >\n            {level === 0 ? (\n              <BatteryUnknownIcon fontSize=\"small\" />\n            ) : level === 1 ? (\n              <BatteryCharging20Icon fontSize=\"small\" />\n            ) : level === 2 ? (\n              <BatteryCharging30Icon fontSize=\"small\" />\n            ) : level === 3 ? (\n              <BatteryCharging50Icon fontSize=\"small\" />\n            ) : level === 4 ? (\n              <BatteryCharging60Icon fontSize=\"small\" />\n            ) : level === 5 ? (\n              <BatteryCharging80Icon fontSize=\"small\" />\n            ) : level === 6 ? (\n              <BatteryCharging90Icon fontSize=\"small\" />\n            ) : level >= 7 ? (\n              <BatteryChargingFullIcon fontSize=\"small\" />\n            ) : (\n              <BatteryAlertIcon fontSize=\"small\" />\n            )}\n          </div>\n          <span\n            style={{\n              visibility:\n                this.props.display === \"test-common\" ? \"hidden\" : \"inherit\",\n            }}\n          >\n            {typeof word.tone === \"number\" && circledNumber(word.tone)}\n            {Array.isArray(word.tone) &&\n              word.tone\n                .map(\n                  singleTone =>\n                    typeof singleTone === \"number\" && circledNumber(singleTone)\n                )\n                .join()}\n            {level >= 0 && <TinyTag>練度{level}</TinyTag>}\n            {word.pos.includes(\"KANA\") && <TinyTag>仮名</TinyTag>}\n            {word.pos.includes(\"HIRAGANA\") && <TinyTag>平仮名</TinyTag>}\n            {word.pos.includes(\"KATAKANA\") && <TinyTag>片仮名</TinyTag>}\n            {word.pos.includes(\"DAKUON\") && <TinyTag>濁音</TinyTag>}\n            {word.pos.includes(\"YOON\") && <TinyTag>拗音</TinyTag>}\n            {word.pos.includes(\"CHOON\") && <TinyTag>長音</TinyTag>}\n            {word.pos.includes(\"VERB\") && <TinyTag>動詞</TinyTag>}\n            {word.pos.includes(\"GODAN\") && <TinyTag>五段活用</TinyTag>}\n            {word.pos.includes(\"KAMIICHIDAN\") && <TinyTag>上一段活用</TinyTag>}\n            {word.pos.includes(\"SHIMOICHIDAN\") && <TinyTag>下一段活用</TinyTag>}\n            {word.pos.includes(\"SAHEN\") && <TinyTag>サ変</TinyTag>}\n            {word.pos.includes(\"KAHEN\") && <TinyTag>カ変</TinyTag>}\n            {word.pos.includes(\"JIDOSHI\") && <TinyTag>自動詞</TinyTag>}\n            {word.pos.includes(\"TADOSHI\") && <TinyTag>他動詞</TinyTag>}\n            {word.pos.includes(\"ADJ\") && <TinyTag>形容詞</TinyTag>}\n            {word.pos.includes(\"KEIYODOSHI\") && <TinyTag>形容動詞</TinyTag>}\n            {word.pos.includes(\"NOUN\") && <TinyTag>名詞</TinyTag>}\n            {word.pos.includes(\"PROPER\") && <TinyTag>固有名詞</TinyTag>}\n            {word.pos.includes(\"PRON\") && <TinyTag>代名詞</TinyTag>}\n            {word.pos.includes(\"RENTAISHI\") && <TinyTag>連体詞</TinyTag>}\n            {word.pos.includes(\"ADV\") && <TinyTag>副詞</TinyTag>}\n            {word.pos.includes(\"CONJ\") && <TinyTag>接続詞</TinyTag>}\n            {word.pos.includes(\"INTERJ\") && <TinyTag>感動詞</TinyTag>}\n            {word.pos.includes(\"JODOSHI\") && <TinyTag>助動詞</TinyTag>}\n            {word.pos.includes(\"JOSHI\") && <TinyTag>助詞</TinyTag>}\n            {word.pos.includes(\"IDIOM\") && <TinyTag>熟語</TinyTag>}\n            {word.romaji && (\n              <>\n                <TinyTag>ローマ字</TinyTag>\n                {word.romaji}\n              </>\n            )}\n            {word.wapuro && (\n              <>\n                <TinyTag>ワープロ</TinyTag>\n                {word.wapuro}\n              </>\n            )}\n          </span>\n        </div>\n        <div className=\"word-card-translation\" style={{ color: statusColor }}>\n          <MuiList>\n            {filteredTranslationsDictionarys.map(dictionaryName => (\n              <GoiTranslation\n                key={dictionaryName}\n                i18nTranslation={word.translations[dictionaryName]}\n                displayHint={this.props.display !== \"test-common\"}\n                from={dictionaryName}\n                displayFrom={this.props.display === \"detailed\"}\n              />\n            ))}\n          </MuiList>\n        </div>\n        {this.props.display !== \"test-common\" && (\n          <div className=\"word-card-sentences\">\n            <MuiList>\n              {filteredSentences.map((sentence, sentenceId) => (\n                <GoiSentence\n                  key={sentenceId}\n                  i18nSentence={sentence}\n                  displayFrom={this.props.display === \"detailed\"}\n                />\n              ))}\n            </MuiList>\n          </div>\n        )}\n        {this.props.display === \"detailed\" && (\n          <div className=\"word-card-textbooks\">\n            {word.textbook.map((textbook, textbookId) => (\n              <TinyTag key={textbookId}>{textbook}</TinyTag>\n            ))}\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default JaWordCard\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport JaWordCard from \"../components/WordCards/JaWordCard\"\nimport * as PoiUser from \"../utils/PoiUser\"\nimport { LazyInitUserAction } from \"../actions/GoiUserActions\"\nimport { LazyInitSavingAction } from \"../actions/GoiSavingActions\"\nimport {\n  VerifyAnswerAction,\n  ShowNextWordAction,\n  UpdateIsTypingAction,\n} from \"../actions/GoiTesterActions\"\nimport { GoiSavingId, GoiJudgeResult } from \"../types/GoiTypes\"\nimport Helmet from \"react-helmet\"\nimport { GoiWordType, GoiJaWordType } from \"../types/GoiDictionaryTypes\"\nimport { RootStateType } from \"../states/RootState\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { Action } from \"redux\"\nimport Heap from \"../algorithm/Heap\"\nimport {\n  GoiWordRecordDataType,\n  GoiSavingDataType,\n  GoiWordRecord,\n} from \"../models/GoiSaving\"\nimport {\n  TextField,\n  InputAdornment,\n  IconButton,\n  Button,\n} from \"@material-ui/core\"\nimport SpellcheckIcon from \"@material-ui/icons/SpellcheckOutlined\"\nimport KeyboardReturnIcon from \"@material-ui/icons/KeyboardReturnOutlined\"\nimport RedoIcon from \"@material-ui/icons/RedoOutlined\"\nimport ForwardIcon from \"@material-ui/icons/ForwardOutlined\"\nimport MoreVertIcon from \"@material-ui/icons/MoreVertOutlined\"\nimport MoreHorizIcon from \"@material-ui/icons/MoreHorizOutlined\"\nimport LinkOffIcon from \"@material-ui/icons/LinkOffOutlined\"\nimport { display } from \"@material-ui/system\"\nimport { withTranslation, WithTranslation } from \"react-i18next\"\n\ntype GoiTesterPropsType = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps> &\n  WithTranslation\ninterface GoiTesterStateType {\n  testerInput: string\n  displayDetail: boolean\n}\nexport class GoiTester extends React.Component<\n  GoiTesterPropsType,\n  GoiTesterStateType\n> {\n  constructor(props: GoiTesterPropsType) {\n    super(props)\n    this.state = {\n      testerInput: \"\",\n      displayDetail: false,\n    }\n  }\n  JudgeInputElement: HTMLInputElement | null = null\n  async componentDidMount() {\n    console.debug(\"Lasy init user\")\n    const poiUserId = (await this.props.lazyInitUser()) as PoiUser.PoiUserId\n    console.debug(\"Lasy init saving\")\n    const savingId = await this.props.lazyInitSaving({ poiUserId })\n    await this.props.showNextWord({ poiUserId, savingId })\n  }\n  requestJudge = async ({ skip }: { skip?: boolean } = {}) => {\n    const { poiUserId, savingId } = this.props\n    const word: GoiJaWordType = this.props.currentWord.toJS()\n    const judgeResult = await this.props.judgeAnswer(\n      {\n        answer: this.state.testerInput,\n        word,\n        skip,\n      },\n      {\n        poiUserId,\n        savingId,\n      }\n    )\n    this.setState({ testerInput: \"\" })\n    if (\n      judgeResult === \"Correct\" ||\n      judgeResult === \"Accepted\" ||\n      judgeResult === \"Skipped\"\n    ) {\n      await this.requestNext()\n    }\n  }\n  requestNext = async ({ forget }: { forget?: boolean } = {}) => {\n    forget = typeof forget !== \"undefined\" ? forget : false\n    const {\n      poiUserId,\n      savingId,\n      currentWordKey,\n      learnedCandidates,\n      prioritiedCandidates,\n      pendingCandidates,\n    } = this.props\n    if (forget) {\n      await GoiWordRecord(poiUserId, savingId, currentWordKey).Forget()\n    }\n    await this.props.showNextWord(\n      { poiUserId, savingId },\n      {\n        ...(!forget && { currentWordKey }),\n        learnedCandidates,\n        prioritiedCandidates,\n        pendingCandidates,\n      }\n    )\n    this.setState({ testerInput: \"\", displayDetail: false })\n  }\n  render() {\n    const { t, i18n } = this.props\n    const word: GoiJaWordType = this.props.currentWord.toJS()\n    const savingLanguage =\n      this.props.saving && this.props.saving.Language\n        ? this.props.saving.Language\n        : \"en\"\n    const wordCardStatus =\n      this.props.judgeResult === \"Pending\"\n        ? \"input\"\n        : this.props.judgeResult === \"Correct\"\n        ? \"perfect\"\n        : this.props.judgeResult === \"Accepted\"\n        ? \"good\"\n        : this.props.judgeResult === \"Rejected\"\n        ? \"warning\"\n        : this.props.judgeResult === \"Wrong\"\n        ? \"failed\"\n        : \"review\"\n    const wordCardDisplay =\n      this.props.judgeResult === \"Pending\"\n        ? \"test-common\"\n        : this.state.displayDetail\n        ? \"detailed\"\n        : \"simple\"\n    return (\n      <div className=\"goi-tester\" style={{ marginTop: \"20px\" }}>\n        <Helmet>\n          {savingLanguage.startsWith(\"ja\") ? (\n            this.props.judgeResult === \"Pending\" ? (\n              <title>{t(\"PageTitleWhenEmptyForJaLearner\", \"PoiGoi\")}</title>\n            ) : (\n              <title>\n                {t(\"PageTitleWhenWordIsDisplayedForJaLearner\", {\n                  defaultValue: \"PoiGoi - {{wordkey}}\",\n                  wordkey: word.key,\n                })}\n              </title>\n            )\n          ) : this.props.judgeResult === \"Pending\" ? (\n            <title>{t(\"PageTitleWhenEmpty\", \"PoiGoi\")}</title>\n          ) : (\n            <title>\n              {t(\"PageTitleWhenWordIsDisplayed\", {\n                defaultValue: \"PoiGoi - {{wordkey}}\",\n                wordkey: word.key,\n              })}\n            </title>\n          )}\n        </Helmet>\n        <div style={{ display: \"flex\" }}>\n          <TextField\n            label={t(\"MainInputLabel\", \"Justify your answer\")}\n            variant=\"outlined\"\n            value={this.state.testerInput}\n            style={{ flexGrow: 1 }}\n            onFocus={() => {\n              this.props.updateIsTyping({ isTyping: true })\n            }}\n            onBlur={() => {\n              this.props.updateIsTyping({ isTyping: false })\n            }}\n            onChange={e => {\n              this.setState({ testerInput: e.target.value })\n            }}\n            InputProps={{\n              placeholder:\n                this.props.judgeResult === \"Rejected\" ||\n                this.props.judgeResult === \"Wrong\"\n                  ? t(\n                      \"MainInputWrongPlaceholder\",\n                      \"Type correct answer to continue\"\n                    )\n                  : savingLanguage.startsWith(\"ja\")\n                  ? t(\n                      \"MainInputPendingPlaceholderForJaLearner\",\n                      \"Use japanese IME\"\n                    )\n                  : t(\"MainInputPendingPlaceholder\", \"Type your answer here\"),\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"Request judge\"\n                    edge=\"end\"\n                    onClick={() => this.requestJudge()}\n                  >\n                    <KeyboardReturnIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n              onKeyDown: e => {\n                if (e.key === \"Enter\") {\n                  this.requestJudge()\n                }\n              },\n            }}\n          ></TextField>\n          {this.props.judgeResult === \"Pending\" ? (\n            <Button\n              size=\"small\"\n              aria-label=\"Skip current word\"\n              onClick={() => this.requestJudge({ skip: true })}\n            >\n              {t(\"SkipWordButtonText\", \"Skip\")}\n              <RedoIcon fontSize=\"small\" />\n            </Button>\n          ) : (\n            <Button\n              size=\"small\"\n              aria-label=\"Show next word\"\n              onClick={() => this.requestNext()}\n            >\n              {t(\"NextWordButtonText\", \"Skip\")}\n              <ForwardIcon fontSize=\"small\" />\n            </Button>\n          )}\n        </div>\n        <JaWordCard\n          word={word}\n          display={wordCardDisplay}\n          status={wordCardStatus}\n          {...(this.props.currentLevel !== null && {\n            level: this.props.currentLevel,\n          })}\n        />\n        {!wordCardDisplay.startsWith(\"test\") && (\n          <div className=\"word-card-actions\">\n            <Button\n              aria-label=\"detail\"\n              onClick={() => {\n                this.setState({ displayDetail: true })\n              }}\n              style={{ color: \"gray\" }}\n            >\n              <MoreHorizIcon />\n              {t(\"WordDetailButtonText\", \"Detail\")}\n            </Button>\n            {this.state.displayDetail && (\n              <Button\n                aria-label=\"forget\"\n                onClick={() => {\n                  this.requestNext({ forget: true })\n                }}\n                style={{ color: \"gray\" }}\n              >\n                <LinkOffIcon />\n                {t(\"ForgetWordButtonText\", \"Forget\")}\n              </Button>\n            )}\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: RootStateType) => {\n  console.debug(\"GoiTester state: \", state)\n  const props = {\n    poiUserId: state.GoiUser.get(\"PoiUserId\") as PoiUser.PoiUserId,\n    savingId: state.GoiSaving.get(\"SavingId\") as GoiSavingId,\n    currentWord: state.GoiTester.get(\"CurrentWord\"),\n    currentWordKey: state.GoiTester.getIn([\"CurrentWord\", \"key\"]) as string,\n    currentLevel: state.GoiTester.has(\"Record\")\n      ? (state.GoiTester.getIn([\"Record\", \"Level\"]) as number)\n      : null,\n    judgeResult: state.GoiTester.get(\"JudgeResult\") as GoiJudgeResult,\n    saving: state.GoiSaving.get(\"Saving\") as\n      | GoiSavingDataType\n      | null\n      | undefined,\n    tester: state.GoiTester,\n    learnedCandidates: state.GoiTester.get(\"LearnedCandidates\"),\n    prioritiedCandidates: state.GoiTester.get(\"PrioritiedCandidates\"),\n    pendingCandidates: state.GoiTester.get(\"PendingCandidates\"),\n  }\n  console.debug(\"GoiTester props: \", props)\n  return props\n}\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<RootStateType, void, Action>\n) => {\n  return {\n    lazyInitUser: () => dispatch(LazyInitUserAction()),\n    lazyInitSaving: ({ poiUserId }: { poiUserId: PoiUser.PoiUserId }) =>\n      dispatch(LazyInitSavingAction({ poiUserId })),\n    updateIsTyping: ({ isTyping }: { isTyping: boolean }) =>\n      dispatch(UpdateIsTypingAction({ isTyping })),\n    showNextWord: (\n      {\n        poiUserId,\n        savingId,\n      }: { poiUserId: PoiUser.PoiUserId; savingId: GoiSavingId },\n      {\n        currentWordKey,\n        learnedCandidates,\n        prioritiedCandidates,\n        pendingCandidates,\n      }: {\n        currentWordKey?: string\n        learnedCandidates?: Heap<GoiWordRecordDataType>\n        prioritiedCandidates?: Heap<GoiWordRecordDataType>\n        pendingCandidates?: Heap<GoiWordRecordDataType>\n      } = {}\n    ) =>\n      dispatch(\n        ShowNextWordAction(\n          { poiUserId, savingId },\n          {\n            currentWordKey,\n            learnedCandidates,\n            prioritiedCandidates,\n            pendingCandidates,\n          }\n        )\n      ),\n    judgeAnswer: (\n      {\n        answer,\n        word,\n        skip,\n      }: {\n        answer: string\n        word: GoiWordType\n        skip?: boolean\n      },\n      {\n        poiUserId,\n        savingId,\n      }: {\n        poiUserId: PoiUser.PoiUserId\n        savingId: GoiSavingId\n      }\n    ) =>\n      dispatch(\n        VerifyAnswerAction({ answer, word, skip }, { poiUserId, savingId })\n      ),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withTranslation(\"GoiTester\")(GoiTester))\n","import React from \"react\"\nimport { useMediaQuery, useTheme } from \"@material-ui/core\"\nimport Dialog, { DialogProps } from \"@material-ui/core/Dialog\"\nimport { isWidthDown } from \"@material-ui/core/withWidth\"\n\nconst ResponsiveDialog = (props: DialogProps) => {\n  const smDown = useMediaQuery(useTheme().breakpoints.down(\"xs\"))\n  // return (\n  //   <Dialog {...props} fullScreen={smDown}>\n  //     {props.children}\n  //   </Dialog>\n  // )\n  return (\n    <Dialog {...props} PaperProps={{ style: { margin: \"10px\" } }}>\n      {props.children}\n    </Dialog>\n  )\n}\n\nexport default ResponsiveDialog\n","import { I18nString } from \"../types/GoiDictionaryTypes\"\nimport { LocaleCode } from \"../types/PoiI18nTypes\"\n\nexport const LookUp = (i18nString: I18nString, locale: LocaleCode) => {\n  // TODO(nagi): Write better lookup\n  if (locale.startsWith(\"zh\")) {\n    if (i18nString.zh) {\n      return i18nString.zh\n    }\n  }\n  if (locale.startsWith(\"ja\")) {\n    if (i18nString.ja) {\n      return i18nString.ja\n    }\n  }\n  return i18nString.en || \"\"\n}\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport {\n  TextField,\n  Container,\n  Dialog,\n  InputAdornment,\n  IconButton,\n  Typography,\n  Divider,\n  List as MuiList,\n  ListItem as MuiListItem,\n  ListItemText as MuiListItemText,\n  ListItemSecondaryAction as MuiListItemSecondaryAction,\n  Button,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  useMediaQuery,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\"\nimport SearchIcon from \"@material-ui/icons/SearchOutlined\"\nimport * as PoiUser from \"../utils/PoiUser\"\nimport {\n  DisplayWordAdderAction,\n  AddPendingQueryAction,\n  AddPendingQuerysAction,\n  RemovePendingQueryAction,\n  AddWordsFromQuerysAction,\n  ClearPendingWordsAction,\n} from \"../actions/WordAdderActions\"\nimport {\n  WordAdderSuggestionQueryType,\n  WordAdderQueryCountersType,\n  WordAdderPendingQueryType,\n  WordAdderQueryType,\n} from \"../states/WordAdderState\"\nimport { GoiSavingId } from \"../types/GoiTypes\"\nimport { RootStateType } from \"../states/RootState\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { Action } from \"redux\"\nimport { ShowNextWordAction } from \"../actions/GoiTesterActions\"\nimport DeleteIcon from \"@material-ui/icons/DeleteOutlined\"\nimport AddIcon from \"@material-ui/icons/AddOutlined\"\nimport CloseIcon from \"@material-ui/icons/CloseOutlined\"\nimport ExploreOffIcon from \"@material-ui/icons/ExploreOffOutlined\"\nimport { useTheme } from \"@material-ui/styles\"\nimport ResponsiveDialog from \"../components/ResponsiveDialog\"\nimport { I18nString } from \"../types/GoiDictionaryTypes\"\nimport { withTranslation, WithTranslation } from \"react-i18next\"\nimport { LookUp } from \"../utils/PoiI18n\"\nimport { LocaleCode } from \"../types/PoiI18nTypes\"\n\ntype WordAdderPropsType = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps> &\n  WithTranslation\ninterface WordAdderStateType {\n  customQuery: string\n  addingWordsProgress: boolean\n}\nconst QueryRegexPopup = ({ regex }: { regex: string }) => {\n  return <span style={{ color: \"gray\", fontSize: \"0.5rem\" }}>/{regex}/</span>\n}\nexport class WordAdder extends React.Component<\n  WordAdderPropsType,\n  WordAdderStateType\n> {\n  constructor(props: WordAdderPropsType) {\n    super(props)\n    this.state = { customQuery: \"\", addingWordsProgress: false }\n  }\n  getSuggestionQuerys = (): string[] => {\n    const suggestions: WordAdderSuggestionQueryType[] = this.props.suggestions.toJS()\n    return suggestions.map(suggestion => suggestion.Query)\n  }\n  getPendingQuerys = (): string[] => {\n    const pendings: WordAdderPendingQueryType[] = this.props.pendings.toJS()\n    return pendings.map(pending => pending.Query)\n  }\n  addSuggestion = async (\n    suggestion: WordAdderSuggestionQueryType\n  ): Promise<void> => {\n    const { poiUserId, savingId } = this.props\n    if (Array.isArray(suggestion.SubQuerys)) {\n      await this.props.addPendingQuerys(\n        {\n          querys: [\n            ...suggestion.SubQuerys,\n            { Display: suggestion.Display, Query: suggestion.Query },\n          ],\n        },\n        { poiUserId, savingId }\n      )\n    }\n  }\n  clearAllPendingQuerys = async () => {\n    await Promise.all(\n      this.getPendingQuerys().map(query =>\n        this.props.removePendingQuery({ query })\n      )\n    )\n  }\n  onClickConfirm = async () => {\n    const { poiUserId, savingId } = this.props\n    this.setState({ addingWordsProgress: true })\n    await this.props.addWordsFromQuerys(\n      { querys: this.getPendingQuerys() },\n      { poiUserId, savingId }\n    )\n    this.setState({ addingWordsProgress: false })\n    this.props.close()\n    await this.clearAllPendingQuerys()\n    await this.props.showNextWord(poiUserId, savingId)\n  }\n  addCustomQuery = () => {\n    const { poiUserId, savingId } = this.props\n    this.props.addPendingQuery(\n      {\n        display: { en: \"Custom\", zh: \"自定义搜索条件\" },\n        query: this.state.customQuery.trim(),\n      },\n      { poiUserId, savingId }\n    )\n  }\n  render() {\n    const { t, i18n } = this.props\n    if (!this.props.display) {\n      return <div className=\"word-adder\"></div>\n    }\n    const { poiUserId, savingId } = this.props\n    const { learnedCount, prioritiedCount, pendingCount } = {\n      learnedCount: this.props.status.get(\"LearnedCount\") as number,\n      prioritiedCount: this.props.status.get(\"PrioritiedCount\") as number,\n      pendingCount: this.props.status.get(\"PendingCount\") as number,\n    }\n    const suggestions: WordAdderSuggestionQueryType[] = this.props.suggestions.toJS()\n    const pendings: WordAdderPendingQueryType[] = this.props.pendings.toJS()\n    const counters: WordAdderQueryCountersType = this.props.counters.toJS()\n    return (\n      <ResponsiveDialog className=\"word-adder\" open={this.props.display}>\n        <DialogTitle>{t(\"WordAdderTitle\", \"Add words\")}</DialogTitle>\n        <DialogContent dividers>\n          <MuiList dense={true}>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <TextField\n                label={t(\"SavingStatusLearnedCountLabel\", \"Learned\")}\n                value={learnedCount >= 0 ? learnedCount : \"...\"}\n                margin=\"none\"\n                style={{ marginRight: \"10px\", flex: 1 }}\n                InputProps={{ readOnly: true }}\n              ></TextField>\n              <TextField\n                label={t(\"SavingStatusPrioritiedCountLabel\", \"Prioritied\")}\n                value={prioritiedCount >= 0 ? prioritiedCount : \"...\"}\n                margin=\"none\"\n                style={{ marginRight: \"10px\", flex: 1 }}\n                InputProps={{ readOnly: true }}\n              ></TextField>\n              <TextField\n                label={t(\"SavingStatusPendingCountLabel\", \"Pending\")}\n                value={pendingCount >= 0 ? pendingCount : \"...\"}\n                margin=\"none\"\n                style={{ flex: 1 }}\n                InputProps={{\n                  readOnly: true,\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        size=\"small\"\n                        aria-label=\"Clear pending words\"\n                        onClick={() =>\n                          this.props.clearPendingWords({\n                            poiUserId,\n                            savingId,\n                          })\n                        }\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              ></TextField>\n            </div>\n            <MuiListItem></MuiListItem>\n            <Divider component=\"li\" />\n            <li>\n              <Typography display=\"block\" variant=\"caption\">\n                {t(\"SuggestionSectionTitle\", \"Suggested Word Querys\")}\n              </Typography>\n            </li>\n            {suggestions.map(suggestion => {\n              const {\n                TotalCount,\n                LearnedCount,\n                AddedCount,\n                NewCount,\n              } = counters[suggestion.Query]\n                ? counters[suggestion.Query]\n                : {\n                    TotalCount: -1,\n                    LearnedCount: -1,\n                    AddedCount: -1,\n                    NewCount: -1,\n                  }\n              return (\n                <MuiListItem key={`suggestion${suggestion.Query}`}>\n                  <MuiListItemText\n                    primary={\n                      <>\n                        {LookUp(\n                          suggestion.Display,\n                          i18n.language as LocaleCode\n                        )}\n                        <QueryRegexPopup regex={suggestion.Query} />\n                        {counters[suggestion.Query] &&\n                          t(\"CountQueryTotalResult\", {\n                            defaultValue: \" {{total}} words\",\n                            total: TotalCount >= 0 ? TotalCount : \"...\",\n                          })}\n                      </>\n                    }\n                    secondary={\n                      counters[suggestion.Query] ? (\n                        <>\n                          {t(\"CountSuggestionQueryResult\", {\n                            defaultValue:\n                              \"Learned {{learned}} | Added {{added}} | New {{new}}\",\n                            learned: LearnedCount >= 0 ? LearnedCount : \"...\",\n                            added: AddedCount >= 0 ? AddedCount : \"...\",\n                            new: NewCount >= 0 ? NewCount : \"...\",\n                          })}\n                        </>\n                      ) : null\n                    }\n                  ></MuiListItemText>\n                  <MuiListItemSecondaryAction>\n                    <IconButton\n                      edge=\"end\"\n                      aria-label=\"Add suggestion query\"\n                      onClick={() => this.addSuggestion(suggestion)}\n                    >\n                      <AddIcon />\n                    </IconButton>\n                  </MuiListItemSecondaryAction>\n                </MuiListItem>\n              )\n            })}\n            <div style={{ display: \"flex\" }}>\n              <TextField\n                label={t(\"CustomQueryInputLabel\", \"Custom Query\")}\n                variant=\"outlined\"\n                value={this.state.customQuery}\n                style={{ flexGrow: 1 }}\n                onChange={e => {\n                  this.setState({ customQuery: e.target.value })\n                }}\n                InputProps={{\n                  placeholder: t(\n                    \"CustomQueryInputPlaceholder\",\n                    \"(e.g. JLPT-N5) Accept RegExp\"\n                  ),\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"add query\"\n                        edge=\"end\"\n                        onClick={() => this.addCustomQuery()}\n                      >\n                        <SearchIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                  onKeyDown: e => {\n                    if (e.key === \"Enter\") {\n                      this.addCustomQuery()\n                    }\n                  },\n                }}\n              ></TextField>\n            </div>\n            <MuiListItem></MuiListItem>\n            <Divider component=\"li\" />\n            <li>\n              <Typography display=\"block\" variant=\"caption\">\n                {t(\"WordsToAddSectionTitle\", \"Words to add (Order matters)\")}\n              </Typography>\n            </li>\n            {pendings.length ? (\n              <>\n                <MuiListItem key=\"ClearAllPendingQuerys\">\n                  <MuiListItemText\n                    primary={t(\"CountTotalPendingWords\", {\n                      defaultValue: \"Total new: {{new}}\",\n                      new: \"[WIP]\",\n                    })}\n                    secondary={t(\n                      \"ClearAllPendingsItemText\",\n                      \"Click right button to clear list\"\n                    )}\n                  ></MuiListItemText>\n                  <MuiListItemSecondaryAction>\n                    <IconButton\n                      edge=\"end\"\n                      aria-label=\"clear all pending query\"\n                      onClick={() => this.clearAllPendingQuerys()}\n                    >\n                      <ExploreOffIcon />\n                    </IconButton>\n                  </MuiListItemSecondaryAction>\n                </MuiListItem>\n                {pendings.map(pending => (\n                  <MuiListItem key={`pending${pending.Query}`}>\n                    <MuiListItemText\n                      primary={\n                        <>\n                          {LookUp(pending.Display, i18n.language as LocaleCode)}\n                          <QueryRegexPopup regex={pending.Query} />\n                          {counters[pending.Query] &&\n                            t(\"CountQueryTotalResult\", {\n                              defaultValue: \" {{total}} words\",\n                              total: counters[pending.Query].TotalCount,\n                            })}\n                        </>\n                      }\n                      secondary={\n                        counters[pending.Query] ? (\n                          <>\n                            {t(\"CountPendingQueryResult\", {\n                              defaultValue:\n                                \"Learned {{learned}} | Added {{added}} | New {{new}}\",\n                              learned: counters[pending.Query].LearnedCount,\n                              added: counters[pending.Query].AddedCount,\n                              new: counters[pending.Query].NewCount,\n                            })}\n                          </>\n                        ) : null\n                      }\n                    ></MuiListItemText>\n\n                    <MuiListItemSecondaryAction>\n                      <IconButton\n                        edge=\"end\"\n                        aria-label=\"remove pending query\"\n                        onClick={() =>\n                          this.props.removePendingQuery({\n                            query: pending.Query,\n                          })\n                        }\n                      >\n                        <CloseIcon />\n                      </IconButton>\n                    </MuiListItemSecondaryAction>\n                  </MuiListItem>\n                ))}\n              </>\n            ) : (\n              <MuiListItem>\n                <MuiListItemText>\n                  {t(\"NoWordsItemPlaceholder\", \"No words to add\")}\n                </MuiListItemText>\n              </MuiListItem>\n            )}\n            <Divider component=\"li\" />\n            <li>\n              <Typography display=\"block\" variant=\"caption\">\n                [WIP]\n                {t(\"FiltersSectionTitle\", \"Filters\")}\n              </Typography>\n            </li>\n            <div style={{ display: \"flux\" }}>\n              <FormControlLabel\n                control={\n                  <Checkbox checked={true} disabled value=\"BasicFilter\" />\n                }\n                label={t(\"BasicFilterLabel\", \"Basic\")}\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={true}\n                    disabled\n                    onChange={() => {}}\n                    value=\"ProperFilter\"\n                  />\n                }\n                label={t(\"ProperFilterLabel\", \"Proper\")}\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox checked={true} disabled value=\"IdiomFilter\" />\n                }\n                label={t(\"IdiomFilterLabel\", \"Idiom\")}\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox checked={true} disabled value=\"ExtraFilter\" />\n                }\n                label={t(\"ExtraFilterLabel\", \"Extra\")}\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox checked={true} disabled value=\"ForgotFilter\" />\n                }\n                label={t(\"ForgotFilterLabel\", \"Forgot\")}\n              />\n            </div>\n          </MuiList>\n        </DialogContent>\n        <DialogActions>\n          {this.state.addingWordsProgress ? (\n            <Button disabled>\n              {t(\"AddingWordsProgressText\", \"Adding words...\")}\n            </Button>\n          ) : (\n            <>\n              <Button onClick={() => this.props.close()}>\n                {t(\"WordAdderCancelButtonText\", \"Cancel\")}\n              </Button>\n              {pendings.length <= 0 ? (\n                <Button disabled>\n                  {t(\"NoPendingWordsPromptText\", \"No words\")}\n                </Button>\n              ) : (\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={this.onClickConfirm}\n                >\n                  {t(\"WordAdderConfirmButtonText\", \"Add these words\")}\n                </Button>\n              )}\n            </>\n          )}\n        </DialogActions>\n      </ResponsiveDialog>\n    )\n  }\n}\n\nconst mapStateToProps = (state: RootStateType) => {\n  console.debug(\"WordAdderContainer state: \", state)\n  const props = {\n    display: state.WordAdder.get(\"Display\") as boolean,\n    status: state.WordAdder.get(\"Status\"),\n    suggestions: state.WordAdder.get(\"Suggestions\"),\n    pendings: state.WordAdder.get(\"Pendings\"),\n    counters: state.WordAdder.get(\"Counters\"),\n    saving: state.GoiSaving.get(\"Saving\"),\n    poiUserId: state.GoiUser.get(\"PoiUserId\") as PoiUser.PoiUserId,\n    savingId: state.GoiSaving.get(\"SavingId\") as GoiSavingId,\n  }\n  console.debug(\"WordAdderContainer props: \", props)\n  return props\n}\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<RootStateType, void, Action>\n) => {\n  return {\n    clearPendingWords: ({\n      poiUserId,\n      savingId,\n    }: {\n      poiUserId: PoiUser.PoiUserId\n      savingId: GoiSavingId\n    }) => dispatch(ClearPendingWordsAction({ poiUserId, savingId })),\n    addPendingQuery: (\n      { display, query }: { display: I18nString; query: string },\n      {\n        poiUserId,\n        savingId,\n      }: { poiUserId: PoiUser.PoiUserId; savingId: GoiSavingId }\n    ) =>\n      dispatch(\n        AddPendingQueryAction({ display, query }, { poiUserId, savingId })\n      ),\n    addPendingQuerys: (\n      {\n        querys,\n      }: {\n        querys: WordAdderQueryType[]\n      },\n      {\n        poiUserId,\n        savingId,\n      }: {\n        poiUserId: PoiUser.PoiUserId\n        savingId: GoiSavingId\n      }\n    ) => dispatch(AddPendingQuerysAction({ querys }, { poiUserId, savingId })),\n    removePendingQuery: ({ query }: { query: string }) =>\n      dispatch(RemovePendingQueryAction({ query })),\n    addWordsFromQuerys: (\n      { querys }: { querys: string[] },\n      {\n        poiUserId,\n        savingId,\n      }: { poiUserId: PoiUser.PoiUserId; savingId: GoiSavingId }\n    ) =>\n      dispatch(AddWordsFromQuerysAction({ querys }, { poiUserId, savingId })),\n    close: () => dispatch(DisplayWordAdderAction({ display: false })),\n    showNextWord: (poiUserId: PoiUser.PoiUserId, savingId: GoiSavingId) =>\n      dispatch(ShowNextWordAction({ poiUserId, savingId })),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withTranslation(\"WordAdder\")(WordAdder))\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { withTranslation, WithTranslation } from \"react-i18next\"\nimport { Action } from \"redux\"\nimport { Button, GridList, GridListTile, IconButton } from \"@material-ui/core\"\nimport { SpeedDial, SpeedDialAction } from \"@material-ui/lab\"\nimport { navigate } from \"gatsby\"\nimport { RootStateType } from \"../states/RootState\"\nimport * as PoiUser from \"../utils/PoiUser\"\nimport { GoiSavingId } from \"../types/GoiTypes\"\nimport { ToggleEvents } from \"../utils/PoiResponsive\"\nimport { GoiWordRecordDataType, GoiSavingDataType } from \"../models/GoiSaving\"\nimport { ShowWordAdderAction } from \"../actions/WordAdderActions\"\nimport Heap from \"../algorithm/Heap\"\n\nimport AddIcon from \"@material-ui/icons/AddOutlined\"\nimport CloudOffIcon from \"@material-ui/icons/CloudOffOutlined\"\nimport CreateIcon from \"@material-ui/icons/CreateOutlined\"\nimport FingerprintIcon from \"@material-ui/icons/FingerprintOutlined\"\nimport FirstPageIcon from \"@material-ui/icons/FirstPageOutlined\"\nimport FlagIcon from \"@material-ui/icons/FlagOutlined\"\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumberedOutlined\"\nimport FormatQuoteIcon from \"@material-ui/icons/FormatQuoteOutlined\"\nimport HighlightIcon from \"@material-ui/icons/HighlightOutlined\"\nimport MenuIcon from \"@material-ui/icons/MenuOutlined\"\nimport MoreHorizIcon from \"@material-ui/icons/MoreHorizOutlined\"\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNextOutlined\"\nimport PersonIcon from \"@material-ui/icons/PersonOutlined\"\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlayOutlined\"\nimport SearchIcon from \"@material-ui/icons/SearchOutlined\"\nimport ShareIcon from \"@material-ui/icons/ShareOutlined\"\nimport ShuffleIcon from \"@material-ui/icons/ShuffleOutlined\"\nimport SmsIcon from \"@material-ui/icons/SmsOutlined\"\nimport SyncIcon from \"@material-ui/icons/SyncOutlined\"\nimport ThumbsUpDownIcon from \"@material-ui/icons/ThumbsUpDownOutlined\"\nimport VolumeOffIcon from \"@material-ui/icons/VolumeOffOutlined\"\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUpOutlined\"\nimport RefreshIcon from \"@material-ui/icons/RefreshOutlined\"\nimport ExposureNeg1Icon from \"@material-ui/icons/ExposureNeg1Outlined\"\n\ntype CommandsBarPropsType = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps> &\n  WithTranslation\ninterface CommandsBarStateType {\n  isMenuOpened: boolean\n  isCommandsExpanded: boolean\n}\n\nexport class CommandsBar extends React.Component<\n  CommandsBarPropsType,\n  CommandsBarStateType\n> {\n  commandsContainerRef = React.createRef<HTMLDivElement>()\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      isMenuOpened: false,\n      isCommandsExpanded: false,\n    }\n  }\n  navigate(to: string) {\n    navigate(to, { replace: true })\n  }\n  openMenu = () => {\n    this.setState({ isMenuOpened: true })\n  }\n  closeMenu = () => {\n    this.setState({ isMenuOpened: false })\n  }\n  toggleMenu = (display?: boolean) => {\n    if (typeof display === \"undefined\") {\n      display = !this.state.isMenuOpened\n    }\n    this.setState({ isMenuOpened: display })\n  }\n  render() {\n    const { t } = this.props\n    const { poiUserId, savingId } = this.props\n    const smDown: boolean =\n      typeof window !== \"undefined\" ? window.innerWidth < 600 : false\n    const savingLanguage =\n      this.props.saving && this.props.saving.Language\n        ? this.props.saving.Language\n        : \"en\"\n    return (\n      <div\n        className=\"commands-bar\"\n        style={{\n          visibility: smDown && this.props.isTyping ? \"hidden\" : \"inherit\",\n          position: \"absolute\",\n          bottom: \"20px\",\n          right: \"20px\",\n          display: \"inline-flex\",\n          alignItems: \"flex-end\",\n          maxWidth: \"calc(100vw - 20px)\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            height: \"40px\",\n            marginBottom: \"8px\",\n          }}\n        >\n          <div\n            style={{\n              margin: \"auto\",\n            }}\n          >\n            {smDown && this.state.isCommandsExpanded && (\n              <IconButton\n                size=\"small\"\n                aria-label=\"Scroll command bar to left end\"\n                onClick={() => {\n                  this.commandsContainerRef.current &&\n                    this.commandsContainerRef.current.scrollTo({\n                      left: -10000,\n                      behavior: \"smooth\",\n                    })\n                }}\n              >\n                <FirstPageIcon fontSize=\"small\" />\n              </IconButton>\n            )}\n          </div>\n        </div>\n        <div\n          ref={this.commandsContainerRef}\n          style={{\n            display: \"flex\",\n            height: \"40px\",\n            marginTop: \"8px\",\n            marginBottom: \"8px\",\n            overflowX: \"auto\",\n            overflowY: \"hidden\",\n            direction: \"rtl\",\n          }}\n        >\n          <div style={{ display: \"inline-flex\", direction: \"ltr\" }}>\n            {this.state.isCommandsExpanded ? (\n              <Button\n                size=\"small\"\n                style={{ whiteSpace: \"nowrap\" }}\n                onClick={() => {\n                  this.setState({ isCommandsExpanded: false })\n                }}\n              >\n                {/* parse text or audio to add new words */}\n                {t(\"FoldButtonText\", \"Less\")}\n                <NavigateNextIcon fontSize=\"small\" />\n              </Button>\n            ) : (\n              <Button\n                size=\"small\"\n                style={{ whiteSpace: \"nowrap\" }}\n                onClick={() => {\n                  this.setState({ isCommandsExpanded: true })\n                }}\n              >\n                {/* parse text or audio to add new words */}\n                {t(\"ExpandButtonText\", \"More\")}\n                <MoreHorizIcon fontSize=\"small\" />\n              </Button>\n            )}\n            {this.state.isCommandsExpanded && (\n              <>\n                <Button size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                  {/* parse text or audio to add new words */}\n                  [WIP]{t(\"ParseButtonText\", \"Parse\")}\n                  <FormatQuoteIcon fontSize=\"small\" />\n                </Button>\n                <Button size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                  [WIP]{t(\"SearchButtonText\", \"Search\")}\n                  <SearchIcon fontSize=\"small\" />\n                </Button>\n                <Button size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                  [WIP]{t(\"RevisitButtonText\", \"Revisit\")}\n                  <RefreshIcon fontSize=\"small\" />\n                  {false && <ExposureNeg1Icon fontSize=\"small\" />}\n                </Button>\n                <Button size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                  [WIP]{t(\"OrderButtonText\", \"Order\")}\n                  <PlaylistPlayIcon fontSize=\"small\" />\n                  {false && <ShuffleIcon fontSize=\"small\" />}\n                </Button>\n                <Button size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                  {/* type select swipe */}\n                  [WIP]{t(\"ModeButtonText\", \"Mode\")}\n                  <CreateIcon fontSize=\"small\" />\n                  {false && <FormatListNumberedIcon fontSize=\"small\" />}\n                  {false && <ThumbsUpDownIcon fontSize=\"small\" />}\n                </Button>\n                <Button size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                  {/* swich savings in different mode */}\n                  [WIP]{t(\"SavingsButtonText\", \"Savings\")}\n                  <FingerprintIcon fontSize=\"small\" />\n                </Button>\n                <Button size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                  [WIP]{t(\"AudioButtonText\", \"Audio\")}\n                  <VolumeOffIcon fontSize=\"small\" />\n                  {false && <VolumeUpIcon fontSize=\"small\" />}\n                </Button>\n                <Button size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                  [WIP]{t(\"SwotUpButtonText\", \"SwotUp\")}\n                  <FlagIcon fontSize=\"small\" />\n                </Button>\n                <Button size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                  [WIP]{t(\"SyncButtonText\", \"Sync\")}\n                  <CloudOffIcon fontSize=\"small\" />\n                  {false && <SyncIcon fontSize=\"small\" />}\n                </Button>\n              </>\n            )}\n            {/* TODO: outline the button when all words are learned */}\n            <Button\n              size=\"small\"\n              {...(this.props.pendingCandidates.isEmpty() && {\n                color: \"secondary\",\n                variant: \"outlined\",\n              })}\n              style={{ whiteSpace: \"nowrap\" }}\n              onClick={() => this.props.showWordAdder({ poiUserId, savingId })}\n            >\n              {t(\"AddWordsButtonText\", \"Words\")}\n              <AddIcon fontSize=\"small\" />\n            </Button>\n          </div>\n        </div>\n        <SpeedDial\n          ariaLabel=\"menu\"\n          open={this.state.isMenuOpened}\n          icon={<MenuIcon fontSize=\"small\" />}\n          {...ToggleEvents(this.toggleMenu)}\n          ButtonProps={{\n            color: \"default\",\n            size: \"small\",\n            style: { background: \"white\", margin: \"8px\" },\n          }}\n        >\n          <SpeedDialAction\n            key=\"share\"\n            icon={<ShareIcon fontSize=\"small\" />}\n            tooltipTitle={\"[WIP]\" + t(\"ShareMenuButtonText\", \"Share\")}\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              this.navigate(\"/\")\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"tegami\"\n            icon={<SmsIcon fontSize=\"small\" />}\n            tooltipTitle={\n              savingLanguage.startsWith(\"ja\")\n                ? \"作者の手紙\"\n                : t(\"TegamiMenuButtonText\", \"作者の手紙\")\n            }\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              this.navigate(\"/tegami/\")\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"mamechishiki\"\n            icon={<HighlightIcon />}\n            tooltipTitle={\n              savingLanguage.startsWith(\"ja\")\n                ? \"豆知識\"\n                : t(\"MamechishikiMenuButtonText\", \"豆知識\")\n            }\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              this.navigate(\"/mamechishiki/\")\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"searchwords\"\n            icon={<SearchIcon />}\n            tooltipTitle={\"[WIP]\" + t(\"SearchMenuButtonText\", \"Search Words\")}\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              this.navigate(\"/\")\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"addwords\"\n            icon={<AddIcon />}\n            tooltipTitle={t(\"AddWordsMenuButtonText\", \"Add Words\")}\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              this.props.showWordAdder({ poiUserId, savingId })\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"profile\"\n            icon={<PersonIcon />}\n            tooltipTitle={\n              \"[WIP]\" +\n              t(\"ProfileMenuButtonText\", \"Profile, statics and settings\")\n            }\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              this.navigate(\"/profile/\")\n            }}\n          ></SpeedDialAction>\n        </SpeedDial>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: RootStateType) => {\n  console.debug(\"CommandsBar state: \", state)\n  const props = {\n    poiUserId: state.GoiUser.get(\"PoiUserId\") as PoiUser.PoiUserId,\n    savingId: state.GoiSaving.get(\"SavingId\") as GoiSavingId,\n    saving: state.GoiSaving.get(\"Saving\") as\n      | GoiSavingDataType\n      | null\n      | undefined,\n    pendingCandidates: state.GoiTester.get(\"PendingCandidates\") as Heap<\n      GoiWordRecordDataType\n    >,\n    isTyping: state.GoiTester.get(\"IsTyping\") as boolean,\n  }\n  console.debug(\"CommandsBar props: \", props)\n  return props\n}\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<RootStateType, void, Action>\n) => {\n  return {\n    showWordAdder: ({\n      poiUserId,\n      savingId,\n    }: {\n      poiUserId: PoiUser.PoiUserId\n      savingId: GoiSavingId\n    }) => dispatch(ShowWordAdderAction({ poiUserId, savingId })),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withTranslation(\"CommandsBar\")(CommandsBar))\n","import React from \"react\"\nimport NavBar from \"../components/NavBar\"\nimport GoiTester from \"../containers/GoiTester\"\nimport WordAdder from \"../containers/WordAdder\"\nimport CommandsBar from \"../containers/CommandsBar\"\nimport Container from \"@material-ui/core/Container\"\nimport { Hidden } from \"@material-ui/core\"\nimport { poisky } from \"../utils/PoiColors\"\nimport { height } from \"@material-ui/system\"\n\nexport default (props: any) => (\n  // <div style={{ width: \"100%\", overflow: \"hidden\", position: \"fixed\" }}>\n  <div\n    className=\"goi-index-page\"\n    style={{\n      width: \"100%\",\n      height: \"100%\",\n      overflow: \"hidden\",\n      position: \"fixed\",\n    }}\n  >\n    <Hidden xsDown>\n      <NavBar />\n    </Hidden>\n    <Hidden smUp>\n      <div style={{ background: poisky, height: \"1px\" }} />\n    </Hidden>\n    <CommandsBar />\n    <main>\n      <WordAdder />\n      <Container>\n        <GoiTester />\n      </Container>\n    </main>\n    <div\n      className=\"buildVersion\"\n      style={{ position: \"absolute\", bottom: 0, right: 0, color: \"lightgray\" }}\n    >\n      catfood build v1.20190811.rc2\n    </div>\n  </div>\n)\n"],"sourceRoot":""}