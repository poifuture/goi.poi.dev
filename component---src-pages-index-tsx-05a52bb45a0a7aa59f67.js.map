{"version":3,"sources":["webpack:///./src/components/ResponsiveDialog.tsx","webpack:///./src/components/WordCards/TinyTag.tsx","webpack:///./src/utils/PoiResponsive.ts","webpack:///./src/components/WordCards/GoiTranslation.tsx","webpack:///./src/components/WordCards/TinyContentTag.tsx","webpack:///./src/components/WordCards/GoiSentence.tsx","webpack:///./src/components/WordCards/GoiUnorderedList.tsx","webpack:///./src/components/WordCards/JaWordCard.tsx","webpack:///./src/components/WordCards/WordCard.tsx","webpack:///./src/containers/GoiTester.tsx","webpack:///./src/utils/PoiI18n.ts","webpack:///./src/containers/WordAdder.tsx","webpack:///./src/containers/CommandsBar.tsx","webpack:///./src/pages/index.tsx"],"names":["ResponsiveDialog","props","useMediaQuery","useTheme","breakpoints","down","react_default","a","createElement","Dialog","Object","assign","PaperProps","style","margin","children","TinyTag","_React$Component","apply","this","arguments","prototype","render","Box","display","fontSize","height","color","marginLeft","marginRight","React","Component","ToggleEvents","toggleEventHandler","onClick","onFocus","onBlur","onMouseEnter","onMouseLeave","onClose","GoiTranslation","_this","call","toggleStateHint","state","displayHint","setState","t","_this$props","i18nTranslation","from","displayFrom","className","entries","translation","map","_ref","translationLanguage","translationText","keys","length","hint","IconButton","size","WbSunnyOutlined_default","_ref2","hintLanguage","hintText","key","visibility","WordCards_TinyTag","dangerouslySetInnerHTML","__html","width","justifyContent","defaultProps","en","zh","jp","locales","withTranslation","TinyContentTag","flexWrap","alignItems","title","GoiSentence","i18nSentence","sentence","audios","source","link","contributor","GoiUnorderedList","listStyle","padding","debug","DebugModule","circledNumber","x","String","fromCharCode","Math","floor","JaWordCard","level","statusColor","status","word","sortedTranslationsDictionarys","i","dictionarys","tmpDictionary","translations","includes","push","filteredTranslationsDictionarys","slice","sortedSentences","_loop","tmpSentences","sentences","filter","_toConsumableArray","filteredSentences","minHeight","common","VolumeOffOutlined_default","tone","Array","isArray","singleTone","join","BatteryUnknownOutlined_default","BatteryCharging20Outlined_default","BatteryCharging30Outlined_default","BatteryCharging50Outlined_default","BatteryCharging60Outlined_default","BatteryCharging80Outlined_default","BatteryCharging90Outlined_default","BatteryChargingFullOutlined_default","BatteryAlertOutlined_default","romaji","WordCards_TinyContentTag","wapuro","alternatives","furigana","uncommons","pos","WordCards_GoiUnorderedList","dictionaryName","WordCards_GoiTranslation","sentenceId","WordCards_GoiSentence","textbook","textbookId","WordCard","theme","mdDown","JaWordCardProps","wordKey","Paper","maxHeight","isTyping","flexDirection","overflowY","Container","WordCards_JaWordCard","WordCardStack","windowWidth","window","innerWidth","PreviousWordCard","CurrentWordCard","NextWordCard","_useState","useState","gestureStopX","setGestureStopX","_useSpring","useSpring","currentX","previousX","gestureProps","setGestrueProps","isGestureReseted","resetGestureProps","stopX","config","duration","bindGesture","useGesture","delta","direction","velocity","directionX","isActionTriggered","deltaX","onGestureNext","onGesturePrevious","friction","tension","currentWordCardTransitions","useTransition","item","opacity","transitionX","zIndex","enter","leave","web","div","position","undefined","top","transform","interpolate","gestureX","translate","GoiTester","JudgeInputElement","requestJudge","_asyncToGenerator","regenerator_default","mark","_callee","_temp","skip","forceLevelChange","poiUserId","savingId","judgeResult","wrap","_context","prev","next","currentWord","toJS","judgeAnswer","answer","testerInput","sent","requestNext","stop","_x","_ref3","_callee2","_temp2","forget","_this$props2","currentWordKey","learnedCandidates","prioritiedCandidates","pendingCandidates","_context2","GoiWordRecord","Forget","showNextWord","displayDetail","_x2","isReportWordDialogOpened","_proto","componentDidMount","_componentDidMount","_callee3","_context3","lazyInitUser","lazyInitSaving","_this2","_this$props3","i18n","savingLanguage","saving","Language","wordCardStatus","currentLevel","wordCardDisplay","KanaDictionary","words","startsWith","flexShrink","Button","aria-label","MoreHorizOutlined_default","LinkOffOutlined_default","forcedWordKey","ExposurePlus1Outlined_default","ExposurePlus2Outlined_default","ReportProblemOutlined_default","Helmet_default","defaultValue","wordkey","marginTop","marginBottom","TextField","label","variant","value","flexGrow","updateIsTyping","onChange","e","target","InputProps","placeholder","endAdornment","InputAdornment","edge","KeyboardReturnOutlined_default","onKeyDown","RedoOutlined_default","ForwardOutlined_default","_ref5","components_ResponsiveDialog","open","language","src","frameBorder","marginWidth","marginHeight","border","maxWidth","allowFullScreen","DialogActions","connect","get","GoiUser","GoiSaving","getIn","has","dispatch","LazyInitUserAction","_ref6","LazyInitSavingAction","_ref7","UpdateIsTypingAction","enableScroll","_ref8","UpdateEnableScrollAction","_ref9","_temp3","_ref10","ShowNextWordAction","_ref11","_ref12","VerifyAnswerAction","LookUp","i18nString","locale","ja","QueryRegexPopup","regex","WordAdder","getSuggestionQuerys","suggestions","suggestion","Query","getPendingQuerys","pendings","pending","addSuggestion","WordAdder_asyncToGenerator","SubQuerys","addPendingQuerys","querys","concat","WordAdder_toConsumableArray","Display","countSubtotal","query","clearAllPendingQuerys","Promise","all","removePendingQuery","onClickConfirm","addingWordsProgress","addWordsFromQuerys","close","addCustomQuery","_callee4","_context4","customQuery","trim","addPendingQuery","onClickRemovePendingQuery","_callee5","_this$props4","newPendingQuerys","_context5","pendingQuery","_this$props5","_this$props6","includedBasicPos","BasicPos","AcceptPos","isBasicFilterChecked","_learnedCount$priorit","learnedCount","prioritiedCount","pendingCount","counters","DialogTitle","DialogContent","dividers","List","dense","flex","readOnly","clearPendingWords","DeleteOutlined_default","ListItem","Divider","component","Typography","TotalCount","LearnedCount","AddedCount","NewCount","ListItemText","primary","Fragment","WordAdder_QueryRegexPopup","total","secondary","learned","added","new","ListItemSecondaryAction","AddOutlined_default","SearchOutlined_default","subtotal","ExploreOffOutlined_default","CloseOutlined_default","FormControlLabel","control","Checkbox","checked","indeterminate","changeFilter","acceptBasic","acceptPosFlags","PROPER","IDIOM","AcceptExtra","acceptExtra","AcceptForgot","acceptForgot","disabled","ClearPendingWordsAction","AddPendingQueryAction","AddPendingQuerysAction","_ref13","RemovePendingQueryAction","_ref14","AddWordsFromQuerysAction","DisplayWordAdderAction","refreshWordAdder","RefreshWordAdderAction","_ref15","CountSubtotalAction","_ref16","ChangeFilterAction","CommandsBar","commandsContainerRef","createRef","openMenu","isMenuOpened","closeMenu","toggleMenu","isCommandsExpanded","navigate","to","replace","smDown","pointerEvents","bottom","right","current","scrollTo","left","behavior","FirstPageOutlined_default","ref","overflowX","whiteSpace","NavigateNextOutlined_default","FormatQuoteOutlined_default","revisitStrategy","updateGoiSettingsState","RefreshOutlined_default","ExposureNeg1Outlined_default","newWordsOrder","PlaylistPlayOutlined_default","ShuffleOutlined_default","CreateOutlined_default","FingerprintOutlined_default","FlagOutlined_default","CloudOffOutlined_default","showWordAdder","SpeedDial","ariaLabel","icon","MenuOutlined_default","ButtonProps","background","SpeedDialAction","ShareOutlined_default","tooltipTitle","tooltipOpen","SmsOutlined_default","HighlightOutlined_default","PersonOutlined_default","GoiSettings","ShowWordAdderAction","UpdateGoiSettingsStateAction","IndexPage","overflow","Hidden","xsDown","NavBar","smUp","poisky","containers_WordAdder","containers_GoiTester","containers_CommandsBar","Layout"],"mappings":"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","file":"component---src-pages-index-tsx-05a52bb45a0a7aa59f67.js","sourcesContent":["import React from \"react\"\nimport { useMediaQuery, useTheme } from \"@material-ui/core\"\nimport Dialog, { DialogProps } from \"@material-ui/core/Dialog\"\nimport { isWidthDown } from \"@material-ui/core/withWidth\"\n\nconst ResponsiveDialog = (props: DialogProps) => {\n  const smDown = useMediaQuery(useTheme().breakpoints.down(\"xs\"))\n  // return (\n  //   <Dialog {...props} fullScreen={smDown}>\n  //     {props.children}\n  //   </Dialog>\n  // )\n  return (\n    <Dialog {...props} PaperProps={{ style: { margin: \"10px\" } }}>\n      {props.children}\n    </Dialog>\n  )\n}\n\nexport default ResponsiveDialog\n","import React from \"react\"\nimport { I18nString } from \"../../types/PoiI18nTypes\"\nimport { List as MuiList, Box } from \"@material-ui/core\"\nimport { BoxProps } from \"@material-ui/core/Box\"\n\nexport interface TinyTagPropsType extends BoxProps {}\nexport class TinyTag extends React.Component<TinyTagPropsType> {\n  render() {\n    return (\n      <Box\n        display=\"inline-flex\"\n        fontSize=\"3vmin\"\n        height=\"auto\"\n        color=\"gray\"\n        marginLeft=\"4px\"\n        marginRight=\"1px\"\n        {...this.props}\n      >\n        {this.props.children}\n      </Box>\n    )\n  }\n}\n\nexport default TinyTag\n","export const ToggleEvents = (\n  toggleEventHandler: (value?: boolean, event?: string) => void | Promise<void>\n) => {\n  return {\n    onClick: () => toggleEventHandler(true, \"onClick\"),\n    onFocus: () => toggleEventHandler(true, \"onFocus\"),\n    onBlur: () => toggleEventHandler(false, \"onBlur\"),\n    onMouseEnter: () => toggleEventHandler(true, \"onMouseEnter\"),\n    onMouseLeave: () => toggleEventHandler(false, \"onMouseLeave\"),\n    onClose: () => toggleEventHandler(false, \"onClose\"),\n  }\n}\n","import React from \"react\"\nimport { I18nString } from \"../../types/PoiI18nTypes\"\nimport { List as MuiList, Box, IconButton } from \"@material-ui/core\"\nimport WbSunnyIcon from \"@material-ui/icons/WbSunnyOutlined\"\nimport TinyTag from \"./TinyTag\"\nimport { ToggleEvents } from \"../../utils/PoiResponsive\"\nimport { WithTranslation, withTranslation } from \"react-i18next\"\n\nexport type GoiTranslationPropsType = WithTranslation & {\n  i18nTranslation: {\n    translation: I18nString\n    hint?: I18nString\n  }\n  displayHint?: boolean\n  locales?: string[] // WIP\n  from?: string\n  displayFrom?: boolean\n}\ninterface GoiTranslationStateType {\n  displayHint: boolean\n}\n\nexport class GoiTranslation extends React.Component<\n  GoiTranslationPropsType,\n  GoiTranslationStateType\n> {\n  static defaultProps = {\n    i18nTranslation: {\n      translation: {\n        en: \"English Translation\",\n        zh: \"中文翻译\",\n        jp: \"日本語\",\n      },\n      hint: {\n        en: \"English Hint\",\n        zh: \"中文提示\",\n        jp: \"日本語\",\n      },\n    },\n    displayHint: true,\n    locales: [\"jp\", \"zh\", \"en\"],\n    from: \"\",\n    displayFrom: false,\n  }\n  constructor(props: GoiTranslationPropsType) {\n    super(props)\n    this.state = {\n      displayHint: false,\n    }\n  }\n  toggleStateHint = (display?: boolean) => {\n    if (typeof display === \"undefined\") {\n      display = !this.state.displayHint\n    }\n    this.setState({ displayHint: display })\n  }\n  render() {\n    const { t } = this.props\n    const { i18nTranslation, from, displayFrom } = this.props\n    const displayHint = this.props.displayHint || this.state.displayHint\n    return (\n      <li>\n        <div\n          className=\"word-card-single-translation\"\n          style={{ fontSize: \"8vmin\" }}\n        >\n          {Object.entries(i18nTranslation.translation).map(\n            ([translationLanguage, translationText]) => {\n              return Object.keys(i18nTranslation.translation).length > 1\n                ? `${translationLanguage}:${translationText}; `\n                : `${translationText}`\n            }\n          )}\n        </div>\n        {i18nTranslation.hint && (\n          <div className=\"word-card-single-translation-hint\">\n            <IconButton size=\"small\" {...ToggleEvents(this.toggleStateHint)}>\n              <WbSunnyIcon fontSize=\"small\" />\n            </IconButton>\n            {Object.entries(i18nTranslation.hint).map(\n              ([hintLanguage, hintText]) => (\n                <span\n                  key={hintLanguage}\n                  style={{\n                    visibility: displayHint ? \"inherit\" : \"hidden\",\n                    fontSize: \"4vmin\",\n                  }}\n                >\n                  {Object.keys(i18nTranslation.hint || {}).length > 1 && (\n                    <TinyTag>{hintLanguage}</TinyTag>\n                  )}\n                  <span\n                    dangerouslySetInnerHTML={{\n                      __html: hintText || \"\",\n                    }}\n                  />\n                </span>\n              )\n            )}\n          </div>\n        )}\n        {displayFrom && (\n          <div\n            style={{\n              color: \"gray\",\n              width: \"100%\",\n              fontSize: \"1.5vmin\",\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n            }}\n          >\n            from {from}\n          </div>\n        )}\n      </li>\n    )\n  }\n}\n\nexport default withTranslation(\"Common\")(GoiTranslation)\n","import React from \"react\"\nimport { I18nString } from \"../../types/PoiI18nTypes\"\nimport { List as MuiList, Box } from \"@material-ui/core\"\nimport { BoxProps } from \"@material-ui/core/Box\"\nimport TinyTag from \"./TinyTag\"\n\nexport interface TinyContentTagPropsType {\n  title: string\n}\nexport class TinyContentTag extends React.Component<TinyContentTagPropsType> {\n  render() {\n    return (\n      <div\n        style={{\n          flexWrap: \"nowrap\",\n          display: \"inline-flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <div style={{ height: \"auto\" }}>\n          <TinyTag>{this.props.title}</TinyTag>\n        </div>\n        <span style={{ fontSize: \"4vmin\", color: \"gray\" }}>\n          {this.props.children}\n        </span>\n      </div>\n    )\n  }\n}\n\nexport default TinyContentTag\n","import React from \"react\"\nimport { I18nString } from \"../../types/PoiI18nTypes\"\nimport { List as MuiList, Box } from \"@material-ui/core\"\nimport TinyTag from \"./TinyTag\"\n\nexport type GoiSentencePropsType = {\n  i18nSentence: {\n    from: string\n    sentence: string\n    audios?: { cv: string; wav: string }[]\n    translation?: I18nString\n    source?: string\n    link?: string\n    contributor?: string\n  }\n  locales?: string[] // WIP\n  displayFrom?: boolean\n}\n\nexport class GoiSentence extends React.Component<GoiSentencePropsType> {\n  static defaultProps = {\n    i18nSentence: {\n      from: \"\",\n      sentence: \"It's a sample sentence.\",\n      translation: {\n        en: \"It's the translation of the sample sentence.\",\n        zh: \"这是例句的中文翻译\",\n        jp: \"これは例句の日本語の翻訳です\",\n      },\n      audios: [],\n      source: \"PoiGoi\",\n      link: \"https://goi.poi.dev/\",\n      contributor: \"凪\",\n    },\n    displayHint: true,\n    locales: [\"jp\", \"zh\", \"en\"],\n    displayFrom: false,\n  }\n  render() {\n    const { i18nSentence, displayFrom } = this.props\n    return (\n      <li>\n        <div\n          className=\"word-card-single-sentence\"\n          style={{ fontSize: \"4vmin\" }}\n        >\n          <span\n            dangerouslySetInnerHTML={{ __html: i18nSentence.sentence }}\n          ></span>\n        </div>\n        <div\n          className=\"word-card-single-sentence-translation\"\n          style={{ fontSize: \"4vmin\" }}\n        >\n          {i18nSentence.translation &&\n            Object.entries(i18nSentence.translation).map(\n              ([translationLanguage, translationText]) => {\n                return Object.keys(i18nSentence.translation || []).length > 1\n                  ? `${translationLanguage}:${translationText}; `\n                  : `${translationText}`\n              }\n            )}\n        </div>\n        {displayFrom && (\n          <div\n            style={{\n              color: \"gray\",\n              width: \"100%\",\n              fontSize: \"1.5vmin\",\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n            }}\n          >\n            from {i18nSentence.from}\n          </div>\n        )}\n      </li>\n    )\n  }\n}\n\nexport default GoiSentence\n","import React from \"react\"\nimport { I18nString } from \"../../types/PoiI18nTypes\"\nimport { List as MuiList, Box } from \"@material-ui/core\"\nimport { BoxProps } from \"@material-ui/core/Box\"\n\nexport class GoiUnorderedList extends React.Component {\n  render() {\n    return (\n      <ul style={{ listStyle: \"none\", padding: 0 }} {...this.props}>\n        {this.props.children}\n      </ul>\n    )\n  }\n}\n\nexport default GoiUnorderedList\n","import React from \"react\"\nimport { GoiJaWordType } from \"../../types/GoiDictionaryTypes\"\nimport { List as MuiList, Box, Paper } from \"@material-ui/core\"\nimport GoiTranslation from \"./GoiTranslation\"\nimport TinyTag from \"./TinyTag\"\nimport TinyContentTag from \"./TinyContentTag\"\nimport GoiSentence from \"./GoiSentence\"\nimport BatteryUnknownIcon from \"@material-ui/icons/BatteryUnknownOutlined\"\nimport BatteryCharging20Icon from \"@material-ui/icons/BatteryCharging20Outlined\"\nimport BatteryCharging30Icon from \"@material-ui/icons/BatteryCharging30Outlined\"\nimport BatteryCharging50Icon from \"@material-ui/icons/BatteryCharging50Outlined\"\nimport BatteryCharging60Icon from \"@material-ui/icons/BatteryCharging60Outlined\"\nimport BatteryCharging80Icon from \"@material-ui/icons/BatteryCharging80Outlined\"\nimport BatteryCharging90Icon from \"@material-ui/icons/BatteryCharging90Outlined\"\nimport BatteryChargingFullIcon from \"@material-ui/icons/BatteryChargingFullOutlined\"\nimport BatteryAlertIcon from \"@material-ui/icons/BatteryAlertOutlined\"\nimport VolumeOffIcon from \"@material-ui/icons/VolumeOffOutlined\"\nimport DebugModule from \"debug\"\nimport GoiUnorderedList from \"./GoiUnorderedList\"\nconst debug = DebugModule(\"PoiGoi:JaWordCard\")\n\nexport type JaWordCardPropsType = {\n  word: GoiJaWordType\n  display: \"simple\" | \"detailed\" | \"test-common\" | \"test-translation\"\n  status:\n    | \"input\"\n    | \"first\"\n    | \"perfect\"\n    | \"good\"\n    | \"warning\"\n    | \"failed\"\n    | \"peek\"\n    | \"review\"\n  dictionarys: string[]\n  level: number\n}\n\nconst circledNumber = (x: number) => {\n  if (x === 0) {\n    return String.fromCharCode(9450)\n  }\n  if (x >= 1 && x < 20) {\n    return String.fromCharCode(9311 + Math.floor(x))\n  }\n  return \"\"\n}\nexport class JaWordCard extends React.Component<JaWordCardPropsType> {\n  static defaultProps = {\n    word: {\n      common: \"Common Placeholder\",\n      translation: \"Translation Placeholder\",\n    },\n    display: \"detailed\",\n    status: \"view\",\n    dictionarys: [\n      \"KanaDictionary\",\n      \"GoiSimpleJaDictionary\",\n      \"BiaozhunRibenyu\",\n      \"XinbianRiyu\",\n      \"Xinbian\",\n      \"AnimeSong\",\n      \"Anime\",\n      \"JishoOrg\",\n      \"GooJisho\",\n    ],\n    level: -1,\n  }\n  render() {\n    const { level } = this.props\n    const statusColor =\n      this.props.status === \"input\"\n        ? \"gray\"\n        : this.props.status === \"first\"\n        ? \"blue\"\n        : this.props.status === \"perfect\"\n        ? \"green\"\n        : this.props.status === \"good\"\n        ? \"lightgreen\"\n        : this.props.status === \"warning\"\n        ? \"orange\"\n        : this.props.status === \"failed\"\n        ? \"red\"\n        : this.props.status === \"peek\"\n        ? \"blue\"\n        : this.props.status === \"review\"\n        ? \"black\"\n        : \"black\"\n    const word = Object.assign({}, this.props.word)\n    const sortedTranslationsDictionarys = []\n    for (let i = 0; i < this.props.dictionarys.length; i++) {\n      const tmpDictionary = this.props.dictionarys[i]\n      if (Object.keys(word.translations).includes(tmpDictionary)) {\n        sortedTranslationsDictionarys.push(tmpDictionary)\n      }\n    }\n    const filteredTranslationsDictionarys =\n      this.props.display !== \"detailed\"\n        ? sortedTranslationsDictionarys.slice(0, 1)\n        : sortedTranslationsDictionarys\n    const sortedSentences = []\n    for (let i = 0; i < this.props.dictionarys.length; i++) {\n      const tmpDictionary = this.props.dictionarys[i]\n      const tmpSentences = (word.sentences || []).filter(\n        sentence => sentence.from === tmpDictionary\n      )\n      sortedSentences.push(...tmpSentences)\n    }\n    const filteredSentences =\n      this.props.display !== \"detailed\"\n        ? sortedSentences.slice(0, 1)\n        : sortedSentences\n    debug(filteredTranslationsDictionarys, filteredSentences)\n    return (\n      <div className=\"word-card\">\n        <div\n          className=\"word-card-common\"\n          style={{\n            minHeight: \"20vmin\",\n            fontSize: \"10vmin\",\n            color: statusColor,\n            visibility:\n              this.props.display === \"test-common\" ? \"hidden\" : \"inherit\",\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n        >\n          <span dangerouslySetInnerHTML={{ __html: word.common }} />\n        </div>\n        <div\n          className=\"word-card-tags\"\n          style={{ display: \"flex\", alignItems: \"center\" }}\n        >\n          <div\n            style={{\n              display: \"inline-flex\",\n              alignItems: \"center\",\n              visibility:\n                this.props.display === \"test-common\" ? \"hidden\" : \"inherit\",\n            }}\n          >\n            <VolumeOffIcon fontSize=\"small\" />\n            {typeof word.tone === \"number\" && circledNumber(word.tone)}\n            {Array.isArray(word.tone) &&\n              word.tone\n                .map(\n                  singleTone =>\n                    typeof singleTone === \"number\" && circledNumber(singleTone)\n                )\n                .join()}\n            {level === 0 ? (\n              <BatteryUnknownIcon fontSize=\"small\" />\n            ) : level === 1 ? (\n              <BatteryCharging20Icon fontSize=\"small\" />\n            ) : level === 2 ? (\n              <BatteryCharging30Icon fontSize=\"small\" />\n            ) : level === 3 ? (\n              <BatteryCharging50Icon fontSize=\"small\" />\n            ) : level === 4 ? (\n              <BatteryCharging60Icon fontSize=\"small\" />\n            ) : level === 5 ? (\n              <BatteryCharging80Icon fontSize=\"small\" />\n            ) : level === 6 ? (\n              <BatteryCharging90Icon fontSize=\"small\" />\n            ) : level >= 7 ? (\n              <BatteryChargingFullIcon fontSize=\"small\" />\n            ) : (\n              <BatteryAlertIcon fontSize=\"small\" />\n            )}\n          </div>\n          <span\n            style={{\n              visibility:\n                this.props.display === \"test-common\" ? \"hidden\" : \"inherit\",\n            }}\n          >\n            <div>\n              {word.romaji && (\n                <TinyContentTag title=\"ローマ字:\">{word.romaji}</TinyContentTag>\n              )}\n              {word.wapuro && (\n                <TinyContentTag title=\"ワープロ:\">{word.wapuro}</TinyContentTag>\n              )}\n            </div>\n            <div>\n              {word.alternatives.length > 0 && (\n                <TinyContentTag title=\"同:\">\n                  {word.alternatives.map(furigana => (\n                    <span\n                      key={furigana}\n                      dangerouslySetInnerHTML={{ __html: furigana }}\n                    />\n                  ))}\n                </TinyContentTag>\n              )}\n              {word.uncommons.length > 0 && (\n                <TinyContentTag title=\"珍:\">\n                  {word.uncommons.map(furigana => (\n                    <span\n                      key={furigana}\n                      dangerouslySetInnerHTML={{ __html: furigana }}\n                    />\n                  ))}\n                </TinyContentTag>\n              )}\n            </div>\n            <div>\n              {word.pos.includes(\"DEPRECATED\") && <TinyTag>歴史的</TinyTag>}\n              {/* KANA START */}\n              {word.pos.includes(\"KANA\") && <TinyTag>仮名</TinyTag>}\n              {word.pos.includes(\"HIRAGANA\") && <TinyTag>平仮名</TinyTag>}\n              {word.pos.includes(\"KATAKANA\") && <TinyTag>片仮名</TinyTag>}\n              {word.pos.includes(\"HATSUON\") && <TinyTag>撥音</TinyTag>}\n              {word.pos.includes(\"SEION\") && <TinyTag>清音</TinyTag>}\n              {word.pos.includes(\"DAKUON\") && <TinyTag>濁音</TinyTag>}\n              {word.pos.includes(\"HANDAKUON\") && <TinyTag>半濁音</TinyTag>}\n              {word.pos.includes(\"YOON\") && <TinyTag>拗音</TinyTag>}\n              {word.pos.includes(\"SOKUON\") && <TinyTag>促音</TinyTag>}\n              {word.pos.includes(\"CHOON\") && <TinyTag>長音</TinyTag>}\n              {word.pos.includes(\"GAIRAIGO\") && <TinyTag>外来語</TinyTag>}\n              {word.pos.includes(\"ROMAJI\") && <TinyTag>ローマ字</TinyTag>}\n              {/* HINSHI START */}\n              {word.pos.includes(\"VERB\") && <TinyTag>動詞</TinyTag>}\n              {word.pos.includes(\"GODAN\") && <TinyTag>五段活用</TinyTag>}\n              {word.pos.includes(\"KAMIICHIDAN\") && (\n                <TinyTag>上一段活用</TinyTag>\n              )}\n              {word.pos.includes(\"SHIMOICHIDAN\") && (\n                <TinyTag>下一段活用</TinyTag>\n              )}\n              {word.pos.includes(\"SAHEN\") && <TinyTag>サ変</TinyTag>}\n              {word.pos.includes(\"KAHEN\") && <TinyTag>カ変</TinyTag>}\n              {word.pos.includes(\"JIDOSHI\") && <TinyTag>自動詞</TinyTag>}\n              {word.pos.includes(\"TADOSHI\") && <TinyTag>他動詞</TinyTag>}\n              {word.pos.includes(\"ADJ\") && <TinyTag>形容詞</TinyTag>}\n              {word.pos.includes(\"KEIYODOSHI\") && <TinyTag>形容動詞</TinyTag>}\n              {word.pos.includes(\"NOUN\") && <TinyTag>名詞</TinyTag>}\n              {word.pos.includes(\"PROPER\") && <TinyTag>固有名詞</TinyTag>}\n              {word.pos.includes(\"PRON\") && <TinyTag>代名詞</TinyTag>}\n              {word.pos.includes(\"RENTAISHI\") && <TinyTag>連体詞</TinyTag>}\n              {word.pos.includes(\"ADV\") && <TinyTag>副詞</TinyTag>}\n              {word.pos.includes(\"CONJ\") && <TinyTag>接続詞</TinyTag>}\n              {word.pos.includes(\"INTERJ\") && <TinyTag>感動詞</TinyTag>}\n              {word.pos.includes(\"JODOSHI\") && <TinyTag>助動詞</TinyTag>}\n              {word.pos.includes(\"JOSHI\") && <TinyTag>助詞</TinyTag>}\n              {word.pos.includes(\"IDIOM\") && <TinyTag>熟語</TinyTag>}\n              {level >= 0 && <TinyTag>練度{level}</TinyTag>}\n            </div>\n          </span>\n        </div>\n        <div className=\"word-card-translation\" style={{ color: statusColor }}>\n          <GoiUnorderedList>\n            {filteredTranslationsDictionarys.map(dictionaryName => (\n              <GoiTranslation\n                key={dictionaryName}\n                i18nTranslation={word.translations[dictionaryName]}\n                displayHint={this.props.display !== \"test-common\"}\n                from={dictionaryName}\n                displayFrom={this.props.display === \"detailed\"}\n              />\n            ))}\n          </GoiUnorderedList>\n        </div>\n        {this.props.display !== \"test-common\" && (\n          <div className=\"word-card-sentences\">\n            <GoiUnorderedList>\n              {filteredSentences.map((sentence, sentenceId) => (\n                <GoiSentence\n                  key={sentenceId}\n                  i18nSentence={sentence}\n                  displayFrom={this.props.display === \"detailed\"}\n                />\n              ))}\n            </GoiUnorderedList>\n          </div>\n        )}\n        {this.props.display === \"detailed\" && (\n          <div className=\"word-card-textbooks\">\n            {word.textbook.map((textbook, textbookId) => (\n              <TinyTag key={textbookId}>{textbook}</TinyTag>\n            ))}\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default JaWordCard\n","import React, { PropsWithChildren, useState } from \"react\"\nimport {\n  List as MuiList,\n  Box,\n  Paper,\n  Container,\n  useMediaQuery,\n} from \"@material-ui/core\"\nimport JaWordCard, { JaWordCardPropsType } from \"./JaWordCard\"\nimport {\n  useSpring,\n  animated,\n  useTransition,\n  config,\n  interpolate,\n} from \"react-spring\"\nimport { useGesture } from \"react-use-gesture\"\nimport { useTheme } from \"@material-ui/styles\"\nimport DebugModule from \"debug\"\nconst debug = DebugModule(\"PoiGoi:WordCard\")\n\nexport interface WordCardPropsType {\n  isTyping: boolean\n  JaWordCardProps: Partial<JaWordCardPropsType>\n}\nexport function WordCard(props: PropsWithChildren<WordCardPropsType>) {\n  const theme: any = useTheme()\n  const mdDown = useMediaQuery(theme.breakpoints.down(\"xs\"))\n  const { JaWordCardProps } = props\n  const wordKey =\n    typeof JaWordCardProps.word !== \"undefined\"\n      ? JaWordCardProps.word.key\n      : \"あ\"\n  return (\n    <Paper\n      style={{\n        ...{\n          minHeight: mdDown ? \"calc(100vh - 200px)\" : \"calc(100vh - 248px)\",\n          maxHeight: props.isTyping\n            ? \"calc(100vh - 140px)\"\n            : \"calc(100vh - 200px)\",\n          display: \"flex\",\n          flexDirection: \"column\",\n        },\n      }}\n    >\n      <div style={{ overflowY: \"auto\" }}>\n        <Container>\n          <JaWordCard key={wordKey} {...props.JaWordCardProps} />\n        </Container>\n      </div>\n      {props.children}\n    </Paper>\n  )\n}\n\nexport interface WordCardStackPropsType {\n  PreviousWordCard: ReturnType<typeof WordCard>\n  CurrentWordCard: ReturnType<typeof WordCard>\n  NextWordCard: ReturnType<typeof WordCard>\n  onGesturePrevious?: ({ deltaX }: { deltaX: number }) => void\n  onGestureNext?: ({ deltaX }: { deltaX: number }) => void\n}\nexport function WordCardStack(props: WordCardStackPropsType) {\n  const windowWidth = typeof window !== \"undefined\" ? window.innerWidth : 1280\n  const { PreviousWordCard, CurrentWordCard, NextWordCard } = props\n  const [gestureStopX, setGestureStopX] = useState(0)\n  const [gestureProps, setGestrueProps] = useSpring(() => {\n    return { currentX: 0, previousX: -windowWidth }\n  })\n  let isGestureReseted = false\n  const resetGestureProps = (stopX: number) => {\n    setGestureStopX(stopX)\n    setGestrueProps({\n      currentX: 0,\n      previousX: -windowWidth,\n      config: { duration: 0 },\n    })\n    isGestureReseted = true\n  }\n  const bindGesture = useGesture(({ down, delta, direction, velocity }) => {\n    const directionX = direction[0] < -0.5 ? -1 : direction[0] > 0.5 ? 1 : 0 // Direction should either point left or right\n    const isActionTriggered = !down && velocity > 0.2\n    const [deltaX] = delta\n    const currentX = deltaX > -20 ? 0 : down ? deltaX : 0\n    const previousX =\n      deltaX < 20 ? -windowWidth : down ? deltaX - windowWidth : -windowWidth\n    if (isActionTriggered && directionX < 0) {\n      debug(\"onGestureNext\", deltaX)\n      if (typeof props.onGestureNext !== \"undefined\") {\n        resetGestureProps(deltaX)\n        props.onGestureNext({ deltaX })\n      }\n    }\n    if (isActionTriggered && directionX > 0) {\n      debug(\"onGesturePrevious\", deltaX)\n      if (typeof props.onGesturePrevious !== \"undefined\") {\n        resetGestureProps(deltaX)\n        props.onGesturePrevious({ deltaX })\n      }\n    }\n    if (!isGestureReseted) {\n      setGestrueProps({\n        currentX,\n        previousX,\n        config: { friction: 50, tension: down ? 1000 : 400 },\n      })\n    }\n  })\n  const currentWordCardTransitions = useTransition(\n    CurrentWordCard,\n    item => item.key || \"あ\",\n    {\n      from: { opacity: 0.9, transitionX: 0, zIndex: 0 },\n      enter: { opacity: 1, transitionX: 0, zIndex: 0 },\n      leave: { opacity: 0, transitionX: -windowWidth, zIndex: 100 },\n      config: { duration: 400 },\n      transitionX: 0,\n      opacity: 1,\n      zIndex: 0,\n    }\n  )\n  debug(\"transitions\", currentWordCardTransitions)\n  return (\n    <animated.div style={{ position: \"relative\" }} {...bindGesture()}>\n      <animated.div\n        key={NextWordCard.key ? NextWordCard.key : undefined}\n        style={{\n          position: \"absolute\",\n          top: 0,\n          width: \"100%\",\n          height: \"100%\",\n        }}\n      >\n        {NextWordCard}\n      </animated.div>\n      {currentWordCardTransitions.map(({ item, props, key }) => {\n        debug(\"transition props\", item.key, props, key)\n        return (\n          <animated.div\n            key={key}\n            style={{\n              zIndex: props.zIndex,\n              opacity: props.opacity,\n              position: \"absolute\",\n              top: 0,\n              width: \"100%\",\n              height: \"100%\",\n              transform: interpolate(\n                [gestureProps.currentX, props.transitionX],\n                (gestureX, transitionX) => {\n                  const translate = transitionX\n                    ? `translate3d(${transitionX + gestureStopX}px,0px,0px)`\n                    : `translate3d(${gestureX}px,0px,0px)`\n                  debug(\"translate\", key, translate)\n                  return translate\n                }\n              ),\n            }}\n          >\n            {item}\n          </animated.div>\n        )\n      })}\n      <animated.div\n        key={PreviousWordCard.key ? PreviousWordCard.key : undefined}\n        style={{\n          position: \"absolute\",\n          top: 0,\n          width: \"100%\",\n          height: \"100%\",\n          transform: gestureProps.previousX.interpolate(\n            x => `translate3d(${x}px,0px,0)`\n          ),\n        }}\n      >\n        {PreviousWordCard}\n      </animated.div>\n    </animated.div>\n  )\n}\n\nexport default WordCardStack\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { TreeMultiSet } from \"tstl\"\nimport JaWordCard from \"../components/WordCards/JaWordCard\"\nimport * as PoiUser from \"../utils/PoiUser\"\nimport { LazyInitUserAction } from \"../actions/GoiUserActions\"\nimport { LazyInitSavingAction } from \"../actions/GoiSavingActions\"\nimport {\n  VerifyAnswerAction,\n  ShowNextWordAction,\n  UpdateIsTypingAction,\n} from \"../actions/GoiTesterActions\"\nimport { GoiSavingId, GoiJudgeResult } from \"../types/GoiTypes\"\nimport Helmet from \"react-helmet\"\nimport { GoiWordType, GoiJaWordType } from \"../types/GoiDictionaryTypes\"\nimport { RootStateType } from \"../states/RootState\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { Action } from \"redux\"\nimport {\n  GoiWordRecordDataType,\n  GoiSavingDataType,\n  GoiWordRecord,\n} from \"../models/GoiSaving\"\nimport {\n  TextField,\n  InputAdornment,\n  IconButton,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n  Paper,\n  Container,\n} from \"@material-ui/core\"\nimport SpellcheckIcon from \"@material-ui/icons/SpellcheckOutlined\"\nimport KeyboardReturnIcon from \"@material-ui/icons/KeyboardReturnOutlined\"\nimport RedoIcon from \"@material-ui/icons/RedoOutlined\"\nimport ForwardIcon from \"@material-ui/icons/ForwardOutlined\"\nimport MoreVertIcon from \"@material-ui/icons/MoreVertOutlined\"\nimport MoreHorizIcon from \"@material-ui/icons/MoreHorizOutlined\"\nimport LinkOffIcon from \"@material-ui/icons/LinkOffOutlined\"\nimport ExposurePlus1Icon from \"@material-ui/icons/ExposurePlus1Outlined\"\nimport ExposurePlus2Icon from \"@material-ui/icons/ExposurePlus2Outlined\"\nimport ReportProblemIcon from \"@material-ui/icons/ReportProblemOutlined\"\nimport { display } from \"@material-ui/system\"\nimport { withTranslation, WithTranslation } from \"react-i18next\"\nimport DebugModule from \"debug\"\nimport { UpdateEnableScrollAction } from \"../actions/LayoutActions\"\nimport ResponsiveDialog from \"../components/ResponsiveDialog\"\nimport { WordCard, WordCardStack } from \"../components/WordCards/WordCard\"\nimport KanaDictionary from \"../dictionary/KanaDictionary\"\nconst debug = DebugModule(\"PoiGoi:GoiTester\")\n\ntype GoiTesterPropsType = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps> &\n  WithTranslation\ninterface GoiTesterStateType {\n  testerInput: string\n  displayDetail: boolean\n  isReportWordDialogOpened: boolean\n}\nexport class GoiTester extends React.Component<\n  GoiTesterPropsType,\n  GoiTesterStateType\n> {\n  constructor(props: GoiTesterPropsType) {\n    super(props)\n    this.state = {\n      testerInput: \"\",\n      displayDetail: false,\n      isReportWordDialogOpened: false,\n    }\n  }\n  JudgeInputElement: HTMLInputElement | null = null\n  async componentDidMount() {\n    debug(\"Lasy init user\")\n    const poiUserId = (await this.props.lazyInitUser()) as PoiUser.PoiUserId\n    debug(\"Lasy init saving\")\n    const savingId = await this.props.lazyInitSaving({ poiUserId })\n    await this.props.showNextWord({ poiUserId, savingId })\n  }\n  requestJudge = async ({\n    skip,\n    forceLevelChange,\n  }: { skip?: boolean; forceLevelChange?: number } = {}) => {\n    const { poiUserId, savingId } = this.props\n    const word: GoiJaWordType = this.props.currentWord.toJS()\n    const judgeResult = await this.props.judgeAnswer(\n      {\n        answer: this.state.testerInput,\n        word,\n        skip,\n        forceLevelChange,\n      },\n      {\n        poiUserId,\n        savingId,\n      }\n    )\n    this.setState({ testerInput: \"\" })\n    if (\n      judgeResult === \"Correct\" ||\n      judgeResult === \"Accepted\" ||\n      judgeResult === \"Skipped\"\n    ) {\n      await this.requestNext()\n    }\n  }\n  requestNext = async ({ forget }: { forget?: boolean } = {}) => {\n    forget = typeof forget !== \"undefined\" ? forget : false\n    const {\n      poiUserId,\n      savingId,\n      currentWordKey,\n      learnedCandidates,\n      prioritiedCandidates,\n      pendingCandidates,\n    } = this.props\n    if (forget) {\n      await GoiWordRecord(poiUserId, savingId, currentWordKey).Forget()\n    }\n    await this.props.showNextWord(\n      { poiUserId, savingId },\n      {\n        ...(!forget && { currentWordKey }),\n        learnedCandidates,\n        prioritiedCandidates,\n        pendingCandidates,\n      }\n    )\n    this.setState({ testerInput: \"\", displayDetail: false })\n  }\n  render() {\n    const { t, i18n } = this.props\n    const word: GoiJaWordType = this.props.currentWord.toJS()\n    const savingLanguage =\n      this.props.saving && this.props.saving.Language\n        ? this.props.saving.Language\n        : \"en\"\n    const wordCardStatus =\n      this.props.currentLevel === 0\n        ? \"first\"\n        : this.props.judgeResult === \"Pending\"\n        ? \"input\"\n        : this.props.judgeResult === \"Correct\"\n        ? \"perfect\"\n        : this.props.judgeResult === \"Accepted\"\n        ? \"good\"\n        : this.props.judgeResult === \"Rejected\"\n        ? \"warning\"\n        : this.props.judgeResult === \"Wrong\"\n        ? \"failed\"\n        : \"review\"\n    const wordCardDisplay =\n      this.props.currentLevel === 0\n        ? \"simple\"\n        : this.props.judgeResult === \"Pending\"\n        ? \"test-common\"\n        : this.state.displayDetail\n        ? \"detailed\"\n        : \"simple\"\n    const PreviousWordCard = (\n      <WordCard\n        isTyping={this.props.isTyping}\n        JaWordCardProps={{\n          word: KanaDictionary.words[\"あ\"],\n          display: wordCardDisplay,\n          status: wordCardStatus,\n        }}\n      />\n    )\n    const CurrentWordCard = (\n      <WordCard\n        key={word.key}\n        isTyping={this.props.isTyping}\n        JaWordCardProps={{\n          word,\n          display: wordCardDisplay,\n          status: wordCardStatus,\n          ...(this.props.currentLevel !== null && {\n            level: this.props.currentLevel,\n          }),\n        }}\n      >\n        {!wordCardDisplay.startsWith(\"test\") && (\n          <div\n            className=\"word-card-actions\"\n            style={{ display: \"flex\", flexShrink: 0 }}\n          >\n            {!this.state.displayDetail && (\n              <Button\n                size=\"small\"\n                aria-label=\"detail\"\n                onClick={() => {\n                  this.setState({ displayDetail: true })\n                  // this.props.enableScroll({ enableScroll: true })\n                }}\n                style={{ color: \"gray\" }}\n              >\n                <MoreHorizIcon fontSize=\"small\" />\n                {t(\"WordDetailButtonText\", \"Detail\")}\n              </Button>\n            )}\n            {(this.state.displayDetail ||\n              word.pos.includes(\"DEPRECATED\") ||\n              word.pos.includes(\"GAIRAIGO\") ||\n              word.pos.includes(\"INTERJ\") ||\n              word.pos.includes(\"PROPER\") ||\n              word.pos.includes(\"IDIOM\")) && (\n              <Button\n                size=\"small\"\n                aria-label=\"forget\"\n                onClick={() => {\n                  this.requestNext({ forget: true })\n                }}\n                style={{ color: \"gray\" }}\n              >\n                <LinkOffIcon fontSize=\"small\" />\n                {t(\"ForgetWordButtonText\", \"Forget\")}\n              </Button>\n            )}\n            {this.state.displayDetail && this.props.forcedWordKey !== word.key && (\n              <Button\n                size=\"small\"\n                aria-label=\"level plus one\"\n                onClick={() => this.requestJudge({ forceLevelChange: 1 })}\n                style={{ color: \"gray\" }}\n              >\n                <ExposurePlus1Icon fontSize=\"small\" />\n                {t(\"LevelPlusOneButtonText\", \"Level\")}\n              </Button>\n            )}\n            {this.state.displayDetail && this.props.forcedWordKey !== word.key && (\n              <Button\n                size=\"small\"\n                aria-label=\"level plus two\"\n                onClick={() => this.requestJudge({ forceLevelChange: 2 })}\n                style={{ color: \"gray\" }}\n              >\n                <ExposurePlus2Icon fontSize=\"small\" />\n                {t(\"LevelPlusTwoButtonText\", \"Level\")}\n              </Button>\n            )}\n            {this.state.displayDetail && (\n              <Button\n                size=\"small\"\n                aria-label=\"report wrong word\"\n                onClick={() => {\n                  this.setState({ isReportWordDialogOpened: true })\n                }}\n                style={{ color: \"gray\" }}\n              >\n                <ReportProblemIcon fontSize=\"small\" />\n                {t(\"ReportWordButtonText\", \"Report\")}\n              </Button>\n            )}\n          </div>\n        )}\n      </WordCard>\n    )\n    const NextWordCard = (\n      <WordCard\n        isTyping={this.props.isTyping}\n        JaWordCardProps={{\n          word: KanaDictionary.words[\"い\"],\n          display: wordCardDisplay,\n          status: wordCardStatus,\n        }}\n      />\n    )\n    return (\n      <div className=\"goi-tester\">\n        <Helmet>\n          {savingLanguage.startsWith(\"ja\") ? (\n            this.props.judgeResult === \"Pending\" ? (\n              <title>{t(\"PageTitleWhenEmptyForJaLearner\", \"PoiGoi\")}</title>\n            ) : (\n              <title>\n                {t(\"PageTitleWhenWordIsDisplayedForJaLearner\", {\n                  defaultValue: \"PoiGoi - {{wordkey}}\",\n                  wordkey: word.key,\n                })}\n              </title>\n            )\n          ) : this.props.judgeResult === \"Pending\" ? (\n            <title>{t(\"PageTitleWhenEmpty\", \"PoiGoi\")}</title>\n          ) : (\n            <title>\n              {t(\"PageTitleWhenWordIsDisplayed\", {\n                defaultValue: \"PoiGoi - {{wordkey}}\",\n                wordkey: word.key,\n              })}\n            </title>\n          )}\n        </Helmet>\n        <div\n          style={{\n            display: \"flex\",\n            marginTop: \"50px\", // avoid wechat \"No password\" tip\n            marginBottom: \"10px\",\n          }}\n        >\n          <TextField\n            label={t(\"MainInputLabel\", \"Justify your answer\")}\n            variant=\"outlined\"\n            value={this.state.testerInput}\n            style={{ flexGrow: 1 }}\n            onFocus={() => {\n              this.props.updateIsTyping({ isTyping: true })\n            }}\n            onBlur={() => {\n              this.props.updateIsTyping({ isTyping: false })\n            }}\n            onChange={e => {\n              this.setState({ testerInput: e.target.value })\n            }}\n            InputProps={{\n              placeholder:\n                this.props.judgeResult === \"Rejected\" ||\n                this.props.judgeResult === \"Wrong\"\n                  ? t(\n                      \"MainInputWrongPlaceholder\",\n                      \"Type correct answer to continue\"\n                    )\n                  : savingLanguage.startsWith(\"ja\")\n                  ? t(\n                      \"MainInputPendingPlaceholderForJaLearner\",\n                      \"Use japanese IME\"\n                    )\n                  : t(\"MainInputPendingPlaceholder\", \"Type your answer here\"),\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"Request judge\"\n                    edge=\"end\"\n                    onClick={() => this.requestJudge()}\n                  >\n                    <KeyboardReturnIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n              onKeyDown: e => {\n                if (e.key === \"Enter\") {\n                  this.requestJudge()\n                }\n              },\n            }}\n          ></TextField>\n          {this.props.judgeResult === \"Pending\" ? (\n            <Button\n              size=\"small\"\n              aria-label=\"Skip current word\"\n              onClick={() => this.requestJudge({ skip: true })}\n            >\n              {t(\"SkipWordButtonText\", \"Skip\")}\n              <RedoIcon fontSize=\"small\" />\n            </Button>\n          ) : (\n            <Button\n              size=\"small\"\n              aria-label=\"Show next word\"\n              onClick={() => this.requestNext()}\n            >\n              {t(\"NextWordButtonText\", \"Skip\")}\n              <ForwardIcon fontSize=\"small\" />\n            </Button>\n          )}\n        </div>\n        <WordCardStack\n          PreviousWordCard={PreviousWordCard}\n          CurrentWordCard={CurrentWordCard}\n          NextWordCard={NextWordCard}\n          onGestureNext={({ deltaX }) => {\n            this.requestJudge({ skip: true })\n          }}\n        />\n        <ResponsiveDialog open={this.state.isReportWordDialogOpened}>\n          {i18n.language.startsWith(\"zh\") ? (\n            <iframe\n              width=\"640px\"\n              height=\"480px\"\n              src=\"https://forms.office.com/Pages/ResponsePage.aspx?id=HO2aql64JEqeASBBMrBBF9_J_XUtkrhFhjg9N756g3xUNTBIMThERkFCT0JDS1JSOFhLSk45WFJKMyQlQCN0PWcu&embed=true\"\n              frameBorder={0}\n              marginWidth={0}\n              marginHeight={0}\n              style={{ border: \"none\", maxWidth: \"100%\", maxHeight: \"100vh\" }}\n              allowFullScreen\n            ></iframe>\n          ) : (\n            <iframe\n              width=\"640px\"\n              height=\"480px\"\n              src=\"https://forms.office.com/Pages/ResponsePage.aspx?id=HO2aql64JEqeASBBMrBBF9_J_XUtkrhFhjg9N756g3xUQTNBQUU2NllVUzdZRlcxMzM5Tk1JMkREUCQlQCN0PWcu&embed=true\"\n              frameBorder={0}\n              marginWidth={0}\n              marginHeight={0}\n              style={{ border: \"none\", maxWidth: \"100%\", maxHeight: \"100vh\" }}\n              allowFullScreen\n            ></iframe>\n          )}\n          <DialogActions>\n            <Button\n              onClick={() => {\n                this.setState({ isReportWordDialogOpened: false })\n              }}\n            >\n              {t(\"CloseReportWordButtonText\", \"Close\")}\n            </Button>\n          </DialogActions>\n        </ResponsiveDialog>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: RootStateType) => {\n  debug(\"GoiTester state: \", state)\n  const props = {\n    isTyping: state.GoiTester.get(\"IsTyping\") as boolean,\n    poiUserId: state.GoiUser.get(\"PoiUserId\") as PoiUser.PoiUserId,\n    savingId: state.GoiSaving.get(\"SavingId\") as GoiSavingId,\n    currentWord: state.GoiTester.get(\"CurrentWord\"),\n    currentWordKey: state.GoiTester.getIn([\"CurrentWord\", \"key\"]) as string,\n    currentLevel: state.GoiTester.has(\"Record\")\n      ? (state.GoiTester.getIn([\"Record\", \"Level\"]) as number)\n      : null,\n    judgeResult: state.GoiTester.get(\"JudgeResult\") as GoiJudgeResult,\n    forcedWordKey: state.GoiTester.get(\"ForcedWordKey\") as string,\n    saving: state.GoiSaving.get(\"Saving\") as\n      | GoiSavingDataType\n      | null\n      | undefined,\n    learnedCandidates: state.GoiTester.get(\"LearnedCandidates\"),\n    prioritiedCandidates: state.GoiTester.get(\"PrioritiedCandidates\"),\n    pendingCandidates: state.GoiTester.get(\"PendingCandidates\"),\n  }\n  debug(\"GoiTester props: \", props)\n  return props\n}\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<RootStateType, void, Action>\n) => {\n  return {\n    lazyInitUser: () => dispatch(LazyInitUserAction()),\n    lazyInitSaving: ({ poiUserId }: { poiUserId: PoiUser.PoiUserId }) =>\n      dispatch(LazyInitSavingAction({ poiUserId })),\n    updateIsTyping: ({ isTyping }: { isTyping: boolean }) =>\n      dispatch(UpdateIsTypingAction({ isTyping })),\n    enableScroll: ({ enableScroll }: { enableScroll: boolean }) =>\n      dispatch(UpdateEnableScrollAction({ enableScroll })),\n    showNextWord: (\n      {\n        poiUserId,\n        savingId,\n      }: { poiUserId: PoiUser.PoiUserId; savingId: GoiSavingId },\n      {\n        currentWordKey,\n        learnedCandidates,\n        prioritiedCandidates,\n        pendingCandidates,\n      }: {\n        currentWordKey?: string\n        learnedCandidates?: TreeMultiSet<GoiWordRecordDataType>\n        prioritiedCandidates?: TreeMultiSet<GoiWordRecordDataType>\n        pendingCandidates?: TreeMultiSet<GoiWordRecordDataType>\n      } = {}\n    ) =>\n      dispatch(\n        ShowNextWordAction(\n          { poiUserId, savingId },\n          {\n            currentWordKey,\n            learnedCandidates,\n            prioritiedCandidates,\n            pendingCandidates,\n          }\n        )\n      ),\n    judgeAnswer: (\n      {\n        answer,\n        word,\n        skip,\n        forceLevelChange,\n      }: {\n        answer: string\n        word: GoiWordType\n        skip?: boolean\n        forceLevelChange?: number\n      },\n      {\n        poiUserId,\n        savingId,\n      }: {\n        poiUserId: PoiUser.PoiUserId\n        savingId: GoiSavingId\n      }\n    ) =>\n      dispatch(\n        VerifyAnswerAction(\n          { answer, word, skip, forceLevelChange },\n          { poiUserId, savingId }\n        )\n      ),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withTranslation(\"GoiTester\")(GoiTester))\n","import { LocaleCode, I18nString } from \"../types/PoiI18nTypes\"\n\nexport const LookUp = (i18nString: I18nString, locale: LocaleCode) => {\n  // TODO(nagi): Write better lookup\n  if (locale.startsWith(\"zh\")) {\n    if (i18nString.zh) {\n      return i18nString.zh\n    }\n  }\n  if (locale.startsWith(\"ja\")) {\n    if (i18nString.ja) {\n      return i18nString.ja\n    }\n  }\n  return i18nString.en || \"\"\n}\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport {\n  TextField,\n  Container,\n  Dialog,\n  InputAdornment,\n  IconButton,\n  Typography,\n  Divider,\n  List as MuiList,\n  ListItem as MuiListItem,\n  ListItemText as MuiListItemText,\n  ListItemSecondaryAction as MuiListItemSecondaryAction,\n  Button,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  useMediaQuery,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\"\nimport SearchIcon from \"@material-ui/icons/SearchOutlined\"\nimport * as PoiUser from \"../utils/PoiUser\"\nimport {\n  DisplayWordAdderAction,\n  AddPendingQueryAction,\n  AddPendingQuerysAction,\n  RemovePendingQueryAction,\n  AddWordsFromQuerysAction,\n  ClearPendingWordsAction,\n  CountSubtotalAction,\n  UpdateFilterAction,\n  RefreshWordAdderAction,\n  ChangeFilterAction,\n  BasicPos,\n} from \"../actions/WordAdderActions\"\nimport {\n  WordAdderSuggestionQueryType,\n  WordAdderQueryCountersType,\n  WordAdderPendingQueryType,\n  WordAdderQueryType,\n  WordFilterType,\n} from \"../states/WordAdderState\"\nimport { GoiSavingId } from \"../types/GoiTypes\"\nimport { RootStateType } from \"../states/RootState\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { Action } from \"redux\"\nimport { ShowNextWordAction } from \"../actions/GoiTesterActions\"\nimport DeleteIcon from \"@material-ui/icons/DeleteOutlined\"\nimport AddIcon from \"@material-ui/icons/AddOutlined\"\nimport CloseIcon from \"@material-ui/icons/CloseOutlined\"\nimport ExploreOffIcon from \"@material-ui/icons/ExploreOffOutlined\"\nimport { useTheme } from \"@material-ui/styles\"\nimport ResponsiveDialog from \"../components/ResponsiveDialog\"\nimport { I18nString } from \"../types/PoiI18nTypes\"\nimport { withTranslation, WithTranslation } from \"react-i18next\"\nimport { LookUp } from \"../utils/PoiI18n\"\nimport { LocaleCode } from \"../types/PoiI18nTypes\"\nimport DebugModule from \"debug\"\nconst debug = DebugModule(\"PoiGoi:WordAdder\")\n\ntype WordAdderPropsType = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps> &\n  WithTranslation\ninterface WordAdderStateType {\n  customQuery: string\n  addingWordsProgress: boolean\n}\nconst QueryRegexPopup = ({ regex }: { regex: string }) => {\n  return <span style={{ color: \"gray\", fontSize: \"0.5rem\" }}>/{regex}/</span>\n}\nexport class WordAdder extends React.Component<\n  WordAdderPropsType,\n  WordAdderStateType\n> {\n  constructor(props: WordAdderPropsType) {\n    super(props)\n    this.state = { customQuery: \"\", addingWordsProgress: false }\n  }\n  getSuggestionQuerys = (): string[] => {\n    const suggestions: WordAdderSuggestionQueryType[] = this.props.suggestions.toJS()\n    return suggestions.map(suggestion => suggestion.Query)\n  }\n  getPendingQuerys = (): string[] => {\n    const pendings: WordAdderPendingQueryType[] = this.props.pendings.toJS()\n    return pendings.map(pending => pending.Query)\n  }\n  addSuggestion = async (\n    suggestion: WordAdderSuggestionQueryType\n  ): Promise<void> => {\n    const { poiUserId, savingId } = this.props\n    const filter: WordFilterType = this.props.filter.toJS()\n    if (Array.isArray(suggestion.SubQuerys)) {\n      await this.props.addPendingQuerys({\n        querys: [\n          ...suggestion.SubQuerys,\n          { Display: suggestion.Display, Query: suggestion.Query },\n        ],\n        filter,\n        poiUserId,\n        savingId,\n      })\n    }\n    await this.props.countSubtotal({\n      querys: [\n        ...this.getPendingQuerys(),\n        ...(suggestion.SubQuerys || []).map(query => query.Query),\n      ],\n      filter: this.props.filter.toJS(),\n      poiUserId,\n      savingId,\n    })\n  }\n  clearAllPendingQuerys = async () => {\n    await Promise.all(\n      this.getPendingQuerys().map(query =>\n        this.props.removePendingQuery({ query })\n      )\n    )\n  }\n  onClickConfirm = async () => {\n    const { poiUserId, savingId } = this.props\n    const filter: WordFilterType = this.props.filter.toJS()\n    this.setState({ addingWordsProgress: true })\n    await this.props.addWordsFromQuerys({\n      querys: this.getPendingQuerys(),\n      filter,\n      poiUserId,\n      savingId,\n    })\n    this.setState({ addingWordsProgress: false })\n    this.props.close()\n    await this.clearAllPendingQuerys()\n    await this.props.showNextWord(poiUserId, savingId)\n  }\n  addCustomQuery = async () => {\n    const { poiUserId, savingId } = this.props\n    const filter: WordFilterType = this.props.filter.toJS()\n    const query = this.state.customQuery.trim()\n    await this.props.addPendingQuery({\n      display: { en: \"Custom\", zh: \"自定义搜索条件\" },\n      query,\n      filter,\n      poiUserId,\n      savingId,\n    })\n    await this.props.countSubtotal({\n      querys: [...this.getPendingQuerys(), query],\n      filter,\n      poiUserId,\n      savingId,\n    })\n  }\n  onClickRemovePendingQuery = async ({ query }: { query: string }) => {\n    const { poiUserId, savingId } = this.props\n    await this.props.removePendingQuery({ query })\n    const newPendingQuerys = this.getPendingQuerys().filter(\n      pendingQuery => pendingQuery != query\n    )\n    await this.props.countSubtotal({\n      querys: newPendingQuerys,\n      filter: this.props.filter.toJS(),\n      poiUserId,\n      savingId,\n    })\n  }\n  render() {\n    const { t, i18n } = this.props\n    const { poiUserId, savingId } = this.props\n    const filter: WordFilterType = this.props.filter.toJS()\n    const includedBasicPos = BasicPos.filter(pos =>\n      filter.AcceptPos.includes(pos)\n    )\n    const isBasicFilterChecked =\n      includedBasicPos.length === 0\n        ? false\n        : includedBasicPos.length === BasicPos.length\n        ? true\n        : null\n    const { learnedCount, prioritiedCount, pendingCount } = {\n      learnedCount: this.props.status.get(\"LearnedCount\") as number,\n      prioritiedCount: this.props.status.get(\"PrioritiedCount\") as number,\n      pendingCount: this.props.status.get(\"PendingCount\") as number,\n    }\n    const suggestions: WordAdderSuggestionQueryType[] = this.props.suggestions.toJS()\n    const pendings: WordAdderPendingQueryType[] = this.props.pendings.toJS()\n    const counters: WordAdderQueryCountersType = this.props.counters.toJS()\n    return (\n      <ResponsiveDialog className=\"word-adder\" open={this.props.display}>\n        <DialogTitle>{t(\"WordAdderTitle\", \"Add words\")}</DialogTitle>\n        <DialogContent dividers>\n          <MuiList dense={true}>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <TextField\n                label={t(\"SavingStatusLearnedCountLabel\", \"Learned\")}\n                value={learnedCount >= 0 ? learnedCount : \"...\"}\n                margin=\"none\"\n                style={{ marginRight: \"10px\", flex: 1 }}\n                InputProps={{ readOnly: true }}\n              ></TextField>\n              <TextField\n                label={t(\"SavingStatusPrioritiedCountLabel\", \"Prioritied\")}\n                value={prioritiedCount >= 0 ? prioritiedCount : \"...\"}\n                margin=\"none\"\n                style={{ marginRight: \"10px\", flex: 1 }}\n                InputProps={{ readOnly: true }}\n              ></TextField>\n              <TextField\n                label={t(\"SavingStatusPendingCountLabel\", \"Pending\")}\n                value={pendingCount >= 0 ? pendingCount : \"...\"}\n                margin=\"none\"\n                style={{ flex: 1 }}\n                InputProps={{\n                  readOnly: true,\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        size=\"small\"\n                        aria-label=\"Clear pending words\"\n                        onClick={() =>\n                          this.props.clearPendingWords({\n                            poiUserId,\n                            savingId,\n                          })\n                        }\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              ></TextField>\n            </div>\n            <MuiListItem></MuiListItem>\n            <Divider component=\"li\" />\n            <li>\n              <Typography display=\"block\" variant=\"caption\">\n                {t(\"SuggestionSectionTitle\", \"Suggested Word Querys\")}\n              </Typography>\n            </li>\n            {suggestions.map(suggestion => {\n              const {\n                TotalCount,\n                LearnedCount,\n                AddedCount,\n                NewCount,\n              } = counters[suggestion.Query]\n                ? counters[suggestion.Query]\n                : {\n                    TotalCount: -1,\n                    LearnedCount: -1,\n                    AddedCount: -1,\n                    NewCount: -1,\n                  }\n              return (\n                <MuiListItem key={`suggestion${suggestion.Query}`}>\n                  <MuiListItemText\n                    primary={\n                      <>\n                        {LookUp(\n                          suggestion.Display,\n                          i18n.language as LocaleCode\n                        )}\n                        <QueryRegexPopup regex={suggestion.Query} />\n                        {counters[suggestion.Query] &&\n                          t(\"CountQueryTotalResult\", {\n                            defaultValue: \" {{total}} words\",\n                            total: TotalCount >= 0 ? TotalCount : \"...\",\n                          })}\n                      </>\n                    }\n                    secondary={\n                      counters[suggestion.Query] ? (\n                        <>\n                          {t(\"CountSuggestionQueryResult\", {\n                            defaultValue:\n                              \"Learned {{learned}} | Added {{added}} | New {{new}}\",\n                            learned: LearnedCount >= 0 ? LearnedCount : \"...\",\n                            added: AddedCount >= 0 ? AddedCount : \"...\",\n                            new: NewCount >= 0 ? NewCount : \"...\",\n                          })}\n                        </>\n                      ) : null\n                    }\n                  ></MuiListItemText>\n                  <MuiListItemSecondaryAction>\n                    <IconButton\n                      edge=\"end\"\n                      aria-label=\"Add suggestion query\"\n                      onClick={() => this.addSuggestion(suggestion)}\n                    >\n                      <AddIcon />\n                    </IconButton>\n                  </MuiListItemSecondaryAction>\n                </MuiListItem>\n              )\n            })}\n            <div style={{ display: \"flex\" }}>\n              <TextField\n                label={t(\"CustomQueryInputLabel\", \"Custom Query\")}\n                variant=\"outlined\"\n                value={this.state.customQuery}\n                style={{ flexGrow: 1 }}\n                onChange={e => {\n                  this.setState({ customQuery: e.target.value })\n                }}\n                InputProps={{\n                  placeholder: t(\n                    \"CustomQueryInputPlaceholder\",\n                    \"(e.g. JLPT-N5) Accept RegExp\"\n                  ),\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"add query\"\n                        edge=\"end\"\n                        onClick={() => this.addCustomQuery()}\n                      >\n                        <SearchIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                  onKeyDown: e => {\n                    if (e.key === \"Enter\") {\n                      this.addCustomQuery()\n                    }\n                  },\n                }}\n              ></TextField>\n            </div>\n            <MuiListItem></MuiListItem>\n            <Divider component=\"li\" />\n            <li>\n              <Typography display=\"block\" variant=\"caption\">\n                {t(\"WordsToAddSectionTitle\", \"Words to add (Order matters)\")}\n              </Typography>\n            </li>\n            {pendings.length ? (\n              <>\n                <MuiListItem key=\"ClearAllPendingQuerys\">\n                  <MuiListItemText\n                    primary={t(\"CountTotalPendingWords\", {\n                      defaultValue: \"Total new: {{new}}\",\n                      new:\n                        this.props.subtotal >= 0 ? this.props.subtotal : \"...\",\n                    })}\n                    secondary={t(\n                      \"ClearAllPendingsItemText\",\n                      \"Click right button to clear list\"\n                    )}\n                  ></MuiListItemText>\n                  <MuiListItemSecondaryAction>\n                    <IconButton\n                      edge=\"end\"\n                      aria-label=\"clear all pending query\"\n                      onClick={() => this.clearAllPendingQuerys()}\n                    >\n                      <ExploreOffIcon />\n                    </IconButton>\n                  </MuiListItemSecondaryAction>\n                </MuiListItem>\n                {pendings.map(pending => {\n                  const {\n                    TotalCount,\n                    LearnedCount,\n                    AddedCount,\n                    NewCount,\n                  } = counters[pending.Query]\n                    ? counters[pending.Query]\n                    : {\n                        TotalCount: -1,\n                        LearnedCount: -1,\n                        AddedCount: -1,\n                        NewCount: -1,\n                      }\n                  return (\n                    <MuiListItem key={`pending${pending.Query}`}>\n                      <MuiListItemText\n                        primary={\n                          <>\n                            {LookUp(\n                              pending.Display,\n                              i18n.language as LocaleCode\n                            )}\n                            <QueryRegexPopup regex={pending.Query} />\n                            {counters[pending.Query] &&\n                              t(\"CountQueryTotalResult\", {\n                                defaultValue: \" {{total}} words\",\n                                total: TotalCount >= 0 ? TotalCount : \"...\",\n                              })}\n                          </>\n                        }\n                        secondary={\n                          counters[pending.Query] ? (\n                            <>\n                              {t(\"CountPendingQueryResult\", {\n                                defaultValue:\n                                  \"Learned {{learned}} | Added {{added}} | New {{new}}\",\n                                learned:\n                                  LearnedCount >= 0 ? LearnedCount : \"...\",\n                                added: AddedCount >= 0 ? AddedCount : \"...\",\n                                new: NewCount >= 0 ? NewCount : \"...\",\n                              })}\n                            </>\n                          ) : null\n                        }\n                      ></MuiListItemText>\n\n                      <MuiListItemSecondaryAction>\n                        <IconButton\n                          edge=\"end\"\n                          aria-label=\"remove pending query\"\n                          onClick={() =>\n                            this.onClickRemovePendingQuery({\n                              query: pending.Query,\n                            })\n                          }\n                        >\n                          <CloseIcon />\n                        </IconButton>\n                      </MuiListItemSecondaryAction>\n                    </MuiListItem>\n                  )\n                })}\n              </>\n            ) : (\n              <MuiListItem>\n                <MuiListItemText>\n                  {t(\"NoWordsItemPlaceholder\", \"No words to add\")}\n                </MuiListItemText>\n              </MuiListItem>\n            )}\n            <Divider component=\"li\" />\n            <li>\n              <Typography display=\"block\" variant=\"caption\">\n                {t(\"FiltersSectionTitle\", \"Filters\")}\n              </Typography>\n            </li>\n            <div style={{ display: \"flux\" }}>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={isBasicFilterChecked === true}\n                    indeterminate={isBasicFilterChecked === null}\n                    onChange={e => {\n                      this.props.changeFilter({\n                        acceptBasic: e.target.checked,\n                      })\n                    }}\n                    value=\"BasicFilter\"\n                  />\n                }\n                label={t(\"BasicFilterLabel\", \"Basic\")}\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={filter.AcceptPos.includes(\"PROPER\")}\n                    onChange={e => {\n                      this.props.changeFilter({\n                        acceptPosFlags: { PROPER: e.target.checked },\n                      })\n                    }}\n                    value=\"ProperFilter\"\n                  />\n                }\n                label={t(\"ProperFilterLabel\", \"Proper\")}\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={filter.AcceptPos.includes(\"IDIOM\")}\n                    onChange={e => {\n                      this.props.changeFilter({\n                        acceptPosFlags: { IDIOM: e.target.checked },\n                      })\n                    }}\n                    value=\"IdiomFilter\"\n                  />\n                }\n                label={t(\"IdiomFilterLabel\", \"Idiom\")}\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={filter.AcceptExtra}\n                    value=\"ExtraFilter\"\n                    onChange={e => {\n                      this.props.changeFilter({\n                        acceptExtra: e.target.checked,\n                      })\n                    }}\n                  />\n                }\n                label={t(\"ExtraFilterLabel\", \"Extra\")}\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={filter.AcceptForgot}\n                    value=\"ForgotFilter\"\n                    onChange={e => {\n                      this.props.changeFilter({\n                        acceptForgot: e.target.checked,\n                      })\n                    }}\n                  />\n                }\n                label={t(\"ForgotFilterLabel\", \"Forgot\")}\n              />\n            </div>\n          </MuiList>\n        </DialogContent>\n        <DialogActions>\n          {this.state.addingWordsProgress ? (\n            <Button disabled>\n              {t(\"AddingWordsProgressText\", \"Adding words...\")}\n            </Button>\n          ) : (\n            <>\n              <Button onClick={() => this.props.close()}>\n                {t(\"WordAdderCancelButtonText\", \"Cancel\")}\n              </Button>\n              {pendings.length <= 0 ? (\n                <Button disabled>\n                  {t(\"NoPendingWordsPromptText\", \"No words\")}\n                </Button>\n              ) : (\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={this.onClickConfirm}\n                >\n                  {t(\"WordAdderConfirmButtonText\", \"Add these words\")}\n                </Button>\n              )}\n            </>\n          )}\n        </DialogActions>\n      </ResponsiveDialog>\n    )\n  }\n}\n\nconst mapStateToProps = (state: RootStateType) => {\n  debug(\"WordAdderContainer state: \", state)\n  const props = {\n    display: state.WordAdder.get(\"Display\") as boolean,\n    status: state.WordAdder.get(\"Status\"),\n    suggestions: state.WordAdder.get(\"Suggestions\"),\n    pendings: state.WordAdder.get(\"Pendings\"),\n    counters: state.WordAdder.get(\"Counters\"),\n    filter: state.WordAdder.get(\"Filter\"),\n    subtotal: state.WordAdder.get(\"Subtotal\") as number,\n    saving: state.GoiSaving.get(\"Saving\"),\n    poiUserId: state.GoiUser.get(\"PoiUserId\") as PoiUser.PoiUserId,\n    savingId: state.GoiSaving.get(\"SavingId\") as GoiSavingId,\n  }\n  debug(\"WordAdderContainer props: \", props)\n  return props\n}\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<RootStateType, void, Action>\n) => {\n  return {\n    clearPendingWords: ({\n      poiUserId,\n      savingId,\n    }: {\n      poiUserId: PoiUser.PoiUserId\n      savingId: GoiSavingId\n    }) => dispatch(ClearPendingWordsAction({ poiUserId, savingId })),\n    addPendingQuery: ({\n      display,\n      query,\n      filter,\n      poiUserId,\n      savingId,\n    }: {\n      display: I18nString\n      query: string\n      filter: WordFilterType\n      poiUserId: PoiUser.PoiUserId\n      savingId: GoiSavingId\n    }) =>\n      dispatch(\n        AddPendingQueryAction({ display, query, filter, poiUserId, savingId })\n      ),\n    addPendingQuerys: ({\n      querys,\n      filter,\n      poiUserId,\n      savingId,\n    }: {\n      querys: WordAdderQueryType[]\n      filter: WordFilterType\n      poiUserId: PoiUser.PoiUserId\n      savingId: GoiSavingId\n    }) =>\n      dispatch(AddPendingQuerysAction({ querys, filter, poiUserId, savingId })),\n    removePendingQuery: ({ query }: { query: string }) =>\n      dispatch(RemovePendingQueryAction({ query })),\n    addWordsFromQuerys: ({\n      querys,\n      filter,\n      poiUserId,\n      savingId,\n    }: {\n      querys: string[]\n      filter: WordFilterType\n      poiUserId: PoiUser.PoiUserId\n      savingId: GoiSavingId\n    }) =>\n      dispatch(\n        AddWordsFromQuerysAction({ querys, filter, poiUserId, savingId })\n      ),\n    close: () => dispatch(DisplayWordAdderAction({ display: false })),\n    showNextWord: (poiUserId: PoiUser.PoiUserId, savingId: GoiSavingId) =>\n      dispatch(ShowNextWordAction({ poiUserId, savingId })),\n    refreshWordAdder: () => dispatch(RefreshWordAdderAction()),\n    countSubtotal: ({\n      querys,\n      filter,\n      poiUserId,\n      savingId,\n    }: {\n      querys: string[]\n      filter: WordFilterType\n      poiUserId: PoiUser.PoiUserId\n      savingId: GoiSavingId\n    }) =>\n      dispatch(\n        CountSubtotalAction({\n          querys,\n          filter,\n          poiUserId,\n          savingId,\n        })\n      ),\n    changeFilter: ({\n      acceptBasic,\n      acceptPosFlags,\n      acceptExtra,\n      acceptForgot,\n    }: {\n      acceptBasic?: boolean\n      acceptPosFlags?: {\n        [pos: string]: boolean\n      }\n      acceptExtra?: boolean\n      acceptForgot?: boolean\n    }) =>\n      dispatch(\n        ChangeFilterAction({\n          acceptBasic,\n          acceptPosFlags,\n          acceptExtra,\n          acceptForgot,\n        })\n      ),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withTranslation(\"WordAdder\")(WordAdder))\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { withTranslation, WithTranslation } from \"react-i18next\"\nimport { Action } from \"redux\"\nimport { Button, GridList, GridListTile, IconButton } from \"@material-ui/core\"\nimport { SpeedDial, SpeedDialAction } from \"@material-ui/lab\"\nimport { navigate } from \"gatsby\"\nimport { RootStateType } from \"../states/RootState\"\nimport * as PoiUser from \"../utils/PoiUser\"\nimport { GoiSavingId } from \"../types/GoiTypes\"\nimport { ToggleEvents } from \"../utils/PoiResponsive\"\nimport { GoiWordRecordDataType, GoiSavingDataType } from \"../models/GoiSaving\"\nimport { ShowWordAdderAction } from \"../actions/WordAdderActions\"\nimport { TreeMultiSet } from \"tstl\"\nimport AddIcon from \"@material-ui/icons/AddOutlined\"\nimport CloudOffIcon from \"@material-ui/icons/CloudOffOutlined\"\nimport CreateIcon from \"@material-ui/icons/CreateOutlined\"\nimport FingerprintIcon from \"@material-ui/icons/FingerprintOutlined\"\nimport FirstPageIcon from \"@material-ui/icons/FirstPageOutlined\"\nimport FlagIcon from \"@material-ui/icons/FlagOutlined\"\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumberedOutlined\"\nimport FormatQuoteIcon from \"@material-ui/icons/FormatQuoteOutlined\"\nimport HighlightIcon from \"@material-ui/icons/HighlightOutlined\"\nimport MenuIcon from \"@material-ui/icons/MenuOutlined\"\nimport MoreHorizIcon from \"@material-ui/icons/MoreHorizOutlined\"\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNextOutlined\"\nimport PersonIcon from \"@material-ui/icons/PersonOutlined\"\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlayOutlined\"\nimport SearchIcon from \"@material-ui/icons/SearchOutlined\"\nimport ShareIcon from \"@material-ui/icons/ShareOutlined\"\nimport ShuffleIcon from \"@material-ui/icons/ShuffleOutlined\"\nimport SmsIcon from \"@material-ui/icons/SmsOutlined\"\nimport SyncIcon from \"@material-ui/icons/SyncOutlined\"\nimport ThumbsUpDownIcon from \"@material-ui/icons/ThumbsUpDownOutlined\"\nimport VolumeOffIcon from \"@material-ui/icons/VolumeOffOutlined\"\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUpOutlined\"\nimport RefreshIcon from \"@material-ui/icons/RefreshOutlined\"\nimport ExposureNeg1Icon from \"@material-ui/icons/ExposureNeg1Outlined\"\nimport DebugModule from \"debug\"\nimport { WordFilterType } from \"../states/WordAdderState\"\nimport {\n  NewWordsOrderType,\n  RevisitStrategyType,\n} from \"../states/GoiSettingsState\"\nimport { UpdateGoiSettingsStateAction } from \"../actions/GoiSettingsActions\"\nconst debug = DebugModule(\"PoiGoi:CommandsBar\")\n\ntype CommandsBarPropsType = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps> &\n  WithTranslation\ninterface CommandsBarStateType {\n  isMenuOpened: boolean\n  isCommandsExpanded: boolean\n}\n\nexport class CommandsBar extends React.Component<\n  CommandsBarPropsType,\n  CommandsBarStateType\n> {\n  commandsContainerRef = React.createRef<HTMLDivElement>()\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      isMenuOpened: false,\n      isCommandsExpanded: false,\n    }\n  }\n  navigate(to: string) {\n    navigate(to, { replace: true })\n  }\n  openMenu = () => {\n    this.setState({ isMenuOpened: true })\n  }\n  closeMenu = () => {\n    this.setState({ isMenuOpened: false })\n  }\n  toggleMenu = (display?: boolean) => {\n    if (typeof display === \"undefined\") {\n      display = !this.state.isMenuOpened\n    }\n    this.setState({ isMenuOpened: display })\n  }\n  render() {\n    const { t } = this.props\n    const smDown: boolean =\n      typeof window !== \"undefined\" ? window.innerWidth < 600 : false\n    const savingLanguage =\n      this.props.saving && this.props.saving.Language\n        ? this.props.saving.Language\n        : \"en\"\n    return (\n      <div\n        className=\"commands-bar\"\n        style={{\n          pointerEvents: \"none\", // prevent blocking wordcard ui\n          visibility: smDown && this.props.isTyping ? \"hidden\" : \"inherit\",\n          position: \"fixed\",\n          bottom: \"20px\",\n          right: \"20px\",\n          display: \"inline-flex\",\n          alignItems: \"flex-end\",\n          maxWidth: \"calc(100vw - 20px)\",\n        }}\n      >\n        <div\n          style={{\n            pointerEvents: \"auto\",\n            display: \"flex\",\n            height: \"40px\",\n            marginBottom: \"8px\",\n          }}\n        >\n          <div\n            style={{\n              margin: \"auto\",\n            }}\n          >\n            {smDown && this.state.isCommandsExpanded && (\n              <IconButton\n                size=\"small\"\n                aria-label=\"Scroll command bar to left end\"\n                onClick={() => {\n                  this.commandsContainerRef.current &&\n                    this.commandsContainerRef.current.scrollTo({\n                      left: -10000,\n                      behavior: \"smooth\",\n                    })\n                }}\n              >\n                <FirstPageIcon fontSize=\"small\" />\n              </IconButton>\n            )}\n          </div>\n        </div>\n        <div\n          ref={this.commandsContainerRef}\n          style={{\n            pointerEvents: \"auto\",\n            display: \"flex\",\n            height: \"40px\",\n            marginTop: \"8px\",\n            marginBottom: \"8px\",\n            overflowX: \"auto\",\n            overflowY: \"hidden\",\n            direction: \"rtl\",\n          }}\n        >\n          <div style={{ display: \"inline-flex\", direction: \"ltr\" }}>\n            {this.state.isCommandsExpanded ? (\n              <Button\n                size=\"small\"\n                style={{ whiteSpace: \"nowrap\" }}\n                onClick={() => {\n                  this.setState({ isCommandsExpanded: false })\n                }}\n              >\n                {/* parse text or audio to add new words */}\n                {t(\"FoldButtonText\", \"Less\")}\n                <NavigateNextIcon fontSize=\"small\" />\n              </Button>\n            ) : (\n              <Button\n                size=\"small\"\n                style={{ whiteSpace: \"nowrap\" }}\n                onClick={() => {\n                  this.setState({ isCommandsExpanded: true })\n                }}\n              >\n                {/* parse text or audio to add new words */}\n                {t(\"ExpandButtonText\", \"More\")}\n                <MoreHorizIcon fontSize=\"small\" />\n              </Button>\n            )}\n            {this.state.isCommandsExpanded && (\n              <>\n                <Button size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                  {/* parse text or audio to add new words */}\n                  [WIP]{t(\"ParseButtonText\", \"Parse\")}\n                  <FormatQuoteIcon fontSize=\"small\" />\n                </Button>\n                <Button size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                  [WIP]{t(\"SearchButtonText\", \"Search\")}\n                  <SearchIcon fontSize=\"small\" />\n                </Button>\n                {this.props.revisitStrategy === \"RevisitFirst\" ||\n                this.props.revisitStrategy === \"User\" ? (\n                  <Button\n                    size=\"small\"\n                    style={{ whiteSpace: \"nowrap\" }}\n                    onClick={() => {\n                      this.props.updateGoiSettingsState({\n                        revisitStrategy: \"NoRevisit\",\n                      })\n                    }}\n                  >\n                    {t(\"RevisitFirstButtonText\", \"Revisit\")}\n                    <RefreshIcon fontSize=\"small\" />\n                  </Button>\n                ) : (\n                  <Button\n                    size=\"small\"\n                    style={{ whiteSpace: \"nowrap\" }}\n                    onClick={() => {\n                      this.props.updateGoiSettingsState({\n                        revisitStrategy: \"RevisitFirst\",\n                      })\n                    }}\n                  >\n                    {t(\"NoRevisitButtonText\", \"NoRevisit\")}\n                    <ExposureNeg1Icon fontSize=\"small\" />\n                  </Button>\n                )}\n                {this.props.newWordsOrder === \"Ordered\" ||\n                this.props.newWordsOrder === \"User\" ? (\n                  <Button\n                    size=\"small\"\n                    style={{ whiteSpace: \"nowrap\" }}\n                    onClick={() => {\n                      this.props.updateGoiSettingsState({\n                        newWordsOrder: \"Shuffle\",\n                      })\n                    }}\n                  >\n                    {t(\"OrderedButtonText\", \"Ordered\")}\n                    <PlaylistPlayIcon fontSize=\"small\" />\n                  </Button>\n                ) : (\n                  <Button\n                    size=\"small\"\n                    style={{ whiteSpace: \"nowrap\" }}\n                    onClick={() => {\n                      this.props.updateGoiSettingsState({\n                        newWordsOrder: \"Ordered\",\n                      })\n                    }}\n                  >\n                    {t(\"ShuffleButtonText\", \"Shuffle\")}\n                    <ShuffleIcon fontSize=\"small\" />\n                  </Button>\n                )}\n                <Button size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                  {/* type select swipe */}\n                  [WIP]{t(\"ModeButtonText\", \"Mode\")}\n                  <CreateIcon fontSize=\"small\" />\n                  {false && <FormatListNumberedIcon fontSize=\"small\" />}\n                  {false && <ThumbsUpDownIcon fontSize=\"small\" />}\n                </Button>\n                <Button size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                  {/* swich savings in different mode */}\n                  [WIP]{t(\"SavingsButtonText\", \"Savings\")}\n                  <FingerprintIcon fontSize=\"small\" />\n                </Button>\n                <Button size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                  [WIP]{t(\"AudioButtonText\", \"Audio\")}\n                  <VolumeOffIcon fontSize=\"small\" />\n                  {false && <VolumeUpIcon fontSize=\"small\" />}\n                </Button>\n                <Button size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                  [WIP]{t(\"SwotUpButtonText\", \"SwotUp\")}\n                  <FlagIcon fontSize=\"small\" />\n                </Button>\n                <Button size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                  [WIP]{t(\"SyncButtonText\", \"Sync\")}\n                  <CloudOffIcon fontSize=\"small\" />\n                  {false && <SyncIcon fontSize=\"small\" />}\n                </Button>\n              </>\n            )}\n            {/* TODO: outline the button when all words are learned */}\n            <Button\n              size=\"small\"\n              {...(this.props.pendingCandidates.size() === 0 && {\n                color: \"secondary\",\n                variant: \"outlined\",\n              })}\n              style={{ whiteSpace: \"nowrap\" }}\n              onClick={() => this.props.showWordAdder()}\n            >\n              {t(\"AddWordsButtonText\", \"Words\")}\n              <AddIcon fontSize=\"small\" />\n            </Button>\n          </div>\n        </div>\n        <SpeedDial\n          ariaLabel=\"menu\"\n          open={this.state.isMenuOpened}\n          // open={true}\n          icon={<MenuIcon fontSize=\"small\" />}\n          {...ToggleEvents(this.toggleMenu)}\n          ButtonProps={{\n            color: \"default\",\n            size: \"small\",\n            style: { background: \"white\", margin: \"8px\" },\n          }}\n        >\n          <SpeedDialAction\n            key=\"share\"\n            icon={<ShareIcon fontSize=\"small\" />}\n            tooltipTitle={\"[WIP]\" + t(\"ShareMenuButtonText\", \"Share\")}\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              this.navigate(\"/\")\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"tegami\"\n            icon={<SmsIcon fontSize=\"small\" />}\n            tooltipTitle={\n              savingLanguage.startsWith(\"ja\")\n                ? \"作者の手紙\"\n                : t(\"TegamiMenuButtonText\", \"作者の手紙\")\n            }\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              this.navigate(\"/tegami/\")\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"mamechishiki\"\n            icon={<HighlightIcon />}\n            tooltipTitle={\n              savingLanguage.startsWith(\"ja\")\n                ? \"豆知識\"\n                : t(\"MamechishikiMenuButtonText\", \"豆知識\")\n            }\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              this.navigate(\"/mamechishiki/\")\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"searchwords\"\n            icon={<SearchIcon />}\n            tooltipTitle={\"[WIP]\" + t(\"SearchMenuButtonText\", \"Search Words\")}\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              this.navigate(\"/\")\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"addwords\"\n            icon={<AddIcon />}\n            tooltipTitle={t(\"AddWordsMenuButtonText\", \"Add Words\")}\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              this.props.showWordAdder()\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"profile\"\n            icon={<PersonIcon />}\n            tooltipTitle={\n              \"[WIP]\" +\n              t(\"ProfileMenuButtonText\", \"Profile, statics and settings\")\n            }\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              this.navigate(\"/profile/\")\n            }}\n          ></SpeedDialAction>\n        </SpeedDial>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: RootStateType) => {\n  debug(\"CommandsBar state: \", state)\n  const props = {\n    saving: state.GoiSaving.get(\"Saving\") as\n      | GoiSavingDataType\n      | null\n      | undefined,\n    pendingCandidates: state.GoiTester.get(\"PendingCandidates\") as TreeMultiSet<\n      GoiWordRecordDataType\n    >,\n    isTyping: state.GoiTester.get(\"IsTyping\") as boolean,\n    newWordsOrder: state.GoiSettings.get(\"NewWordsOrder\") as NewWordsOrderType,\n    revisitStrategy: state.GoiSettings.get(\n      \"RevisitStrategy\"\n    ) as RevisitStrategyType,\n  }\n  debug(\"CommandsBar props: \", props)\n  return props\n}\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<RootStateType, void, Action>\n) => {\n  return {\n    showWordAdder: () => dispatch(ShowWordAdderAction()),\n    updateGoiSettingsState: ({\n      newWordsOrder,\n      revisitStrategy,\n    }: {\n      newWordsOrder?: NewWordsOrderType\n      revisitStrategy?: RevisitStrategyType\n    }) =>\n      dispatch(\n        UpdateGoiSettingsStateAction({ newWordsOrder, revisitStrategy })\n      ),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withTranslation(\"CommandsBar\")(CommandsBar))\n","import React from \"react\"\nimport NavBar from \"../components/NavBar\"\nimport GoiTester from \"../containers/GoiTester\"\nimport WordAdder from \"../containers/WordAdder\"\nimport CommandsBar from \"../containers/CommandsBar\"\nimport Container from \"@material-ui/core/Container\"\nimport { Hidden } from \"@material-ui/core\"\nimport { poisky } from \"../utils/PoiColors\"\nimport { height } from \"@material-ui/system\"\nimport { RootStateType } from \"../states/RootState\"\nimport { connect } from \"react-redux\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { Action } from \"redux\"\n\ntype IndexPagePropsType = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>\nclass IndexPage extends React.Component<IndexPagePropsType> {\n  render() {\n    return (\n      <div\n        className=\"goi-index-page\"\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          overflow: \"hidden\",\n          position: \"fixed\",\n        }}\n      >\n        <Hidden xsDown>\n          <NavBar />\n        </Hidden>\n        <Hidden smUp>\n          <div style={{ background: poisky, height: \"1px\" }} />\n        </Hidden>\n        <main>\n          <WordAdder />\n          <Container>\n            <GoiTester />\n          </Container>\n        </main>\n        <CommandsBar />\n        <div\n          className=\"buildVersion\"\n          style={{\n            position: \"absolute\",\n            bottom: 0,\n            right: 0,\n            color: \"lightgray\",\n          }}\n        >\n          catfood build v1.20190825.rc1\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: RootStateType) => {\n  const props = {\n    enableScroll: state.Layout.get(\"EnableScroll\") as boolean,\n  }\n  return props\n}\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<RootStateType, void, Action>\n) => {\n  return {}\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IndexPage)\n"],"sourceRoot":""}