{"version":3,"sources":["webpack:///./src/pages/mamechishiki.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/PoiColors.ts","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/NavBar.tsx","webpack:///./src/components/Header.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","styled_components__WEBPACK_IMPORTED_MODULE_1__","_components_NavBar__WEBPACK_IMPORTED_MODULE_2__","_components_Header__WEBPACK_IMPORTED_MODULE_3__","_utils_PoiColors__WEBPACK_IMPORTED_MODULE_4__","react_helmet__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_5___default","Card","styled","div","withConfig","displayName","componentId","CardHeader","poisky3","CardBody","props","a","createElement","data","allMarkdownRemark","edges","map","edge","key","node","id","frontmatter","title","dangerouslySetInnerHTML","__html","html","m","module","exports","require","default","poisky","poisky5","ProdPageRenderer","_ref","location","pageResources","React","InternalPageRenderer","Object","assign","json","loader","enqueue","createContext","NavBar","nav","NavBarList","ul","NavBarLink","Link","NavBarItem","react_default","to","children"],"mappings":"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","file":"component---src-pages-mamechishiki-tsx-1baaf523efae8492f8b1.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { graphql } from \"gatsby\"\nimport NavBar from \"../components/NavBar\"\nimport Header from \"../components/Header\"\nimport { poisky3 } from \"../utils/PoiColors\"\nimport Helmet from \"react-helmet\"\n\nconst Card = styled.div``\nconst CardHeader = styled.div`\n  background: ${poisky3};\n`\nconst CardBody = styled.div``\n\nexport default (props: any) => (\n  <div>\n    <Helmet>\n      <title>Mamechishiki</title>\n    </Helmet>\n    <NavBar />\n    <Header>\n      <ruby>\n        豆<rt>まめ</rt>\n      </ruby>\n      <ruby>\n        知<rt>ち</rt>\n      </ruby>\n      <ruby>\n        識<rt>しき</rt>\n      </ruby>\n    </Header>\n    {props.data.allMarkdownRemark.edges.map((edge: any) => (\n      <Card key={edge.node.id}>\n        <CardHeader>{edge.node.frontmatter.title}</CardHeader>\n        <CardBody dangerouslySetInnerHTML={{ __html: edge.node.html }} />\n      </Card>\n    ))}\n  </div>\n)\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n          }\n          html\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","// Follow Ant Design\n// https://ant.design/docs/spec/colors\n\nexport const poisky = \"#99ccff\"\nexport const poisky1 = \"#f0faff\"\nexport const poisky2 = \"#f0f9ff\"\nexport const poisky3 = \"#f0f9ff\"\nexport const poisky4 = \"#ebf6ff\"\nexport const poisky5 = \"#c2e2ff\"\nexport const poisky6 = \"#99ccff\"\nexport const poisky7 = \"#77a5d9\"\nexport const poisky8 = \"#5980b3\"\nexport const poisky9 = \"#3f5e8c\"\nexport const poisky10 = \"#2d4266\"\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\nimport { Helmet } from \"react-helmet\"\nimport { poisky, poisky5 } from \"../utils/PoiColors\"\n\nconst NavBar = styled.nav`\n  top: 0;\n  left: 0;\n  width: 100%;\n`\nconst NavBarList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n  background-color: ${poisky};\n`\n\nconst NavBarLink = styled(Link)`\n  display: block;\n  color: white;\n  text-align: center;\n  padding: 14px 16px;\n  text-decoration: none;\n\n  :hover {\n    background-color: ${poisky5};\n  }\n`\n\nconst UnstyledNavBarItem = (props: any) => (\n  <li>\n    <NavBarLink {...props} />\n  </li>\n)\n\nconst NavBarItem = styled(UnstyledNavBarItem)`\n  float: left;\n`\n\nexport default () => (\n  <NavBar>\n    <NavBarList>\n      <NavBarItem to=\"/\">Home</NavBarItem>\n      <NavBarItem to=\"/mamechishiki/\">豆知識</NavBarItem>\n      <NavBarItem to=\"/tegami/\">手紙</NavBarItem>\n    </NavBarList>\n  </NavBar>\n)\n","import React from \"react\"\n\nexport default (props: any) => <h1>{props.children}</h1>\n"],"sourceRoot":""}