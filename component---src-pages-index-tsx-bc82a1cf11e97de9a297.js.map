{"version":3,"sources":["webpack:///./src/components/WordCards/JaWordCard.tsx","webpack:///./src/containers/GoiTester.tsx","webpack:///./src/containers/WordAdder.tsx","webpack:///./src/containers/CommandsBar.tsx","webpack:///./src/pages/index.tsx"],"names":["JaWordCard","_React$Component","apply","this","arguments","prototype","render","statusColor","props","status","react_default","a","createElement","className","word","pos","Fragment","display","dangerouslySetInnerHTML","__html","common","style","color","translation","KanaDictionary","ja","sentences","map","sentence","sentenceId","key","zh","React","Component","defaultProps","GoiTester","_this","_len","length","args","Array","_key","call","concat","JudgeInputElement","onRequestJudge","value","poiUserId","savingId","currentWord","toJS","judgeAnswer","onRequestNext","judgeResult","_this$props","currentWordKey","learnedCandidates","prioritiedCandidates","pendingCandidates","showNextWord","_proto","componentDidMount","_componentDidMount","regenerator_default","mark","_callee","wrap","_context","prev","next","console","debug","lazyInitUser","sent","lazyInitSaving","stop","_this2","wordCardStatus","Helmet_default","ref","c","onClick","WordCards_JaWordCard","connect","state","GoiUser","get","GoiSaving","saving","tester","dispatch","LazyInitUserAction","_ref","LazyInitSavingAction","_ref2","_temp","_ref3","ShowNextWordAction","answer","options","VerifyAnswerAction","WordAdder","getSuggestionQuerys","suggestions","suggestion","Query","getPendingQuerys","pendings","pending","onClickConfirm","WordAdder_asyncToGenerator","addWordsFromQuerys","querys","close","query","removePendingQuery","customQuery","counters","Dialog","open","Container","LearnedCount","PrioritiedCount","PendingCount","clearPendingWords","Display","TotalCount","AddedCount","NewCount","addPendingQuery","alignItems","TextField","label","variant","flexGrow","onChange","e","setState","target","InputProps","placeholder","endAdornment","InputAdornment","position","IconButton","aria-label","edge","SearchOutlined_default","ClearPendingWordsAction","_ref4","AddPendingQueryAction","_ref5","RemovePendingQueryAction","_ref6","_ref7","AddWordsFromQuerysAction","DisplayWordAdderAction","CommandsBar","openMenu","menuOpened","closeMenu","toggleMenu","bottom","right","Button","size","showWordAdder","height","margin","AddOutlined_default","fontSize","SpeedDial","ariaLabel","icon","MenuOutlined_default","onBlur","onClose","onFocus","onMouseEnter","onMouseLeave","ButtonProps","background","SpeedDialAction","ShareOutlined_default","tooltipTitle","tooltipOpen","SmsOutlined_default","navigate","HighlightOutlined_default","PersonOutlined_default","ShowWordAdderAction","__webpack_exports__","width","overflow","NavBar","containers_CommandsBar","containers_WordAdder","containers_GoiTester"],"mappings":"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","file":"component---src-pages-index-tsx-bc82a1cf11e97de9a297.js","sourcesContent":["import React from \"react\"\nimport { GoiJaWordType } from \"../../types/GoiDictionaryTypes\"\n\nexport type WordCardPropsType = {\n  word: GoiJaWordType\n  display: \"simple\" | \"detailed\" | \"test-common\" | \"test-translation\"\n  status:\n    | \"input\"\n    | \"first\"\n    | \"perfect\"\n    | \"good\"\n    | \"warning\"\n    | \"failed\"\n    | \"peek\"\n    | \"review\"\n}\n\nexport class JaWordCard extends React.Component<WordCardPropsType> {\n  static defaultProps = {\n    word: {\n      common: \"Common Placeholder\",\n      translation: \"Translation Placeholder\",\n    },\n    display: \"detailed\",\n    status: \"view\",\n  }\n  render() {\n    const statusColor =\n      this.props.status === \"input\"\n        ? \"gray\"\n        : this.props.status === \"first\"\n        ? \"blue\"\n        : this.props.status === \"perfect\"\n        ? \"darkgreen\"\n        : this.props.status === \"good\"\n        ? \"lightgreen\"\n        : this.props.status === \"warning\"\n        ? \"yellow\"\n        : this.props.status === \"failed\"\n        ? \"red\"\n        : this.props.status === \"peek\"\n        ? \"blue\"\n        : this.props.status === \"review\"\n        ? \"black\"\n        : \"black\"\n    return (\n      <div className=\"word-card\">\n        {this.props.word.pos === \"KANA\" ? (\n          <>\n            <div className=\"word-card-common\">\n              {this.props.display !== \"test-common\" && (\n                <span\n                  dangerouslySetInnerHTML={{ __html: this.props.word.common }}\n                ></span>\n              )}\n            </div>\n            <div\n              className=\"word-card-translation\"\n              style={{ color: statusColor }}\n            >\n              {this.props.word.translation.KanaDictionary.translation.ja}\n            </div>\n            <div className=\"word-card-sentences\">\n              {(this.props.word.sentences || []).map((sentence, sentenceId) => (\n                <div key={sentenceId}>\n                  <p>\n                    <span\n                      dangerouslySetInnerHTML={{ __html: sentence.sentence }}\n                    ></span>\n                  </p>\n                  <p>\n                    <span>{(sentence.translation || {}).zh}</span>\n                  </p>\n                </div>\n              ))}\n            </div>\n          </>\n        ) : (\n          <></>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default JaWordCard\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport JaWordCard from \"../components/WordCards/JaWordCard\"\nimport * as PoiUser from \"../utils/PoiUser\"\nimport { LazyInitUserAction } from \"../actions/GoiUserActions\"\nimport { LazyInitSavingAction } from \"../actions/GoiSavingActions\"\nimport {\n  VerifyAnswerAction,\n  ShowNextWordAction,\n} from \"../actions/GoiTesterActions\"\nimport { GoiSavingId, GoiJudgeResult } from \"../types/GoiTypes\"\nimport Helmet from \"react-helmet\"\nimport { GoiWordType, GoiJaWordType } from \"../types/GoiDictionaryTypes\"\nimport { RootStateType } from \"../states/RootState\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { Action } from \"redux\"\nimport Heap from \"../algorithm/Heap\"\nimport { GoiWordRecordDataType } from \"../models/GoiSaving\"\n\nexport class GoiTester extends React.Component<\n  ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>\n> {\n  JudgeInputElement: HTMLInputElement | null = null\n  async componentDidMount() {\n    console.debug(\"Lasy init user\")\n    const poiUserId = (await this.props.lazyInitUser()) as PoiUser.PoiUserId\n    console.debug(\"Lasy init saving\")\n    const savingId = await this.props.lazyInitSaving({ poiUserId })\n    await this.props.showNextWord({ poiUserId, savingId })\n  }\n  onRequestJudge = () => {\n    if (!this.JudgeInputElement || !this.JudgeInputElement.value) {\n      return\n    }\n    const poiUserId = this.props.poiUserId\n    const savingId = this.props.savingId\n    const word: GoiJaWordType = this.props.currentWord.toJS()\n    this.props.judgeAnswer(this.JudgeInputElement.value, word, {\n      poiUserId,\n      savingId,\n    })\n  }\n  onRequestNext = () => {\n    if (this.props.judgeResult === \"Pending\") {\n      //store skip result\n    }\n    const {\n      poiUserId,\n      savingId,\n      currentWordKey,\n      learnedCandidates,\n      prioritiedCandidates,\n      pendingCandidates,\n    } = this.props\n    this.props.showNextWord(\n      { poiUserId, savingId },\n      {\n        currentWordKey,\n        learnedCandidates,\n        prioritiedCandidates,\n        pendingCandidates,\n      }\n    )\n  }\n  render() {\n    const word: GoiJaWordType = this.props.currentWord.toJS()\n    const wordCardStatus =\n      this.props.judgeResult === \"Pending\"\n        ? \"input\"\n        : this.props.judgeResult === \"Correct\"\n        ? \"perfect\"\n        : this.props.judgeResult === \"Accepted\"\n        ? \"good\"\n        : this.props.judgeResult === \"Rejected\"\n        ? \"warning\"\n        : this.props.judgeResult === \"Wrong\"\n        ? \"failed\"\n        : \"review\"\n    return (\n      <div className=\"goi-tester\">\n        <Helmet>\n          <title>{word.key || \"PoiGoi\"}</title>\n        </Helmet>\n        <input ref={c => (this.JudgeInputElement = c)}></input>\n        <button onClick={this.onRequestJudge}>Judge</button>\n        <button onClick={this.onRequestNext}>Next</button>\n        <JaWordCard word={word} display=\"detailed\" status={wordCardStatus} />\n        <pre className=\"goi-debug\"></pre>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: RootStateType) => {\n  console.debug(\"GoiTester state: \", state)\n  const props = {\n    poiUserId: state.GoiUser.get(\"PoiUserId\") as PoiUser.PoiUserId,\n    savingId: state.GoiSaving.get(\"SavingId\") as GoiSavingId,\n    currentWord: state.GoiTester.get(\"CurrentWord\"),\n    currentWordKey: state.GoiTester.get(\"CurrentWord\").get(\"key\") as string,\n    judgeResult: state.GoiTester.get(\"JudgeResult\") as GoiJudgeResult,\n    saving: state.GoiSaving.get(\"Saving\"),\n    tester: state.GoiTester,\n    learnedCandidates: state.GoiTester.get(\"LearnedCandidates\"),\n    prioritiedCandidates: state.GoiTester.get(\"PrioritiedCandidates\"),\n    pendingCandidates: state.GoiTester.get(\"PendingCandidates\"),\n  }\n  console.debug(\"GoiTester props: \", props)\n  return props\n}\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<RootStateType, void, Action>\n) => {\n  return {\n    lazyInitUser: () => dispatch(LazyInitUserAction()),\n    lazyInitSaving: ({ poiUserId }: { poiUserId: PoiUser.PoiUserId }) =>\n      dispatch(LazyInitSavingAction({ poiUserId })),\n    showNextWord: (\n      {\n        poiUserId,\n        savingId,\n      }: { poiUserId: PoiUser.PoiUserId; savingId: GoiSavingId },\n      {\n        currentWordKey,\n        learnedCandidates,\n        prioritiedCandidates,\n        pendingCandidates,\n      }: {\n        currentWordKey?: string\n        learnedCandidates?: Heap<GoiWordRecordDataType>\n        prioritiedCandidates?: Heap<GoiWordRecordDataType>\n        pendingCandidates?: Heap<GoiWordRecordDataType>\n      } = {}\n    ) =>\n      dispatch(\n        ShowNextWordAction(\n          { poiUserId, savingId },\n          {\n            currentWordKey,\n            learnedCandidates,\n            prioritiedCandidates,\n            pendingCandidates,\n          }\n        )\n      ),\n    judgeAnswer: (\n      answer: string,\n      word: GoiWordType,\n      options: { poiUserId: PoiUser.PoiUserId; savingId: GoiSavingId }\n    ) =>\n      dispatch(\n        VerifyAnswerAction(answer, word, {\n          poiUserId: options.poiUserId,\n          savingId: options.savingId,\n        })\n      ),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GoiTester)\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport {\n  TextField,\n  Container,\n  Dialog,\n  InputAdornment,\n  IconButton,\n} from \"@material-ui/core\"\nimport SearchIcon from \"@material-ui/icons/SearchOutlined\"\nimport * as PoiUser from \"../utils/PoiUser\"\nimport {\n  DisplayWordAdderAction,\n  AddPendingQueryAction,\n  RemovePendingQueryAction,\n  AddWordsFromQuerysAction,\n  ClearPendingWordsAction,\n} from \"../actions/WordAdderActions\"\nimport {\n  WordAdderSuggestionQueryType,\n  WordAdderQueryCountersType,\n  WordAdderPendingQueryType,\n} from \"../states/WordAdderState\"\nimport { GoiSavingId } from \"../types/GoiTypes\"\nimport { RootStateType } from \"../states/RootState\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { Action } from \"redux\"\nimport { ShowNextWordAction } from \"../actions/GoiTesterActions\"\n\ntype WordAdderPropsType = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>\ninterface WordAdderStateType {\n  customQuery: string\n}\nexport class WordAdder extends React.Component<\n  WordAdderPropsType,\n  WordAdderStateType\n> {\n  constructor(props: WordAdderPropsType) {\n    super(props)\n    this.state = { customQuery: \"\" }\n  }\n  getSuggestionQuerys = (): string[] => {\n    const suggestions: WordAdderSuggestionQueryType[] = this.props.suggestions.toJS()\n    return suggestions.map(suggestion => suggestion.Query)\n  }\n  getPendingQuerys = (): string[] => {\n    const pendings: WordAdderPendingQueryType[] = this.props.pendings.toJS()\n    return pendings.map(pending => pending.Query)\n  }\n  onClickConfirm = async () => {\n    const poiUserId = this.props.poiUserId\n    const savingId = this.props.savingId\n    await this.props.addWordsFromQuerys(\n      { querys: this.getPendingQuerys() },\n      { poiUserId, savingId }\n    )\n    this.props.close()\n    this.getPendingQuerys().map(query =>\n      this.props.removePendingQuery({ query })\n    )\n    await this.props.showNextWord(poiUserId, savingId)\n  }\n  render() {\n    if (!this.props.display) {\n      return <div className=\"word-adder\"></div>\n    }\n    const poiUserId = this.props.poiUserId\n    const savingId = this.props.savingId\n    const status = this.props.status.toJS()\n    const suggestions: WordAdderSuggestionQueryType[] = this.props.suggestions.toJS()\n    const pendings: WordAdderPendingQueryType[] = this.props.pendings.toJS()\n    const counters: WordAdderQueryCountersType = this.props.counters.toJS()\n    return (\n      <Dialog className=\"word-adder\" open={this.props.display}>\n        <Container>\n          <h1>Word Adder</h1>\n          <p>Status:</p>\n          <div>Learned:{status.LearnedCount}</div>\n          <div>Prioritied:{status.PrioritiedCount}</div>\n          <div>\n            Pending:{status.PendingCount}\n            <button\n              onClick={() =>\n                this.props.clearPendingWords({ poiUserId, savingId })\n              }\n            >\n              Clear\n            </button>\n          </div>\n          <p>Suggestions:</p>\n          {suggestions.map(suggestion => (\n            <div key={suggestion.Display}>\n              {suggestion.Display}({suggestion.Query})\n              {counters[suggestion.Query] && (\n                <span>\n                  Total:\n                  {counters[suggestion.Query].TotalCount}\n                  (Learned:\n                  {counters[suggestion.Query].LearnedCount}, Added:\n                  {counters[suggestion.Query].AddedCount}, New:\n                  {counters[suggestion.Query].NewCount})\n                </span>\n              )}\n              <button\n                onClick={() =>\n                  this.props.addPendingQuery(\n                    { display: suggestion.Display, query: suggestion.Query },\n                    { poiUserId, savingId }\n                  )\n                }\n              >\n                +\n              </button>\n            </div>\n          ))}\n          <div style={{ display: \"flex\", alignItems: \"flex-end\" }}>\n            <TextField\n              label=\"Custom Query\"\n              variant=\"outlined\"\n              value={this.state.customQuery}\n              style={{ flexGrow: 1 }}\n              onChange={e => {\n                this.setState({ customQuery: e.target.value })\n              }}\n              InputProps={{\n                placeholder: \"(e.g. JLPT-N5) Accept RegExp\",\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"add query\"\n                      edge=\"end\"\n                      onClick={() =>\n                        this.props.addPendingQuery(\n                          { display: \"Custom\", query: this.state.customQuery },\n                          { poiUserId, savingId }\n                        )\n                      }\n                    >\n                      <SearchIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            ></TextField>\n          </div>\n          <p>Pendings (order matters):</p>\n          {pendings.map(pending => (\n            <div key={pending.Query}>\n              {pending.Display}({pending.Query})\n              {counters[pending.Query] && (\n                <span>\n                  Total:\n                  {counters[pending.Query].TotalCount}\n                  (Learned:\n                  {counters[pending.Query].LearnedCount}, Added:\n                  {counters[pending.Query].AddedCount}, New:\n                  {counters[pending.Query].NewCount})\n                </span>\n              )}\n              <button\n                onClick={() =>\n                  this.props.removePendingQuery({ query: pending.Query })\n                }\n              >\n                -\n              </button>\n            </div>\n          ))}\n          <button onClick={this.onClickConfirm}>Confirm</button>\n          <button onClick={() => this.props.close()}>Cancel</button>\n        </Container>\n      </Dialog>\n    )\n  }\n}\n\nconst mapStateToProps = (state: RootStateType) => {\n  console.debug(\"WordAdderContainer state: \", state)\n  const props = {\n    display: state.WordAdder.get(\"Display\") as boolean,\n    status: state.WordAdder.get(\"Status\"),\n    suggestions: state.WordAdder.get(\"Suggestions\"),\n    pendings: state.WordAdder.get(\"Pendings\"),\n    counters: state.WordAdder.get(\"Counters\"),\n    saving: state.GoiSaving.get(\"Saving\"),\n    poiUserId: state.GoiUser.get(\"PoiUserId\") as PoiUser.PoiUserId,\n    savingId: state.GoiSaving.get(\"SavingId\") as GoiSavingId,\n  }\n  console.debug(\"WordAdderContainer props: \", props)\n  return props\n}\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<RootStateType, void, Action>\n) => {\n  return {\n    clearPendingWords: ({\n      poiUserId,\n      savingId,\n    }: {\n      poiUserId: PoiUser.PoiUserId\n      savingId: GoiSavingId\n    }) => dispatch(ClearPendingWordsAction({ poiUserId, savingId })),\n    addPendingQuery: (\n      { display, query }: { display: string; query: string },\n      {\n        poiUserId,\n        savingId,\n      }: { poiUserId: PoiUser.PoiUserId; savingId: GoiSavingId }\n    ) =>\n      dispatch(\n        AddPendingQueryAction({ display, query }, { poiUserId, savingId })\n      ),\n    removePendingQuery: ({ query }: { query: string }) =>\n      dispatch(RemovePendingQueryAction({ query })),\n    addWordsFromQuerys: (\n      { querys }: { querys: string[] },\n      {\n        poiUserId,\n        savingId,\n      }: { poiUserId: PoiUser.PoiUserId; savingId: GoiSavingId }\n    ) =>\n      dispatch(AddWordsFromQuerysAction({ querys }, { poiUserId, savingId })),\n    close: () => dispatch(DisplayWordAdderAction({ display: false })),\n    showNextWord: (poiUserId: PoiUser.PoiUserId, savingId: GoiSavingId) =>\n      dispatch(ShowNextWordAction({ poiUserId, savingId })),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WordAdder)\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { ShowWordAdderAction } from \"../actions/WordAdderActions\"\nimport * as PoiUser from \"../utils/PoiUser\"\nimport { GoiSavingId } from \"../types/GoiTypes\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { RootStateType } from \"../states/RootState\"\nimport { Action } from \"redux\"\nimport { Button } from \"@material-ui/core\"\nimport { SpeedDial, SpeedDialAction } from \"@material-ui/lab\"\nimport { navigate } from \"gatsby\"\nimport AddIcon from \"@material-ui/icons/AddOutlined\"\nimport SmsIcon from \"@material-ui/icons/SmsOutlined\"\nimport ShareIcon from \"@material-ui/icons/ShareOutlined\"\nimport MenuIcon from \"@material-ui/icons/MenuOutlined\"\nimport HighlightIcon from \"@material-ui/icons/HighlightOutlined\"\nimport PersonIcon from \"@material-ui/icons/PersonOutlined\"\n\ntype CommandsBarPropsType = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>\ninterface CommandsBarStateType {\n  menuOpened: boolean\n}\nexport class CommandsBar extends React.Component<\n  CommandsBarPropsType,\n  CommandsBarStateType\n> {\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      menuOpened: false,\n    }\n  }\n  openMenu = () => {\n    this.setState({ menuOpened: true })\n  }\n  closeMenu = () => {\n    this.setState({ menuOpened: false })\n  }\n  toggleMenu = () => {\n    this.setState({ menuOpened: !this.state.menuOpened })\n  }\n  render() {\n    const { poiUserId, savingId } = this.props\n    return (\n      <div\n        className=\"commands-bar\"\n        style={{\n          position: \"absolute\",\n          bottom: \"20px\",\n          right: \"20px\",\n          display: \"inline-flex\",\n          alignItems: \"flex-end\",\n        }}\n      >\n        <Button\n          size=\"small\"\n          onClick={() => this.props.showWordAdder({ poiUserId, savingId })}\n          style={{ height: \"36px\", margin: \"10px\" }}\n        >\n          Add Words\n          <AddIcon fontSize=\"small\" />\n        </Button>\n\n        <SpeedDial\n          ariaLabel=\"menu\"\n          open={this.state.menuOpened}\n          icon={<MenuIcon />}\n          onBlur={this.closeMenu}\n          onClick={this.toggleMenu}\n          onClose={this.closeMenu}\n          onFocus={this.openMenu}\n          onMouseEnter={this.openMenu}\n          onMouseLeave={this.closeMenu}\n          ButtonProps={{\n            color: \"default\",\n            style: { background: \"white\" },\n          }}\n        >\n          <SpeedDialAction\n            key=\"share\"\n            icon={<ShareIcon />}\n            tooltipTitle=\"[WIP] Share\"\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"tegami\"\n            icon={<SmsIcon />}\n            tooltipTitle=\"手紙\"\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              navigate(\"/tegami\")\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"mamechishiki\"\n            icon={<HighlightIcon />}\n            tooltipTitle=\"豆知識\"\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              navigate(\"/mamechishiki\")\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"addwords\"\n            icon={<AddIcon />}\n            tooltipTitle=\"Add Words\"\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              this.props.showWordAdder({ poiUserId, savingId })\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"profile\"\n            icon={<PersonIcon />}\n            tooltipTitle=\"[WIP] Profile and settings\"\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              navigate(\"/\")\n            }}\n          ></SpeedDialAction>\n        </SpeedDial>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: RootStateType) => {\n  console.debug(\"CommandsBar state: \", state)\n  const props = {\n    poiUserId: state.GoiUser.get(\"PoiUserId\") as PoiUser.PoiUserId,\n    savingId: state.GoiSaving.get(\"SavingId\") as GoiSavingId,\n  }\n  console.debug(\"CommandsBar props: \", props)\n  return props\n}\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<RootStateType, void, Action>\n) => {\n  return {\n    showWordAdder: ({\n      poiUserId,\n      savingId,\n    }: {\n      poiUserId: PoiUser.PoiUserId\n      savingId: GoiSavingId\n    }) => dispatch(ShowWordAdderAction({ poiUserId, savingId })),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CommandsBar)\n","import React from \"react\"\nimport NavBar from \"../components/NavBar\"\nimport GoiTester from \"../containers/GoiTester\"\nimport WordAdder from \"../containers/WordAdder\"\nimport CommandsBar from \"../containers/CommandsBar\"\nimport Container from \"@material-ui/core/Container\"\n\nexport default (props: any) => (\n  // <div style={{ width: \"100%\", overflow: \"hidden\", position: \"fixed\" }}>\n  <div\n    style={{\n      width: \"100%\",\n      height: \"100%\",\n      overflow: \"hidden\",\n      position: \"fixed\",\n    }}\n  >\n    <NavBar />\n    <CommandsBar />\n    <main>\n      <Container>\n        <WordAdder />\n        <GoiTester />\n      </Container>\n    </main>\n    <footer>\n      <Container>\n        <ruby>\n          私<rt>わたし</rt>\n        </ruby>\n        たちの\n        <ruby>\n          夢<rt>ゆめ</rt>\n        </ruby>\n        がここから\n        <ruby>\n          始<rt>はじ</rt>\n        </ruby>\n        まります ٩(ˊᗜˋ*)و\n      </Container>\n    </footer>\n  </div>\n)\n"],"sourceRoot":""}