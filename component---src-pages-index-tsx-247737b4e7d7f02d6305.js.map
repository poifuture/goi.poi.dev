{"version":3,"sources":["webpack:///./src/components/WordCards/TinyTag.tsx","webpack:///./src/utils/PoiResponsive.ts","webpack:///./src/components/WordCards/GoiTranslation.tsx","webpack:///./src/components/WordCards/TinyContentTag.tsx","webpack:///./src/components/WordCards/GoiSentence.tsx","webpack:///./src/components/WordCards/JaWordCard.tsx","webpack:///./src/components/ResponsiveDialog.tsx","webpack:///./src/containers/GoiTester.tsx","webpack:///./src/utils/PoiI18n.ts","webpack:///./src/containers/WordAdder.tsx","webpack:///./src/containers/CommandsBar.tsx","webpack:///./src/pages/index.tsx"],"names":["TinyTag","_React$Component","apply","this","arguments","prototype","render","react_default","a","createElement","Box","Object","assign","display","fontSize","height","color","marginLeft","marginRight","props","children","React","Component","ToggleEvents","toggleEventHandler","onClick","onFocus","onBlur","onMouseEnter","onMouseLeave","onClose","GoiTranslation","_this","call","toggleStateHint","state","displayHint","setState","t","_this$props","i18nTranslation","from","displayFrom","className","style","entries","translation","map","_ref","translationLanguage","translationText","keys","length","hint","WordCards_TinyTag","_ref2","hintLanguage","hintText","key","visibility","dangerouslySetInnerHTML","__html","width","justifyContent","defaultProps","en","zh","jp","locales","withTranslation","TinyContentTag","flexWrap","alignItems","title","GoiSentence","i18nSentence","sentence","audios","source","link","contributor","debug","DebugModule","circledNumber","x","String","fromCharCode","Math","floor","JaWordCard","level","statusColor","status","word","sortedTranslationsDictionarys","i","dictionarys","tmpDictionary","translations","includes","push","filteredTranslationsDictionarys","slice","sortedSentences","_loop","tmpSentences","sentences","filter","_toConsumableArray","filteredSentences","minHeight","common","VolumeOffOutlined_default","tone","Array","isArray","singleTone","join","BatteryUnknownOutlined_default","BatteryCharging20Outlined_default","BatteryCharging30Outlined_default","BatteryCharging50Outlined_default","BatteryCharging60Outlined_default","BatteryCharging80Outlined_default","BatteryCharging90Outlined_default","BatteryChargingFullOutlined_default","BatteryAlertOutlined_default","romaji","WordCards_TinyContentTag","wapuro","pos","List","dictionaryName","WordCards_GoiTranslation","sentenceId","WordCards_GoiSentence","textbook","textbookId","ResponsiveDialog","useMediaQuery","useTheme","breakpoints","down","Dialog","PaperProps","margin","GoiTester","JudgeInputElement","requestJudge","_asyncToGenerator","regenerator_default","mark","_callee","_temp","skip","forceLevelChange","poiUserId","savingId","judgeResult","wrap","_context","prev","next","currentWord","toJS","judgeAnswer","answer","testerInput","sent","requestNext","stop","_x","_ref3","_callee2","_temp2","forget","_this$props2","currentWordKey","learnedCandidates","prioritiedCandidates","pendingCandidates","_context2","GoiWordRecord","Forget","showNextWord","displayDetail","_x2","isReportWordDialogOpened","_proto","componentDidMount","_componentDidMount","_callee3","_context3","lazyInitUser","lazyInitSaving","_this2","_this$props3","i18n","savingLanguage","saving","Language","wordCardStatus","wordCardDisplay","Helmet_default","startsWith","defaultValue","wordkey","TextField","label","variant","value","flexGrow","updateIsTyping","isTyping","onChange","e","target","InputProps","placeholder","endAdornment","InputAdornment","position","IconButton","aria-label","edge","KeyboardReturnOutlined_default","onKeyDown","Button","size","RedoOutlined_default","ForwardOutlined_default","WordCards_JaWordCard","currentLevel","enableScroll","MoreHorizOutlined_default","LinkOffOutlined_default","forcedWordKey","ExposurePlus1Outlined_default","ExposurePlus2Outlined_default","ReportProblemOutlined_default","components_ResponsiveDialog","open","language","src","frameBorder","marginWidth","marginHeight","border","maxWidth","maxHeight","allowFullScreen","DialogActions","connect","GoiUser","get","GoiSaving","getIn","has","tester","dispatch","LazyInitUserAction","_ref5","LazyInitSavingAction","_ref6","UpdateIsTypingAction","_ref7","UpdateEnableScrollAction","_ref8","_temp3","_ref9","ShowNextWordAction","_ref10","_ref11","VerifyAnswerAction","LookUp","i18nString","locale","ja","QueryRegexPopup","regex","WordAdder","getSuggestionQuerys","suggestions","suggestion","Query","getPendingQuerys","pendings","pending","addSuggestion","WordAdder_asyncToGenerator","SubQuerys","addPendingQuerys","querys","concat","WordAdder_toConsumableArray","Display","refreshSubtotal","query","clearAllPendingQuerys","Promise","all","removePendingQuery","onClickConfirm","addingWordsProgress","addWordsFromQuerys","close","addCustomQuery","customQuery","trim","addPendingQuery","onClickRemovePendingQuery","_this$props4","newPendingQuerys","pendingQuery","_this$props5","_this$props6","_learnedCount$priorit","learnedCount","prioritiedCount","pendingCount","counters","DialogTitle","DialogContent","dividers","dense","flex","readOnly","clearPendingWords","DeleteOutlined_default","ListItem","Divider","component","Typography","TotalCount","LearnedCount","AddedCount","NewCount","ListItemText","primary","Fragment","WordAdder_QueryRegexPopup","total","secondary","learned","added","new","ListItemSecondaryAction","AddOutlined_default","SearchOutlined_default","subtotal","ExploreOffOutlined_default","CloseOutlined_default","FormControlLabel","control","Checkbox","checked","disabled","ClearPendingWordsAction","AddPendingQueryAction","_ref12","AddPendingQuerysAction","_ref13","RemovePendingQueryAction","_ref14","_ref15","AddWordsFromQuerysAction","DisplayWordAdderAction","_ref16","_ref17","RefreshSubtotalAction","updateFilter","_ref18","UpdateFilterAction","CommandsBar","commandsContainerRef","createRef","openMenu","isMenuOpened","closeMenu","toggleMenu","isCommandsExpanded","navigate","to","replace","smDown","window","innerWidth","bottom","right","marginBottom","current","scrollTo","left","behavior","FirstPageOutlined_default","ref","marginTop","overflowX","overflowY","direction","whiteSpace","NavigateNextOutlined_default","FormatQuoteOutlined_default","RefreshOutlined_default","PlaylistPlayOutlined_default","CreateOutlined_default","FingerprintOutlined_default","FlagOutlined_default","CloudOffOutlined_default","isEmpty","showWordAdder","SpeedDial","ariaLabel","icon","MenuOutlined_default","ButtonProps","background","SpeedDialAction","ShareOutlined_default","tooltipTitle","tooltipOpen","SmsOutlined_default","HighlightOutlined_default","PersonOutlined_default","ShowWordAdderAction","IndexPage","overflow","Hidden","xsDown","NavBar","smUp","poisky","containers_CommandsBar","containers_WordAdder","Container","containers_GoiTester","Layout"],"mappings":"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","file":"component---src-pages-index-tsx-247737b4e7d7f02d6305.js","sourcesContent":["import React from \"react\"\nimport { I18nString } from \"../../types/GoiDictionaryTypes\"\nimport { List as MuiList, Box } from \"@material-ui/core\"\nimport { BoxProps } from \"@material-ui/core/Box\"\n\nexport interface TinyTagPropsType extends BoxProps {}\nexport class TinyTag extends React.Component<TinyTagPropsType> {\n  render() {\n    return (\n      <Box\n        display=\"inline-flex\"\n        fontSize=\"3vmin\"\n        height=\"auto\"\n        color=\"gray\"\n        marginLeft=\"4px\"\n        marginRight=\"1px\"\n        {...this.props}\n      >\n        {this.props.children}\n      </Box>\n    )\n  }\n}\n\nexport default TinyTag\n","export const ToggleEvents = (\n  toggleEventHandler: (value?: boolean, event?: string) => void | Promise<void>\n) => {\n  return {\n    onClick: () => toggleEventHandler(true, \"onClick\"),\n    onFocus: () => toggleEventHandler(true, \"onFocus\"),\n    onBlur: () => toggleEventHandler(false, \"onBlur\"),\n    onMouseEnter: () => toggleEventHandler(true, \"onMouseEnter\"),\n    onMouseLeave: () => toggleEventHandler(false, \"onMouseLeave\"),\n    onClose: () => toggleEventHandler(false, \"onClose\"),\n  }\n}\n","import React from \"react\"\nimport { I18nString } from \"../../types/GoiDictionaryTypes\"\nimport { List as MuiList, Box } from \"@material-ui/core\"\nimport TinyTag from \"./TinyTag\"\nimport { ToggleEvents } from \"../../utils/PoiResponsive\"\nimport { WithTranslation, withTranslation } from \"react-i18next\"\n\nexport type GoiTranslationPropsType = WithTranslation & {\n  i18nTranslation: {\n    translation: I18nString\n    hint?: I18nString\n  }\n  displayHint?: boolean\n  locales?: string[] // WIP\n  from?: string\n  displayFrom?: boolean\n}\ninterface GoiTranslationStateType {\n  displayHint: boolean\n}\n\nexport class GoiTranslation extends React.Component<\n  GoiTranslationPropsType,\n  GoiTranslationStateType\n> {\n  static defaultProps = {\n    i18nTranslation: {\n      translation: {\n        en: \"English Translation\",\n        zh: \"中文翻译\",\n        jp: \"日本語\",\n      },\n      hint: {\n        en: \"English Hint\",\n        zh: \"中文提示\",\n        jp: \"日本語\",\n      },\n    },\n    displayHint: true,\n    locales: [\"jp\", \"zh\", \"en\"],\n    from: \"\",\n    displayFrom: false,\n  }\n  constructor(props: GoiTranslationPropsType) {\n    super(props)\n    this.state = {\n      displayHint: false,\n    }\n  }\n  toggleStateHint = (display?: boolean) => {\n    if (typeof display === \"undefined\") {\n      display = !this.state.displayHint\n    }\n    this.setState({ displayHint: display })\n  }\n  render() {\n    const { t } = this.props\n    const { i18nTranslation, from, displayFrom } = this.props\n    const displayHint = this.props.displayHint || this.state.displayHint\n    return (\n      <li>\n        <div\n          className=\"word-card-single-translation\"\n          style={{ fontSize: \"8vmin\" }}\n        >\n          {Object.entries(i18nTranslation.translation).map(\n            ([translationLanguage, translationText]) => {\n              return Object.keys(i18nTranslation.translation).length > 1\n                ? `${translationLanguage}:${translationText}; `\n                : `${translationText}`\n            }\n          )}\n        </div>\n        {i18nTranslation.hint && (\n          <div className=\"word-card-single-translation-hint\">\n            <TinyTag {...ToggleEvents(this.toggleStateHint)}>\n              {t(\"Hint\")}\n            </TinyTag>\n            {Object.entries(i18nTranslation.hint).map(\n              ([hintLanguage, hintText]) => (\n                <span\n                  key={hintLanguage}\n                  style={{\n                    visibility: displayHint ? \"inherit\" : \"hidden\",\n                    fontSize: \"3vmin\",\n                  }}\n                >\n                  {Object.keys(i18nTranslation.hint || {}).length > 1 && (\n                    <TinyTag>{hintLanguage}</TinyTag>\n                  )}\n                  <span\n                    dangerouslySetInnerHTML={{\n                      __html: hintText || \"\",\n                    }}\n                  />\n                </span>\n              )\n            )}\n          </div>\n        )}\n        {displayFrom && (\n          <div\n            style={{\n              color: \"gray\",\n              width: \"100%\",\n              fontSize: \"1.5vmin\",\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n            }}\n          >\n            from {from}\n          </div>\n        )}\n      </li>\n    )\n  }\n}\n\nexport default withTranslation(\"Common\")(GoiTranslation)\n","import React from \"react\"\nimport { I18nString } from \"../../types/GoiDictionaryTypes\"\nimport { List as MuiList, Box } from \"@material-ui/core\"\nimport { BoxProps } from \"@material-ui/core/Box\"\nimport TinyTag from \"./TinyTag\"\n\nexport interface TinyContentTagPropsType {\n  title: string\n}\nexport class TinyContentTag extends React.Component<TinyContentTagPropsType> {\n  render() {\n    return (\n      <div\n        style={{\n          flexWrap: \"nowrap\",\n          display: \"inline-flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <div style={{ height: \"auto\" }}>\n          <TinyTag>{this.props.title}</TinyTag>\n        </div>\n        <span style={{ fontSize: \"4vmin\", color: \"gray\" }}>\n          {this.props.children}\n        </span>\n      </div>\n    )\n  }\n}\n\nexport default TinyContentTag\n","import React from \"react\"\nimport { I18nString } from \"../../types/GoiDictionaryTypes\"\nimport { List as MuiList, Box } from \"@material-ui/core\"\nimport TinyTag from \"./TinyTag\"\n\nexport type GoiSentencePropsType = {\n  i18nSentence: {\n    from: string\n    sentence: string\n    audios?: { cv: string; wav: string }[]\n    translation?: I18nString\n    source?: string\n    link?: string\n    contributor?: string\n  }\n  locales?: string[] // WIP\n  displayFrom?: boolean\n}\n\nexport class GoiSentence extends React.Component<GoiSentencePropsType> {\n  static defaultProps = {\n    i18nSentence: {\n      from: \"\",\n      sentence: \"It's a sample sentence.\",\n      translation: {\n        en: \"It's the translation of the sample sentence.\",\n        zh: \"这是例句的中文翻译\",\n        jp: \"これは例句の日本語の翻訳です\",\n      },\n      audios: [],\n      source: \"PoiGoi\",\n      link: \"https://goi.poi.dev/\",\n      contributor: \"凪\",\n    },\n    displayHint: true,\n    locales: [\"jp\", \"zh\", \"en\"],\n    displayFrom: false,\n  }\n  render() {\n    const { i18nSentence, displayFrom } = this.props\n    return (\n      <li>\n        <div\n          className=\"word-card-single-sentence\"\n          style={{ fontSize: \"4vmin\" }}\n        >\n          <span\n            dangerouslySetInnerHTML={{ __html: i18nSentence.sentence }}\n          ></span>\n        </div>\n        <div\n          className=\"word-card-single-sentence-translation\"\n          style={{ fontSize: \"4vmin\" }}\n        >\n          {i18nSentence.translation &&\n            Object.entries(i18nSentence.translation).map(\n              ([translationLanguage, translationText]) => {\n                return Object.keys(i18nSentence.translation || []).length > 1\n                  ? `${translationLanguage}:${translationText}; `\n                  : `${translationText}`\n              }\n            )}\n        </div>\n        {displayFrom && (\n          <div\n            style={{\n              color: \"gray\",\n              width: \"100%\",\n              fontSize: \"1.5vmin\",\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n            }}\n          >\n            from {i18nSentence.from}\n          </div>\n        )}\n      </li>\n    )\n  }\n}\n\nexport default GoiSentence\n","import React from \"react\"\nimport { GoiJaWordType } from \"../../types/GoiDictionaryTypes\"\nimport { List as MuiList, Box } from \"@material-ui/core\"\nimport GoiTranslation from \"./GoiTranslation\"\nimport TinyTag from \"./TinyTag\"\nimport TinyContentTag from \"./TinyContentTag\"\nimport GoiSentence from \"./GoiSentence\"\nimport BatteryUnknownIcon from \"@material-ui/icons/BatteryUnknownOutlined\"\nimport BatteryCharging20Icon from \"@material-ui/icons/BatteryCharging20Outlined\"\nimport BatteryCharging30Icon from \"@material-ui/icons/BatteryCharging30Outlined\"\nimport BatteryCharging50Icon from \"@material-ui/icons/BatteryCharging50Outlined\"\nimport BatteryCharging60Icon from \"@material-ui/icons/BatteryCharging60Outlined\"\nimport BatteryCharging80Icon from \"@material-ui/icons/BatteryCharging80Outlined\"\nimport BatteryCharging90Icon from \"@material-ui/icons/BatteryCharging90Outlined\"\nimport BatteryChargingFullIcon from \"@material-ui/icons/BatteryChargingFullOutlined\"\nimport BatteryAlertIcon from \"@material-ui/icons/BatteryAlertOutlined\"\nimport VolumeOffIcon from \"@material-ui/icons/VolumeOffOutlined\"\nimport DebugModule from \"debug\"\nconst debug = DebugModule(\"PoiGoi:JaWordCard\")\n\nexport type WordCardPropsType = {\n  word: GoiJaWordType\n  display: \"simple\" | \"detailed\" | \"test-common\" | \"test-translation\"\n  status:\n    | \"input\"\n    | \"first\"\n    | \"perfect\"\n    | \"good\"\n    | \"warning\"\n    | \"failed\"\n    | \"peek\"\n    | \"review\"\n  dictionarys: string[]\n  level: number\n}\n\nconst circledNumber = (x: number) => {\n  if (x === 0) {\n    return String.fromCharCode(9450)\n  }\n  if (x >= 1 && x < 20) {\n    return String.fromCharCode(9311 + Math.floor(x))\n  }\n  return \"\"\n}\nexport class JaWordCard extends React.Component<WordCardPropsType> {\n  static defaultProps = {\n    word: {\n      common: \"Common Placeholder\",\n      translation: \"Translation Placeholder\",\n    },\n    display: \"detailed\",\n    status: \"view\",\n    dictionarys: [\n      \"KanaDictionary\",\n      \"GoiSimpleJaDictionary\",\n      \"BiaozhunRibenyu\",\n      \"XinbianRiyu\",\n      \"Xinbian\",\n      \"AnimeSong\",\n      \"Anime\",\n      \"JishoOrg\",\n      \"GooJisho\",\n    ],\n    level: -1,\n  }\n  render() {\n    const { level } = this.props\n    const statusColor =\n      this.props.status === \"input\"\n        ? \"gray\"\n        : this.props.status === \"first\"\n        ? \"blue\"\n        : this.props.status === \"perfect\"\n        ? \"green\"\n        : this.props.status === \"good\"\n        ? \"lightgreen\"\n        : this.props.status === \"warning\"\n        ? \"orange\"\n        : this.props.status === \"failed\"\n        ? \"red\"\n        : this.props.status === \"peek\"\n        ? \"blue\"\n        : this.props.status === \"review\"\n        ? \"black\"\n        : \"black\"\n    const word = Object.assign({}, this.props.word)\n    const sortedTranslationsDictionarys = []\n    for (let i = 0; i < this.props.dictionarys.length; i++) {\n      const tmpDictionary = this.props.dictionarys[i]\n      if (Object.keys(word.translations).includes(tmpDictionary)) {\n        sortedTranslationsDictionarys.push(tmpDictionary)\n      }\n    }\n    const filteredTranslationsDictionarys =\n      this.props.display !== \"detailed\"\n        ? sortedTranslationsDictionarys.slice(0, 1)\n        : sortedTranslationsDictionarys\n    const sortedSentences = []\n    for (let i = 0; i < this.props.dictionarys.length; i++) {\n      const tmpDictionary = this.props.dictionarys[i]\n      const tmpSentences = (word.sentences || []).filter(\n        sentence => sentence.from === tmpDictionary\n      )\n      sortedSentences.push(...tmpSentences)\n    }\n    const filteredSentences =\n      this.props.display !== \"detailed\"\n        ? sortedSentences.slice(0, 1)\n        : sortedSentences\n    debug(filteredTranslationsDictionarys, filteredSentences)\n    return (\n      <div className=\"word-card\">\n        <div\n          className=\"word-card-common\"\n          style={{\n            minHeight: \"20vmin\",\n            fontSize: \"10vmin\",\n            color: statusColor,\n            visibility:\n              this.props.display === \"test-common\" ? \"hidden\" : \"inherit\",\n            display: \"flex\",\n            alignItems: \"flex-end\",\n          }}\n        >\n          <span dangerouslySetInnerHTML={{ __html: word.common }} />\n        </div>\n        <div\n          className=\"word-card-tags\"\n          style={{ display: \"flex\", alignItems: \"center\" }}\n        >\n          <div\n            style={{\n              display: \"inline-flex\",\n              alignItems: \"center\",\n              visibility:\n                this.props.display === \"test-common\" ? \"hidden\" : \"inherit\",\n            }}\n          >\n            <VolumeOffIcon fontSize=\"small\" />\n            {typeof word.tone === \"number\" && circledNumber(word.tone)}\n            {Array.isArray(word.tone) &&\n              word.tone\n                .map(\n                  singleTone =>\n                    typeof singleTone === \"number\" && circledNumber(singleTone)\n                )\n                .join()}\n            {level === 0 ? (\n              <BatteryUnknownIcon fontSize=\"small\" />\n            ) : level === 1 ? (\n              <BatteryCharging20Icon fontSize=\"small\" />\n            ) : level === 2 ? (\n              <BatteryCharging30Icon fontSize=\"small\" />\n            ) : level === 3 ? (\n              <BatteryCharging50Icon fontSize=\"small\" />\n            ) : level === 4 ? (\n              <BatteryCharging60Icon fontSize=\"small\" />\n            ) : level === 5 ? (\n              <BatteryCharging80Icon fontSize=\"small\" />\n            ) : level === 6 ? (\n              <BatteryCharging90Icon fontSize=\"small\" />\n            ) : level >= 7 ? (\n              <BatteryChargingFullIcon fontSize=\"small\" />\n            ) : (\n              <BatteryAlertIcon fontSize=\"small\" />\n            )}\n          </div>\n          <span\n            style={{\n              visibility:\n                this.props.display === \"test-common\" ? \"hidden\" : \"inherit\",\n            }}\n          >\n            <div>\n              {word.romaji && (\n                <TinyContentTag title=\"ローマ字:\">{word.romaji}</TinyContentTag>\n              )}\n              {word.wapuro && (\n                <TinyContentTag title=\"ワープロ:\">{word.wapuro}</TinyContentTag>\n              )}\n            </div>\n            <div>\n              {word.pos.includes(\"KANA\") && <TinyTag>仮名</TinyTag>}\n              {word.pos.includes(\"HIRAGANA\") && <TinyTag>平仮名</TinyTag>}\n              {word.pos.includes(\"KATAKANA\") && <TinyTag>片仮名</TinyTag>}\n              {word.pos.includes(\"DAKUON\") && <TinyTag>濁音</TinyTag>}\n              {word.pos.includes(\"YOON\") && <TinyTag>拗音</TinyTag>}\n              {word.pos.includes(\"CHOON\") && <TinyTag>長音</TinyTag>}\n              {word.pos.includes(\"VERB\") && <TinyTag>動詞</TinyTag>}\n              {word.pos.includes(\"GODAN\") && <TinyTag>五段活用</TinyTag>}\n              {word.pos.includes(\"KAMIICHIDAN\") && (\n                <TinyTag>上一段活用</TinyTag>\n              )}\n              {word.pos.includes(\"SHIMOICHIDAN\") && (\n                <TinyTag>下一段活用</TinyTag>\n              )}\n              {word.pos.includes(\"SAHEN\") && <TinyTag>サ変</TinyTag>}\n              {word.pos.includes(\"KAHEN\") && <TinyTag>カ変</TinyTag>}\n              {word.pos.includes(\"JIDOSHI\") && <TinyTag>自動詞</TinyTag>}\n              {word.pos.includes(\"TADOSHI\") && <TinyTag>他動詞</TinyTag>}\n              {word.pos.includes(\"ADJ\") && <TinyTag>形容詞</TinyTag>}\n              {word.pos.includes(\"KEIYODOSHI\") && <TinyTag>形容動詞</TinyTag>}\n              {word.pos.includes(\"NOUN\") && <TinyTag>名詞</TinyTag>}\n              {word.pos.includes(\"PROPER\") && <TinyTag>固有名詞</TinyTag>}\n              {word.pos.includes(\"PRON\") && <TinyTag>代名詞</TinyTag>}\n              {word.pos.includes(\"RENTAISHI\") && <TinyTag>連体詞</TinyTag>}\n              {word.pos.includes(\"ADV\") && <TinyTag>副詞</TinyTag>}\n              {word.pos.includes(\"CONJ\") && <TinyTag>接続詞</TinyTag>}\n              {word.pos.includes(\"INTERJ\") && <TinyTag>感動詞</TinyTag>}\n              {word.pos.includes(\"JODOSHI\") && <TinyTag>助動詞</TinyTag>}\n              {word.pos.includes(\"JOSHI\") && <TinyTag>助詞</TinyTag>}\n              {word.pos.includes(\"IDIOM\") && <TinyTag>熟語</TinyTag>}\n              {level >= 0 && <TinyTag>練度{level}</TinyTag>}\n            </div>\n          </span>\n        </div>\n        <div className=\"word-card-translation\" style={{ color: statusColor }}>\n          <MuiList>\n            {filteredTranslationsDictionarys.map(dictionaryName => (\n              <GoiTranslation\n                key={dictionaryName}\n                i18nTranslation={word.translations[dictionaryName]}\n                displayHint={this.props.display !== \"test-common\"}\n                from={dictionaryName}\n                displayFrom={this.props.display === \"detailed\"}\n              />\n            ))}\n          </MuiList>\n        </div>\n        {this.props.display !== \"test-common\" && (\n          <div className=\"word-card-sentences\">\n            <MuiList>\n              {filteredSentences.map((sentence, sentenceId) => (\n                <GoiSentence\n                  key={sentenceId}\n                  i18nSentence={sentence}\n                  displayFrom={this.props.display === \"detailed\"}\n                />\n              ))}\n            </MuiList>\n          </div>\n        )}\n        {this.props.display === \"detailed\" && (\n          <div className=\"word-card-textbooks\">\n            {word.textbook.map((textbook, textbookId) => (\n              <TinyTag key={textbookId}>{textbook}</TinyTag>\n            ))}\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default JaWordCard\n","import React from \"react\"\nimport { useMediaQuery, useTheme } from \"@material-ui/core\"\nimport Dialog, { DialogProps } from \"@material-ui/core/Dialog\"\nimport { isWidthDown } from \"@material-ui/core/withWidth\"\n\nconst ResponsiveDialog = (props: DialogProps) => {\n  const smDown = useMediaQuery(useTheme().breakpoints.down(\"xs\"))\n  // return (\n  //   <Dialog {...props} fullScreen={smDown}>\n  //     {props.children}\n  //   </Dialog>\n  // )\n  return (\n    <Dialog {...props} PaperProps={{ style: { margin: \"10px\" } }}>\n      {props.children}\n    </Dialog>\n  )\n}\n\nexport default ResponsiveDialog\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport JaWordCard from \"../components/WordCards/JaWordCard\"\nimport * as PoiUser from \"../utils/PoiUser\"\nimport { LazyInitUserAction } from \"../actions/GoiUserActions\"\nimport { LazyInitSavingAction } from \"../actions/GoiSavingActions\"\nimport {\n  VerifyAnswerAction,\n  ShowNextWordAction,\n  UpdateIsTypingAction,\n} from \"../actions/GoiTesterActions\"\nimport { GoiSavingId, GoiJudgeResult } from \"../types/GoiTypes\"\nimport Helmet from \"react-helmet\"\nimport { GoiWordType, GoiJaWordType } from \"../types/GoiDictionaryTypes\"\nimport { RootStateType } from \"../states/RootState\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { Action } from \"redux\"\nimport Heap from \"../algorithm/Heap\"\nimport {\n  GoiWordRecordDataType,\n  GoiSavingDataType,\n  GoiWordRecord,\n} from \"../models/GoiSaving\"\nimport {\n  TextField,\n  InputAdornment,\n  IconButton,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogActions,\n} from \"@material-ui/core\"\nimport SpellcheckIcon from \"@material-ui/icons/SpellcheckOutlined\"\nimport KeyboardReturnIcon from \"@material-ui/icons/KeyboardReturnOutlined\"\nimport RedoIcon from \"@material-ui/icons/RedoOutlined\"\nimport ForwardIcon from \"@material-ui/icons/ForwardOutlined\"\nimport MoreVertIcon from \"@material-ui/icons/MoreVertOutlined\"\nimport MoreHorizIcon from \"@material-ui/icons/MoreHorizOutlined\"\nimport LinkOffIcon from \"@material-ui/icons/LinkOffOutlined\"\nimport ExposurePlus1Icon from \"@material-ui/icons/ExposurePlus1Outlined\"\nimport ExposurePlus2Icon from \"@material-ui/icons/ExposurePlus2Outlined\"\nimport ReportProblemIcon from \"@material-ui/icons/ReportProblemOutlined\"\nimport { display } from \"@material-ui/system\"\nimport { withTranslation, WithTranslation } from \"react-i18next\"\nimport DebugModule from \"debug\"\nimport { UpdateEnableScrollAction } from \"../actions/LayoutActions\"\nimport ResponsiveDialog from \"../components/ResponsiveDialog\"\nconst debug = DebugModule(\"PoiGoi:GoiTester\")\n\ntype GoiTesterPropsType = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps> &\n  WithTranslation\ninterface GoiTesterStateType {\n  testerInput: string\n  displayDetail: boolean\n  isReportWordDialogOpened: boolean\n}\nexport class GoiTester extends React.Component<\n  GoiTesterPropsType,\n  GoiTesterStateType\n> {\n  constructor(props: GoiTesterPropsType) {\n    super(props)\n    this.state = {\n      testerInput: \"\",\n      displayDetail: false,\n      isReportWordDialogOpened: false,\n    }\n  }\n  JudgeInputElement: HTMLInputElement | null = null\n  async componentDidMount() {\n    debug(\"Lasy init user\")\n    const poiUserId = (await this.props.lazyInitUser()) as PoiUser.PoiUserId\n    debug(\"Lasy init saving\")\n    const savingId = await this.props.lazyInitSaving({ poiUserId })\n    await this.props.showNextWord({ poiUserId, savingId })\n  }\n  requestJudge = async ({\n    skip,\n    forceLevelChange,\n  }: { skip?: boolean; forceLevelChange?: number } = {}) => {\n    const { poiUserId, savingId } = this.props\n    const word: GoiJaWordType = this.props.currentWord.toJS()\n    const judgeResult = await this.props.judgeAnswer(\n      {\n        answer: this.state.testerInput,\n        word,\n        skip,\n        forceLevelChange,\n      },\n      {\n        poiUserId,\n        savingId,\n      }\n    )\n    this.setState({ testerInput: \"\" })\n    if (\n      judgeResult === \"Correct\" ||\n      judgeResult === \"Accepted\" ||\n      judgeResult === \"Skipped\"\n    ) {\n      await this.requestNext()\n    }\n  }\n  requestNext = async ({ forget }: { forget?: boolean } = {}) => {\n    forget = typeof forget !== \"undefined\" ? forget : false\n    const {\n      poiUserId,\n      savingId,\n      currentWordKey,\n      learnedCandidates,\n      prioritiedCandidates,\n      pendingCandidates,\n    } = this.props\n    if (forget) {\n      await GoiWordRecord(poiUserId, savingId, currentWordKey).Forget()\n    }\n    await this.props.showNextWord(\n      { poiUserId, savingId },\n      {\n        ...(!forget && { currentWordKey }),\n        learnedCandidates,\n        prioritiedCandidates,\n        pendingCandidates,\n      }\n    )\n    this.setState({ testerInput: \"\", displayDetail: false })\n  }\n  render() {\n    const { t, i18n } = this.props\n    const word: GoiJaWordType = this.props.currentWord.toJS()\n    const savingLanguage =\n      this.props.saving && this.props.saving.Language\n        ? this.props.saving.Language\n        : \"en\"\n    const wordCardStatus =\n      this.props.judgeResult === \"Pending\"\n        ? \"input\"\n        : this.props.judgeResult === \"Correct\"\n        ? \"perfect\"\n        : this.props.judgeResult === \"Accepted\"\n        ? \"good\"\n        : this.props.judgeResult === \"Rejected\"\n        ? \"warning\"\n        : this.props.judgeResult === \"Wrong\"\n        ? \"failed\"\n        : \"review\"\n    const wordCardDisplay =\n      this.props.judgeResult === \"Pending\"\n        ? \"test-common\"\n        : this.state.displayDetail\n        ? \"detailed\"\n        : \"simple\"\n    return (\n      <div className=\"goi-tester\">\n        <Helmet>\n          {savingLanguage.startsWith(\"ja\") ? (\n            this.props.judgeResult === \"Pending\" ? (\n              <title>{t(\"PageTitleWhenEmptyForJaLearner\", \"PoiGoi\")}</title>\n            ) : (\n              <title>\n                {t(\"PageTitleWhenWordIsDisplayedForJaLearner\", {\n                  defaultValue: \"PoiGoi - {{wordkey}}\",\n                  wordkey: word.key,\n                })}\n              </title>\n            )\n          ) : this.props.judgeResult === \"Pending\" ? (\n            <title>{t(\"PageTitleWhenEmpty\", \"PoiGoi\")}</title>\n          ) : (\n            <title>\n              {t(\"PageTitleWhenWordIsDisplayed\", {\n                defaultValue: \"PoiGoi - {{wordkey}}\",\n                wordkey: word.key,\n              })}\n            </title>\n          )}\n        </Helmet>\n        <div\n          style={{\n            height: \"50px\", // avoid wechat \"No password\" tip\n          }}\n        />\n        <div style={{ display: \"flex\" }}>\n          <TextField\n            label={t(\"MainInputLabel\", \"Justify your answer\")}\n            variant=\"outlined\"\n            value={this.state.testerInput}\n            style={{ flexGrow: 1 }}\n            onFocus={() => {\n              this.props.updateIsTyping({ isTyping: true })\n            }}\n            onBlur={() => {\n              this.props.updateIsTyping({ isTyping: false })\n            }}\n            onChange={e => {\n              this.setState({ testerInput: e.target.value })\n            }}\n            InputProps={{\n              placeholder:\n                this.props.judgeResult === \"Rejected\" ||\n                this.props.judgeResult === \"Wrong\"\n                  ? t(\n                      \"MainInputWrongPlaceholder\",\n                      \"Type correct answer to continue\"\n                    )\n                  : savingLanguage.startsWith(\"ja\")\n                  ? t(\n                      \"MainInputPendingPlaceholderForJaLearner\",\n                      \"Use japanese IME\"\n                    )\n                  : t(\"MainInputPendingPlaceholder\", \"Type your answer here\"),\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"Request judge\"\n                    edge=\"end\"\n                    onClick={() => this.requestJudge()}\n                  >\n                    <KeyboardReturnIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n              onKeyDown: e => {\n                if (e.key === \"Enter\") {\n                  this.requestJudge()\n                }\n              },\n            }}\n          ></TextField>\n          {this.props.judgeResult === \"Pending\" ? (\n            <Button\n              size=\"small\"\n              aria-label=\"Skip current word\"\n              onClick={() => this.requestJudge({ skip: true })}\n            >\n              {t(\"SkipWordButtonText\", \"Skip\")}\n              <RedoIcon fontSize=\"small\" />\n            </Button>\n          ) : (\n            <Button\n              size=\"small\"\n              aria-label=\"Show next word\"\n              onClick={() => this.requestNext()}\n            >\n              {t(\"NextWordButtonText\", \"Skip\")}\n              <ForwardIcon fontSize=\"small\" />\n            </Button>\n          )}\n        </div>\n        <JaWordCard\n          word={word}\n          display={wordCardDisplay}\n          status={wordCardStatus}\n          {...(this.props.currentLevel !== null && {\n            level: this.props.currentLevel,\n          })}\n        />\n        {!wordCardDisplay.startsWith(\"test\") && (\n          <div className=\"word-card-actions\">\n            {!this.state.displayDetail && (\n              <Button\n                size=\"small\"\n                aria-label=\"detail\"\n                onClick={() => {\n                  this.setState({ displayDetail: true })\n                  this.props.enableScroll({ enableScroll: true })\n                }}\n                style={{ color: \"gray\" }}\n              >\n                <MoreHorizIcon fontSize=\"small\" />\n                {t(\"WordDetailButtonText\", \"Detail\")}\n              </Button>\n            )}\n            {this.state.displayDetail && (\n              <Button\n                size=\"small\"\n                aria-label=\"forget\"\n                onClick={() => {\n                  this.requestNext({ forget: true })\n                }}\n                style={{ color: \"gray\" }}\n              >\n                <LinkOffIcon fontSize=\"small\" />\n                {t(\"ForgetWordButtonText\", \"Forget\")}\n              </Button>\n            )}\n            {this.state.displayDetail && this.props.forcedWordKey !== word.key && (\n              <Button\n                size=\"small\"\n                aria-label=\"level plus one\"\n                onClick={() => this.requestJudge({ forceLevelChange: 1 })}\n                style={{ color: \"gray\" }}\n              >\n                <ExposurePlus1Icon fontSize=\"small\" />\n                {t(\"LevelPlusOneButtonText\", \"Level\")}\n              </Button>\n            )}\n            {this.state.displayDetail && this.props.forcedWordKey !== word.key && (\n              <Button\n                size=\"small\"\n                aria-label=\"level plus two\"\n                onClick={() => this.requestJudge({ forceLevelChange: 2 })}\n                style={{ color: \"gray\" }}\n              >\n                <ExposurePlus2Icon fontSize=\"small\" />\n                {t(\"LevelPlusTwoButtonText\", \"Level\")}\n              </Button>\n            )}\n            {this.state.displayDetail && (\n              <Button\n                size=\"small\"\n                aria-label=\"report wrong word\"\n                onClick={() => {\n                  this.setState({ isReportWordDialogOpened: true })\n                }}\n                style={{ color: \"gray\" }}\n              >\n                <ReportProblemIcon fontSize=\"small\" />\n                {t(\"ReportWordButtonText\", \"Report\")}\n              </Button>\n            )}\n          </div>\n        )}\n        <div\n          className=\"word-card-bottom-placeholder\"\n          style={{ height: \"100px\" }}\n        ></div>\n        <ResponsiveDialog open={this.state.isReportWordDialogOpened}>\n          {i18n.language.startsWith(\"zh\") ? (\n            <iframe\n              width=\"640px\"\n              height=\"480px\"\n              src=\"https://forms.office.com/Pages/ResponsePage.aspx?id=HO2aql64JEqeASBBMrBBF9_J_XUtkrhFhjg9N756g3xUNTBIMThERkFCT0JDS1JSOFhLSk45WFJKMyQlQCN0PWcu&embed=true\"\n              frameBorder={0}\n              marginWidth={0}\n              marginHeight={0}\n              style={{ border: \"none\", maxWidth: \"100%\", maxHeight: \"100vh\" }}\n              allowFullScreen\n            ></iframe>\n          ) : (\n            <iframe\n              width=\"640px\"\n              height=\"480px\"\n              src=\"https://forms.office.com/Pages/ResponsePage.aspx?id=HO2aql64JEqeASBBMrBBF9_J_XUtkrhFhjg9N756g3xUQTNBQUU2NllVUzdZRlcxMzM5Tk1JMkREUCQlQCN0PWcu&embed=true\"\n              frameBorder={0}\n              marginWidth={0}\n              marginHeight={0}\n              style={{ border: \"none\", maxWidth: \"100%\", maxHeight: \"100vh\" }}\n              allowFullScreen\n            ></iframe>\n          )}\n          <DialogActions>\n            <Button\n              onClick={() => {\n                this.setState({ isReportWordDialogOpened: false })\n              }}\n            >\n              {t(\"CloseReportWordButtonText\", \"Close\")}\n            </Button>\n          </DialogActions>\n        </ResponsiveDialog>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: RootStateType) => {\n  debug(\"GoiTester state: \", state)\n  const props = {\n    poiUserId: state.GoiUser.get(\"PoiUserId\") as PoiUser.PoiUserId,\n    savingId: state.GoiSaving.get(\"SavingId\") as GoiSavingId,\n    currentWord: state.GoiTester.get(\"CurrentWord\"),\n    currentWordKey: state.GoiTester.getIn([\"CurrentWord\", \"key\"]) as string,\n    currentLevel: state.GoiTester.has(\"Record\")\n      ? (state.GoiTester.getIn([\"Record\", \"Level\"]) as number)\n      : null,\n    judgeResult: state.GoiTester.get(\"JudgeResult\") as GoiJudgeResult,\n    forcedWordKey: state.GoiTester.get(\"ForcedWordKey\") as string,\n    saving: state.GoiSaving.get(\"Saving\") as\n      | GoiSavingDataType\n      | null\n      | undefined,\n    tester: state.GoiTester,\n    learnedCandidates: state.GoiTester.get(\"LearnedCandidates\"),\n    prioritiedCandidates: state.GoiTester.get(\"PrioritiedCandidates\"),\n    pendingCandidates: state.GoiTester.get(\"PendingCandidates\"),\n  }\n  debug(\"GoiTester props: \", props)\n  return props\n}\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<RootStateType, void, Action>\n) => {\n  return {\n    lazyInitUser: () => dispatch(LazyInitUserAction()),\n    lazyInitSaving: ({ poiUserId }: { poiUserId: PoiUser.PoiUserId }) =>\n      dispatch(LazyInitSavingAction({ poiUserId })),\n    updateIsTyping: ({ isTyping }: { isTyping: boolean }) =>\n      dispatch(UpdateIsTypingAction({ isTyping })),\n    enableScroll: ({ enableScroll }: { enableScroll: boolean }) =>\n      dispatch(UpdateEnableScrollAction({ enableScroll })),\n    showNextWord: (\n      {\n        poiUserId,\n        savingId,\n      }: { poiUserId: PoiUser.PoiUserId; savingId: GoiSavingId },\n      {\n        currentWordKey,\n        learnedCandidates,\n        prioritiedCandidates,\n        pendingCandidates,\n      }: {\n        currentWordKey?: string\n        learnedCandidates?: Heap<GoiWordRecordDataType>\n        prioritiedCandidates?: Heap<GoiWordRecordDataType>\n        pendingCandidates?: Heap<GoiWordRecordDataType>\n      } = {}\n    ) =>\n      dispatch(\n        ShowNextWordAction(\n          { poiUserId, savingId },\n          {\n            currentWordKey,\n            learnedCandidates,\n            prioritiedCandidates,\n            pendingCandidates,\n          }\n        )\n      ),\n    judgeAnswer: (\n      {\n        answer,\n        word,\n        skip,\n        forceLevelChange,\n      }: {\n        answer: string\n        word: GoiWordType\n        skip?: boolean\n        forceLevelChange?: number\n      },\n      {\n        poiUserId,\n        savingId,\n      }: {\n        poiUserId: PoiUser.PoiUserId\n        savingId: GoiSavingId\n      }\n    ) =>\n      dispatch(\n        VerifyAnswerAction(\n          { answer, word, skip, forceLevelChange },\n          { poiUserId, savingId }\n        )\n      ),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withTranslation(\"GoiTester\")(GoiTester))\n","import { I18nString } from \"../types/GoiDictionaryTypes\"\nimport { LocaleCode } from \"../types/PoiI18nTypes\"\n\nexport const LookUp = (i18nString: I18nString, locale: LocaleCode) => {\n  // TODO(nagi): Write better lookup\n  if (locale.startsWith(\"zh\")) {\n    if (i18nString.zh) {\n      return i18nString.zh\n    }\n  }\n  if (locale.startsWith(\"ja\")) {\n    if (i18nString.ja) {\n      return i18nString.ja\n    }\n  }\n  return i18nString.en || \"\"\n}\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport {\n  TextField,\n  Container,\n  Dialog,\n  InputAdornment,\n  IconButton,\n  Typography,\n  Divider,\n  List as MuiList,\n  ListItem as MuiListItem,\n  ListItemText as MuiListItemText,\n  ListItemSecondaryAction as MuiListItemSecondaryAction,\n  Button,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  useMediaQuery,\n  FormControlLabel,\n  Checkbox,\n} from \"@material-ui/core\"\nimport SearchIcon from \"@material-ui/icons/SearchOutlined\"\nimport * as PoiUser from \"../utils/PoiUser\"\nimport {\n  DisplayWordAdderAction,\n  AddPendingQueryAction,\n  AddPendingQuerysAction,\n  RemovePendingQueryAction,\n  AddWordsFromQuerysAction,\n  ClearPendingWordsAction,\n  RefreshSubtotalAction,\n  UpdateFilterAction,\n} from \"../actions/WordAdderActions\"\nimport {\n  WordAdderSuggestionQueryType,\n  WordAdderQueryCountersType,\n  WordAdderPendingQueryType,\n  WordAdderQueryType,\n  WordFilterType,\n} from \"../states/WordAdderState\"\nimport { GoiSavingId } from \"../types/GoiTypes\"\nimport { RootStateType } from \"../states/RootState\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { Action } from \"redux\"\nimport { ShowNextWordAction } from \"../actions/GoiTesterActions\"\nimport DeleteIcon from \"@material-ui/icons/DeleteOutlined\"\nimport AddIcon from \"@material-ui/icons/AddOutlined\"\nimport CloseIcon from \"@material-ui/icons/CloseOutlined\"\nimport ExploreOffIcon from \"@material-ui/icons/ExploreOffOutlined\"\nimport { useTheme } from \"@material-ui/styles\"\nimport ResponsiveDialog from \"../components/ResponsiveDialog\"\nimport { I18nString } from \"../types/GoiDictionaryTypes\"\nimport { withTranslation, WithTranslation } from \"react-i18next\"\nimport { LookUp } from \"../utils/PoiI18n\"\nimport { LocaleCode } from \"../types/PoiI18nTypes\"\nimport DebugModule from \"debug\"\nconst debug = DebugModule(\"PoiGoi:WordAdder\")\n\ntype WordAdderPropsType = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps> &\n  WithTranslation\ninterface WordAdderStateType {\n  customQuery: string\n  addingWordsProgress: boolean\n}\nconst QueryRegexPopup = ({ regex }: { regex: string }) => {\n  return <span style={{ color: \"gray\", fontSize: \"0.5rem\" }}>/{regex}/</span>\n}\nexport class WordAdder extends React.Component<\n  WordAdderPropsType,\n  WordAdderStateType\n> {\n  constructor(props: WordAdderPropsType) {\n    super(props)\n    this.state = { customQuery: \"\", addingWordsProgress: false }\n  }\n  getSuggestionQuerys = (): string[] => {\n    const suggestions: WordAdderSuggestionQueryType[] = this.props.suggestions.toJS()\n    return suggestions.map(suggestion => suggestion.Query)\n  }\n  getPendingQuerys = (): string[] => {\n    const pendings: WordAdderPendingQueryType[] = this.props.pendings.toJS()\n    return pendings.map(pending => pending.Query)\n  }\n  addSuggestion = async (\n    suggestion: WordAdderSuggestionQueryType\n  ): Promise<void> => {\n    const { poiUserId, savingId } = this.props\n    if (Array.isArray(suggestion.SubQuerys)) {\n      await this.props.addPendingQuerys(\n        {\n          querys: [\n            ...suggestion.SubQuerys,\n            { Display: suggestion.Display, Query: suggestion.Query },\n          ],\n        },\n        { poiUserId, savingId }\n      )\n    }\n    this.props.refreshSubtotal(\n      {\n        querys: [\n          ...this.getPendingQuerys(),\n          ...(suggestion.SubQuerys || []).map(query => query.Query),\n        ],\n        filter: this.props.filter.toJS(),\n      },\n      { poiUserId, savingId }\n    )\n  }\n  clearAllPendingQuerys = async () => {\n    await Promise.all(\n      this.getPendingQuerys().map(query =>\n        this.props.removePendingQuery({ query })\n      )\n    )\n  }\n  onClickConfirm = async () => {\n    const { poiUserId, savingId } = this.props\n    this.setState({ addingWordsProgress: true })\n    await this.props.addWordsFromQuerys(\n      { querys: this.getPendingQuerys() },\n      { poiUserId, savingId }\n    )\n    this.setState({ addingWordsProgress: false })\n    this.props.close()\n    await this.clearAllPendingQuerys()\n    await this.props.showNextWord(poiUserId, savingId)\n  }\n  addCustomQuery = () => {\n    const { poiUserId, savingId } = this.props\n    const query = this.state.customQuery.trim()\n    this.props.addPendingQuery(\n      {\n        display: { en: \"Custom\", zh: \"自定义搜索条件\" },\n        query,\n      },\n      { poiUserId, savingId }\n    )\n    this.props.refreshSubtotal(\n      {\n        querys: [...this.getPendingQuerys(), query],\n        filter: this.props.filter.toJS(),\n      },\n      { poiUserId, savingId }\n    )\n  }\n  onClickRemovePendingQuery = ({ query }: { query: string }) => {\n    const { poiUserId, savingId } = this.props\n    this.props.removePendingQuery({ query })\n    const newPendingQuerys = this.getPendingQuerys().filter(\n      pendingQuery => pendingQuery != query\n    )\n    this.props.refreshSubtotal(\n      {\n        querys: newPendingQuerys,\n        filter: this.props.filter.toJS(),\n      },\n      { poiUserId, savingId }\n    )\n  }\n  render() {\n    const { t, i18n } = this.props\n    if (!this.props.display) {\n      return <div className=\"word-adder\"></div>\n    }\n    const { poiUserId, savingId } = this.props\n    const { learnedCount, prioritiedCount, pendingCount } = {\n      learnedCount: this.props.status.get(\"LearnedCount\") as number,\n      prioritiedCount: this.props.status.get(\"PrioritiedCount\") as number,\n      pendingCount: this.props.status.get(\"PendingCount\") as number,\n    }\n    const suggestions: WordAdderSuggestionQueryType[] = this.props.suggestions.toJS()\n    const pendings: WordAdderPendingQueryType[] = this.props.pendings.toJS()\n    const counters: WordAdderQueryCountersType = this.props.counters.toJS()\n    return (\n      <ResponsiveDialog className=\"word-adder\" open={this.props.display}>\n        <DialogTitle>{t(\"WordAdderTitle\", \"Add words\")}</DialogTitle>\n        <DialogContent dividers>\n          <MuiList dense={true}>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <TextField\n                label={t(\"SavingStatusLearnedCountLabel\", \"Learned\")}\n                value={learnedCount >= 0 ? learnedCount : \"...\"}\n                margin=\"none\"\n                style={{ marginRight: \"10px\", flex: 1 }}\n                InputProps={{ readOnly: true }}\n              ></TextField>\n              <TextField\n                label={t(\"SavingStatusPrioritiedCountLabel\", \"Prioritied\")}\n                value={prioritiedCount >= 0 ? prioritiedCount : \"...\"}\n                margin=\"none\"\n                style={{ marginRight: \"10px\", flex: 1 }}\n                InputProps={{ readOnly: true }}\n              ></TextField>\n              <TextField\n                label={t(\"SavingStatusPendingCountLabel\", \"Pending\")}\n                value={pendingCount >= 0 ? pendingCount : \"...\"}\n                margin=\"none\"\n                style={{ flex: 1 }}\n                InputProps={{\n                  readOnly: true,\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        size=\"small\"\n                        aria-label=\"Clear pending words\"\n                        onClick={() =>\n                          this.props.clearPendingWords({\n                            poiUserId,\n                            savingId,\n                          })\n                        }\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              ></TextField>\n            </div>\n            <MuiListItem></MuiListItem>\n            <Divider component=\"li\" />\n            <li>\n              <Typography display=\"block\" variant=\"caption\">\n                {t(\"SuggestionSectionTitle\", \"Suggested Word Querys\")}\n              </Typography>\n            </li>\n            {suggestions.map(suggestion => {\n              const {\n                TotalCount,\n                LearnedCount,\n                AddedCount,\n                NewCount,\n              } = counters[suggestion.Query]\n                ? counters[suggestion.Query]\n                : {\n                    TotalCount: -1,\n                    LearnedCount: -1,\n                    AddedCount: -1,\n                    NewCount: -1,\n                  }\n              return (\n                <MuiListItem key={`suggestion${suggestion.Query}`}>\n                  <MuiListItemText\n                    primary={\n                      <>\n                        {LookUp(\n                          suggestion.Display,\n                          i18n.language as LocaleCode\n                        )}\n                        <QueryRegexPopup regex={suggestion.Query} />\n                        {counters[suggestion.Query] &&\n                          t(\"CountQueryTotalResult\", {\n                            defaultValue: \" {{total}} words\",\n                            total: TotalCount >= 0 ? TotalCount : \"...\",\n                          })}\n                      </>\n                    }\n                    secondary={\n                      counters[suggestion.Query] ? (\n                        <>\n                          {t(\"CountSuggestionQueryResult\", {\n                            defaultValue:\n                              \"Learned {{learned}} | Added {{added}} | New {{new}}\",\n                            learned: LearnedCount >= 0 ? LearnedCount : \"...\",\n                            added: AddedCount >= 0 ? AddedCount : \"...\",\n                            new: NewCount >= 0 ? NewCount : \"...\",\n                          })}\n                        </>\n                      ) : null\n                    }\n                  ></MuiListItemText>\n                  <MuiListItemSecondaryAction>\n                    <IconButton\n                      edge=\"end\"\n                      aria-label=\"Add suggestion query\"\n                      onClick={() => this.addSuggestion(suggestion)}\n                    >\n                      <AddIcon />\n                    </IconButton>\n                  </MuiListItemSecondaryAction>\n                </MuiListItem>\n              )\n            })}\n            <div style={{ display: \"flex\" }}>\n              <TextField\n                label={t(\"CustomQueryInputLabel\", \"Custom Query\")}\n                variant=\"outlined\"\n                value={this.state.customQuery}\n                style={{ flexGrow: 1 }}\n                onChange={e => {\n                  this.setState({ customQuery: e.target.value })\n                }}\n                InputProps={{\n                  placeholder: t(\n                    \"CustomQueryInputPlaceholder\",\n                    \"(e.g. JLPT-N5) Accept RegExp\"\n                  ),\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"add query\"\n                        edge=\"end\"\n                        onClick={() => this.addCustomQuery()}\n                      >\n                        <SearchIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                  onKeyDown: e => {\n                    if (e.key === \"Enter\") {\n                      this.addCustomQuery()\n                    }\n                  },\n                }}\n              ></TextField>\n            </div>\n            <MuiListItem></MuiListItem>\n            <Divider component=\"li\" />\n            <li>\n              <Typography display=\"block\" variant=\"caption\">\n                {t(\"WordsToAddSectionTitle\", \"Words to add (Order matters)\")}\n              </Typography>\n            </li>\n            {pendings.length ? (\n              <>\n                <MuiListItem key=\"ClearAllPendingQuerys\">\n                  <MuiListItemText\n                    primary={t(\"CountTotalPendingWords\", {\n                      defaultValue: \"Total new: {{new}}\",\n                      new:\n                        this.props.subtotal >= 0 ? this.props.subtotal : \"...\",\n                    })}\n                    secondary={t(\n                      \"ClearAllPendingsItemText\",\n                      \"Click right button to clear list\"\n                    )}\n                  ></MuiListItemText>\n                  <MuiListItemSecondaryAction>\n                    <IconButton\n                      edge=\"end\"\n                      aria-label=\"clear all pending query\"\n                      onClick={() => this.clearAllPendingQuerys()}\n                    >\n                      <ExploreOffIcon />\n                    </IconButton>\n                  </MuiListItemSecondaryAction>\n                </MuiListItem>\n                {pendings.map(pending => {\n                  const {\n                    TotalCount,\n                    LearnedCount,\n                    AddedCount,\n                    NewCount,\n                  } = counters[pending.Query]\n                    ? counters[pending.Query]\n                    : {\n                        TotalCount: -1,\n                        LearnedCount: -1,\n                        AddedCount: -1,\n                        NewCount: -1,\n                      }\n                  return (\n                    <MuiListItem key={`pending${pending.Query}`}>\n                      <MuiListItemText\n                        primary={\n                          <>\n                            {LookUp(\n                              pending.Display,\n                              i18n.language as LocaleCode\n                            )}\n                            <QueryRegexPopup regex={pending.Query} />\n                            {counters[pending.Query] &&\n                              t(\"CountQueryTotalResult\", {\n                                defaultValue: \" {{total}} words\",\n                                total: TotalCount >= 0 ? TotalCount : \"...\",\n                              })}\n                          </>\n                        }\n                        secondary={\n                          counters[pending.Query] ? (\n                            <>\n                              {t(\"CountPendingQueryResult\", {\n                                defaultValue:\n                                  \"Learned {{learned}} | Added {{added}} | New {{new}}\",\n                                learned:\n                                  LearnedCount >= 0 ? LearnedCount : \"...\",\n                                added: AddedCount >= 0 ? AddedCount : \"...\",\n                                new: NewCount >= 0 ? NewCount : \"...\",\n                              })}\n                            </>\n                          ) : null\n                        }\n                      ></MuiListItemText>\n\n                      <MuiListItemSecondaryAction>\n                        <IconButton\n                          edge=\"end\"\n                          aria-label=\"remove pending query\"\n                          onClick={() =>\n                            this.onClickRemovePendingQuery({\n                              query: pending.Query,\n                            })\n                          }\n                        >\n                          <CloseIcon />\n                        </IconButton>\n                      </MuiListItemSecondaryAction>\n                    </MuiListItem>\n                  )\n                })}\n              </>\n            ) : (\n              <MuiListItem>\n                <MuiListItemText>\n                  {t(\"NoWordsItemPlaceholder\", \"No words to add\")}\n                </MuiListItemText>\n              </MuiListItem>\n            )}\n            <Divider component=\"li\" />\n            <li>\n              <Typography display=\"block\" variant=\"caption\">\n                [WIP]\n                {t(\"FiltersSectionTitle\", \"Filters\")}\n              </Typography>\n            </li>\n            <div style={{ display: \"flux\" }}>\n              <FormControlLabel\n                control={\n                  <Checkbox checked={true} disabled value=\"BasicFilter\" />\n                }\n                label={t(\"BasicFilterLabel\", \"Basic\")}\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={true}\n                    disabled\n                    onChange={() => {}}\n                    value=\"ProperFilter\"\n                  />\n                }\n                label={t(\"ProperFilterLabel\", \"Proper\")}\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox checked={true} disabled value=\"IdiomFilter\" />\n                }\n                label={t(\"IdiomFilterLabel\", \"Idiom\")}\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox checked={true} disabled value=\"ExtraFilter\" />\n                }\n                label={t(\"ExtraFilterLabel\", \"Extra\")}\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox checked={true} disabled value=\"ForgotFilter\" />\n                }\n                label={t(\"ForgotFilterLabel\", \"Forgot\")}\n              />\n            </div>\n          </MuiList>\n        </DialogContent>\n        <DialogActions>\n          {this.state.addingWordsProgress ? (\n            <Button disabled>\n              {t(\"AddingWordsProgressText\", \"Adding words...\")}\n            </Button>\n          ) : (\n            <>\n              <Button onClick={() => this.props.close()}>\n                {t(\"WordAdderCancelButtonText\", \"Cancel\")}\n              </Button>\n              {pendings.length <= 0 ? (\n                <Button disabled>\n                  {t(\"NoPendingWordsPromptText\", \"No words\")}\n                </Button>\n              ) : (\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={this.onClickConfirm}\n                >\n                  {t(\"WordAdderConfirmButtonText\", \"Add these words\")}\n                </Button>\n              )}\n            </>\n          )}\n        </DialogActions>\n      </ResponsiveDialog>\n    )\n  }\n}\n\nconst mapStateToProps = (state: RootStateType) => {\n  debug(\"WordAdderContainer state: \", state)\n  const props = {\n    display: state.WordAdder.get(\"Display\") as boolean,\n    status: state.WordAdder.get(\"Status\"),\n    suggestions: state.WordAdder.get(\"Suggestions\"),\n    pendings: state.WordAdder.get(\"Pendings\"),\n    counters: state.WordAdder.get(\"Counters\"),\n    filter: state.WordAdder.get(\"Filter\"),\n    subtotal: state.WordAdder.get(\"Subtotal\") as number,\n    saving: state.GoiSaving.get(\"Saving\"),\n    poiUserId: state.GoiUser.get(\"PoiUserId\") as PoiUser.PoiUserId,\n    savingId: state.GoiSaving.get(\"SavingId\") as GoiSavingId,\n  }\n  debug(\"WordAdderContainer props: \", props)\n  return props\n}\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<RootStateType, void, Action>\n) => {\n  return {\n    clearPendingWords: ({\n      poiUserId,\n      savingId,\n    }: {\n      poiUserId: PoiUser.PoiUserId\n      savingId: GoiSavingId\n    }) => dispatch(ClearPendingWordsAction({ poiUserId, savingId })),\n    addPendingQuery: (\n      { display, query }: { display: I18nString; query: string },\n      {\n        poiUserId,\n        savingId,\n      }: { poiUserId: PoiUser.PoiUserId; savingId: GoiSavingId }\n    ) =>\n      dispatch(\n        AddPendingQueryAction({ display, query }, { poiUserId, savingId })\n      ),\n    addPendingQuerys: (\n      {\n        querys,\n      }: {\n        querys: WordAdderQueryType[]\n      },\n      {\n        poiUserId,\n        savingId,\n      }: {\n        poiUserId: PoiUser.PoiUserId\n        savingId: GoiSavingId\n      }\n    ) => dispatch(AddPendingQuerysAction({ querys }, { poiUserId, savingId })),\n    removePendingQuery: ({ query }: { query: string }) =>\n      dispatch(RemovePendingQueryAction({ query })),\n    addWordsFromQuerys: (\n      { querys }: { querys: string[] },\n      {\n        poiUserId,\n        savingId,\n      }: { poiUserId: PoiUser.PoiUserId; savingId: GoiSavingId }\n    ) =>\n      dispatch(AddWordsFromQuerysAction({ querys }, { poiUserId, savingId })),\n    close: () => dispatch(DisplayWordAdderAction({ display: false })),\n    showNextWord: (poiUserId: PoiUser.PoiUserId, savingId: GoiSavingId) =>\n      dispatch(ShowNextWordAction({ poiUserId, savingId })),\n    refreshSubtotal: (\n      {\n        querys,\n        filter,\n      }: {\n        querys: string[]\n        filter: WordFilterType\n      },\n      {\n        poiUserId,\n        savingId,\n      }: {\n        poiUserId: PoiUser.PoiUserId\n        savingId: GoiSavingId\n      }\n    ) =>\n      dispatch(\n        RefreshSubtotalAction({ querys, filter }, { poiUserId, savingId })\n      ),\n    updateFilter: ({ filter }: { filter: Partial<WordFilterType> }) =>\n      dispatch(UpdateFilterAction({ filter })),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withTranslation(\"WordAdder\")(WordAdder))\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { withTranslation, WithTranslation } from \"react-i18next\"\nimport { Action } from \"redux\"\nimport { Button, GridList, GridListTile, IconButton } from \"@material-ui/core\"\nimport { SpeedDial, SpeedDialAction } from \"@material-ui/lab\"\nimport { navigate } from \"gatsby\"\nimport { RootStateType } from \"../states/RootState\"\nimport * as PoiUser from \"../utils/PoiUser\"\nimport { GoiSavingId } from \"../types/GoiTypes\"\nimport { ToggleEvents } from \"../utils/PoiResponsive\"\nimport { GoiWordRecordDataType, GoiSavingDataType } from \"../models/GoiSaving\"\nimport { ShowWordAdderAction } from \"../actions/WordAdderActions\"\nimport Heap from \"../algorithm/Heap\"\n\nimport AddIcon from \"@material-ui/icons/AddOutlined\"\nimport CloudOffIcon from \"@material-ui/icons/CloudOffOutlined\"\nimport CreateIcon from \"@material-ui/icons/CreateOutlined\"\nimport FingerprintIcon from \"@material-ui/icons/FingerprintOutlined\"\nimport FirstPageIcon from \"@material-ui/icons/FirstPageOutlined\"\nimport FlagIcon from \"@material-ui/icons/FlagOutlined\"\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumberedOutlined\"\nimport FormatQuoteIcon from \"@material-ui/icons/FormatQuoteOutlined\"\nimport HighlightIcon from \"@material-ui/icons/HighlightOutlined\"\nimport MenuIcon from \"@material-ui/icons/MenuOutlined\"\nimport MoreHorizIcon from \"@material-ui/icons/MoreHorizOutlined\"\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNextOutlined\"\nimport PersonIcon from \"@material-ui/icons/PersonOutlined\"\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlayOutlined\"\nimport SearchIcon from \"@material-ui/icons/SearchOutlined\"\nimport ShareIcon from \"@material-ui/icons/ShareOutlined\"\nimport ShuffleIcon from \"@material-ui/icons/ShuffleOutlined\"\nimport SmsIcon from \"@material-ui/icons/SmsOutlined\"\nimport SyncIcon from \"@material-ui/icons/SyncOutlined\"\nimport ThumbsUpDownIcon from \"@material-ui/icons/ThumbsUpDownOutlined\"\nimport VolumeOffIcon from \"@material-ui/icons/VolumeOffOutlined\"\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUpOutlined\"\nimport RefreshIcon from \"@material-ui/icons/RefreshOutlined\"\nimport ExposureNeg1Icon from \"@material-ui/icons/ExposureNeg1Outlined\"\nimport DebugModule from \"debug\"\nconst debug = DebugModule(\"PoiGoi:CommandsBar\")\n\ntype CommandsBarPropsType = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps> &\n  WithTranslation\ninterface CommandsBarStateType {\n  isMenuOpened: boolean\n  isCommandsExpanded: boolean\n}\n\nexport class CommandsBar extends React.Component<\n  CommandsBarPropsType,\n  CommandsBarStateType\n> {\n  commandsContainerRef = React.createRef<HTMLDivElement>()\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      isMenuOpened: false,\n      isCommandsExpanded: false,\n    }\n  }\n  navigate(to: string) {\n    navigate(to, { replace: true })\n  }\n  openMenu = () => {\n    this.setState({ isMenuOpened: true })\n  }\n  closeMenu = () => {\n    this.setState({ isMenuOpened: false })\n  }\n  toggleMenu = (display?: boolean) => {\n    if (typeof display === \"undefined\") {\n      display = !this.state.isMenuOpened\n    }\n    this.setState({ isMenuOpened: display })\n  }\n  render() {\n    const { t } = this.props\n    const { poiUserId, savingId } = this.props\n    const smDown: boolean =\n      typeof window !== \"undefined\" ? window.innerWidth < 600 : false\n    const savingLanguage =\n      this.props.saving && this.props.saving.Language\n        ? this.props.saving.Language\n        : \"en\"\n    return (\n      <div\n        className=\"commands-bar\"\n        style={{\n          visibility: smDown && this.props.isTyping ? \"hidden\" : \"inherit\",\n          position: \"fixed\",\n          bottom: \"20px\",\n          right: \"20px\",\n          display: \"inline-flex\",\n          alignItems: \"flex-end\",\n          maxWidth: \"calc(100vw - 20px)\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            height: \"40px\",\n            marginBottom: \"8px\",\n          }}\n        >\n          <div\n            style={{\n              margin: \"auto\",\n            }}\n          >\n            {smDown && this.state.isCommandsExpanded && (\n              <IconButton\n                size=\"small\"\n                aria-label=\"Scroll command bar to left end\"\n                onClick={() => {\n                  this.commandsContainerRef.current &&\n                    this.commandsContainerRef.current.scrollTo({\n                      left: -10000,\n                      behavior: \"smooth\",\n                    })\n                }}\n              >\n                <FirstPageIcon fontSize=\"small\" />\n              </IconButton>\n            )}\n          </div>\n        </div>\n        <div\n          ref={this.commandsContainerRef}\n          style={{\n            display: \"flex\",\n            height: \"40px\",\n            marginTop: \"8px\",\n            marginBottom: \"8px\",\n            overflowX: \"auto\",\n            overflowY: \"hidden\",\n            direction: \"rtl\",\n          }}\n        >\n          <div style={{ display: \"inline-flex\", direction: \"ltr\" }}>\n            {this.state.isCommandsExpanded ? (\n              <Button\n                size=\"small\"\n                style={{ whiteSpace: \"nowrap\" }}\n                onClick={() => {\n                  this.setState({ isCommandsExpanded: false })\n                }}\n              >\n                {/* parse text or audio to add new words */}\n                {t(\"FoldButtonText\", \"Less\")}\n                <NavigateNextIcon fontSize=\"small\" />\n              </Button>\n            ) : (\n              <Button\n                size=\"small\"\n                style={{ whiteSpace: \"nowrap\" }}\n                onClick={() => {\n                  this.setState({ isCommandsExpanded: true })\n                }}\n              >\n                {/* parse text or audio to add new words */}\n                {t(\"ExpandButtonText\", \"More\")}\n                <MoreHorizIcon fontSize=\"small\" />\n              </Button>\n            )}\n            {this.state.isCommandsExpanded && (\n              <>\n                <Button size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                  {/* parse text or audio to add new words */}\n                  [WIP]{t(\"ParseButtonText\", \"Parse\")}\n                  <FormatQuoteIcon fontSize=\"small\" />\n                </Button>\n                <Button size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                  [WIP]{t(\"SearchButtonText\", \"Search\")}\n                  <SearchIcon fontSize=\"small\" />\n                </Button>\n                <Button size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                  [WIP]{t(\"RevisitButtonText\", \"Revisit\")}\n                  <RefreshIcon fontSize=\"small\" />\n                  {false && <ExposureNeg1Icon fontSize=\"small\" />}\n                </Button>\n                <Button size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                  [WIP]{t(\"OrderButtonText\", \"Order\")}\n                  <PlaylistPlayIcon fontSize=\"small\" />\n                  {false && <ShuffleIcon fontSize=\"small\" />}\n                </Button>\n                <Button size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                  {/* type select swipe */}\n                  [WIP]{t(\"ModeButtonText\", \"Mode\")}\n                  <CreateIcon fontSize=\"small\" />\n                  {false && <FormatListNumberedIcon fontSize=\"small\" />}\n                  {false && <ThumbsUpDownIcon fontSize=\"small\" />}\n                </Button>\n                <Button size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                  {/* swich savings in different mode */}\n                  [WIP]{t(\"SavingsButtonText\", \"Savings\")}\n                  <FingerprintIcon fontSize=\"small\" />\n                </Button>\n                <Button size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                  [WIP]{t(\"AudioButtonText\", \"Audio\")}\n                  <VolumeOffIcon fontSize=\"small\" />\n                  {false && <VolumeUpIcon fontSize=\"small\" />}\n                </Button>\n                <Button size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                  [WIP]{t(\"SwotUpButtonText\", \"SwotUp\")}\n                  <FlagIcon fontSize=\"small\" />\n                </Button>\n                <Button size=\"small\" style={{ whiteSpace: \"nowrap\" }}>\n                  [WIP]{t(\"SyncButtonText\", \"Sync\")}\n                  <CloudOffIcon fontSize=\"small\" />\n                  {false && <SyncIcon fontSize=\"small\" />}\n                </Button>\n              </>\n            )}\n            {/* TODO: outline the button when all words are learned */}\n            <Button\n              size=\"small\"\n              {...(this.props.pendingCandidates.isEmpty() && {\n                color: \"secondary\",\n                variant: \"outlined\",\n              })}\n              style={{ whiteSpace: \"nowrap\" }}\n              onClick={() => this.props.showWordAdder({ poiUserId, savingId })}\n            >\n              {t(\"AddWordsButtonText\", \"Words\")}\n              <AddIcon fontSize=\"small\" />\n            </Button>\n          </div>\n        </div>\n        <SpeedDial\n          ariaLabel=\"menu\"\n          open={this.state.isMenuOpened}\n          icon={<MenuIcon fontSize=\"small\" />}\n          {...ToggleEvents(this.toggleMenu)}\n          ButtonProps={{\n            color: \"default\",\n            size: \"small\",\n            style: { background: \"white\", margin: \"8px\" },\n          }}\n        >\n          <SpeedDialAction\n            key=\"share\"\n            icon={<ShareIcon fontSize=\"small\" />}\n            tooltipTitle={\"[WIP]\" + t(\"ShareMenuButtonText\", \"Share\")}\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              this.navigate(\"/\")\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"tegami\"\n            icon={<SmsIcon fontSize=\"small\" />}\n            tooltipTitle={\n              savingLanguage.startsWith(\"ja\")\n                ? \"作者の手紙\"\n                : t(\"TegamiMenuButtonText\", \"作者の手紙\")\n            }\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              this.navigate(\"/tegami/\")\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"mamechishiki\"\n            icon={<HighlightIcon />}\n            tooltipTitle={\n              savingLanguage.startsWith(\"ja\")\n                ? \"豆知識\"\n                : t(\"MamechishikiMenuButtonText\", \"豆知識\")\n            }\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              this.navigate(\"/mamechishiki/\")\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"searchwords\"\n            icon={<SearchIcon />}\n            tooltipTitle={\"[WIP]\" + t(\"SearchMenuButtonText\", \"Search Words\")}\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              this.navigate(\"/\")\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"addwords\"\n            icon={<AddIcon />}\n            tooltipTitle={t(\"AddWordsMenuButtonText\", \"Add Words\")}\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              this.props.showWordAdder({ poiUserId, savingId })\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"profile\"\n            icon={<PersonIcon />}\n            tooltipTitle={\n              \"[WIP]\" +\n              t(\"ProfileMenuButtonText\", \"Profile, statics and settings\")\n            }\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              this.navigate(\"/profile/\")\n            }}\n          ></SpeedDialAction>\n        </SpeedDial>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: RootStateType) => {\n  debug(\"CommandsBar state: \", state)\n  const props = {\n    poiUserId: state.GoiUser.get(\"PoiUserId\") as PoiUser.PoiUserId,\n    savingId: state.GoiSaving.get(\"SavingId\") as GoiSavingId,\n    saving: state.GoiSaving.get(\"Saving\") as\n      | GoiSavingDataType\n      | null\n      | undefined,\n    pendingCandidates: state.GoiTester.get(\"PendingCandidates\") as Heap<\n      GoiWordRecordDataType\n    >,\n    isTyping: state.GoiTester.get(\"IsTyping\") as boolean,\n  }\n  debug(\"CommandsBar props: \", props)\n  return props\n}\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<RootStateType, void, Action>\n) => {\n  return {\n    showWordAdder: ({\n      poiUserId,\n      savingId,\n    }: {\n      poiUserId: PoiUser.PoiUserId\n      savingId: GoiSavingId\n    }) => dispatch(ShowWordAdderAction({ poiUserId, savingId })),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withTranslation(\"CommandsBar\")(CommandsBar))\n","import React from \"react\"\nimport NavBar from \"../components/NavBar\"\nimport GoiTester from \"../containers/GoiTester\"\nimport WordAdder from \"../containers/WordAdder\"\nimport CommandsBar from \"../containers/CommandsBar\"\nimport Container from \"@material-ui/core/Container\"\nimport { Hidden } from \"@material-ui/core\"\nimport { poisky } from \"../utils/PoiColors\"\nimport { height } from \"@material-ui/system\"\nimport { RootStateType } from \"../states/RootState\"\nimport { connect } from \"react-redux\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { Action } from \"redux\"\n\ntype IndexPagePropsType = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>\nclass IndexPage extends React.Component<IndexPagePropsType> {\n  render() {\n    return (\n      // <div style={{ width: \"100%\", overflow: \"hidden\", position: \"fixed\" }}>\n      <div\n        className=\"goi-index-page\"\n        {...(!this.props.enableScroll && {\n          style: {\n            width: \"100%\",\n            height: \"100%\",\n            overflow: \"hidden\",\n            position: \"fixed\",\n          },\n        })}\n      >\n        <Hidden xsDown>\n          <NavBar />\n        </Hidden>\n        <Hidden smUp>\n          <div style={{ background: poisky, height: \"1px\" }} />\n        </Hidden>\n        <CommandsBar />\n        <main>\n          <WordAdder />\n          <Container>\n            <GoiTester />\n          </Container>\n        </main>\n        <div\n          className=\"buildVersion\"\n          style={{\n            position: \"absolute\",\n            bottom: 0,\n            right: 0,\n            color: \"lightgray\",\n          }}\n        >\n          catfood build v1.20190814.rc2\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: RootStateType) => {\n  const props = {\n    enableScroll: state.Layout.get(\"EnableScroll\") as boolean,\n  }\n  return props\n}\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<RootStateType, void, Action>\n) => {\n  return {}\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IndexPage)\n"],"sourceRoot":""}