{"version":3,"sources":["webpack:///./src/components/WordCards/TinyTag.tsx","webpack:///./src/components/WordCards/GoiTranslation.tsx","webpack:///./src/components/WordCards/GoiSentence.tsx","webpack:///./src/components/WordCards/JaWordCard.tsx","webpack:///./src/containers/GoiTester.tsx","webpack:///./src/containers/WordAdder.tsx","webpack:///./src/containers/CommandsBar.tsx","webpack:///./src/pages/index.tsx"],"names":["TinyTag","_React$Component","apply","this","arguments","prototype","render","react_default","a","createElement","Box","Object","assign","display","border","borderRadius","marginLeft","marginTop","props","children","React","Component","GoiTranslation","_this$props","i18nTranslation","displayHint","from","displayFrom","className","style","fontSize","entries","translation","map","_ref","translationLanguage","translationText","keys","length","visibility","hint","Fragment","WordCards_TinyTag","_ref2","hintLanguage","hintText","dangerouslySetInnerHTML","__html","color","width","justifyContent","defaultProps","en","zh","jp","locales","GoiSentence","i18nSentence","sentence","audios","source","link","contributor","circledNumber","x","String","fromCharCode","Math","floor","JaWordCard","_this","statusColor","status","word","sortedTranslationsDictionarys","i","dictionarys","tmpDictionary","translations","includes","push","filteredTranslationsDictionarys","slice","sortedSentences","_loop","tmpSentences","sentences","filter","_toConsumableArray","filteredSentences","console","debug","height","common","tone","Array","isArray","singleTone","join","pos","romaji","wapuro","List","dictionaryName","WordCards_GoiTranslation","key","sentenceId","WordCards_GoiSentence","level","GoiTester","call","JudgeInputElement","requestJudge","_asyncToGenerator","regenerator_default","mark","_callee","_temp","skip","poiUserId","savingId","judgeResult","wrap","_context","prev","next","currentWord","toJS","judgeAnswer","answer","state","testerInput","sent","setState","requestNext","stop","_x","_this$props2","currentWordKey","learnedCandidates","prioritiedCandidates","pendingCandidates","showNextWord","displayDetail","_proto","componentDidMount","_componentDidMount","_callee2","_context2","lazyInitUser","lazyInitSaving","_this2","wordCardStatus","wordCardDisplay","Helmet_default","TextField","label","variant","value","flexGrow","onChange","e","target","InputProps","placeholder","endAdornment","InputAdornment","position","IconButton","aria-label","edge","onClick","KeyboardReturnOutlined_default","onKeyDown","Button","size","RedoOutlined_default","ForwardOutlined_default","WordCards_JaWordCard","startsWith","MoreHorizOutlined_default","connect","GoiUser","get","GoiSaving","saving","tester","dispatch","LazyInitUserAction","_ref3","LazyInitSavingAction","_ref4","_temp2","_ref5","ShowNextWordAction","_ref6","_ref7","VerifyAnswerAction","WordAdder","getSuggestionQuerys","suggestions","suggestion","Query","getPendingQuerys","pendings","pending","onClickConfirm","WordAdder_asyncToGenerator","addWordsFromQuerys","querys","close","query","removePendingQuery","customQuery","counters","Dialog","open","marginBottom","Container","Typography","gutterBottom","dense","Divider","component","ListItem","LearnedCount","margin","marginRight","flex","readOnly","PrioritiedCount","PendingCount","clearPendingWords","DeleteOutlined_default","ListItemText","primary","Display","TotalCount","secondary","AddedCount","NewCount","ListItemSecondaryAction","addPendingQuery","AddOutlined_default","trim","SearchOutlined_default","CloseOutlined_default","ClearPendingWordsAction","AddPendingQueryAction","RemovePendingQueryAction","AddWordsFromQuerysAction","DisplayWordAdderAction","CommandsBar","openMenu","menuOpened","closeMenu","toggleMenu","navigate","to","replace","bottom","right","alignItems","FlagOutlined_default","SyncOutlined_default","showWordAdder","SpeedDial","ariaLabel","icon","MenuOutlined_default","onBlur","onClose","onFocus","onMouseEnter","onMouseLeave","ButtonProps","background","SpeedDialAction","ShareOutlined_default","tooltipTitle","tooltipOpen","SmsOutlined_default","HighlightOutlined_default","PersonOutlined_default","ShowWordAdderAction","__webpack_exports__","overflow","Hidden","xsDown","NavBar","containers_CommandsBar","containers_WordAdder","containers_GoiTester"],"mappings":"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","file":"component---src-pages-index-tsx-b9d241fc11b0ea9b75c4.js","sourcesContent":["import React from \"react\"\nimport { I18nString } from \"../../types/GoiDictionaryTypes\"\nimport { List as MuiList, Box } from \"@material-ui/core\"\n\nexport class TinyTag extends React.Component {\n  render() {\n    return (\n      <Box\n        display=\"inline-flex\"\n        border={1}\n        borderRadius={3}\n        marginLeft=\"5px\"\n        marginTop=\"5px\"\n        {...this.props}\n      >\n        {this.props.children}\n      </Box>\n    )\n  }\n}\n\nexport default TinyTag\n","import React from \"react\"\nimport { I18nString } from \"../../types/GoiDictionaryTypes\"\nimport { List as MuiList, Box } from \"@material-ui/core\"\nimport TinyTag from \"./TinyTag\"\n\nexport type GoiTranslationPropsType = {\n  i18nTranslation: {\n    translation: I18nString\n    hint?: I18nString\n  }\n  displayHint?: boolean\n  locales?: string[] // WIP\n  from?: string\n  displayFrom?: boolean\n}\n\nexport class GoiTranslation extends React.Component<GoiTranslationPropsType> {\n  static defaultProps = {\n    i18nTranslation: {\n      translation: {\n        en: \"English Translation\",\n        zh: \"中文翻译\",\n        jp: \"日本語\",\n      },\n      hint: {\n        en: \"English Hint\",\n        zh: \"中文提示\",\n        jp: \"日本語\",\n      },\n    },\n    displayHint: true,\n    locales: [\"jp\", \"zh\", \"en\"],\n    from: \"\",\n    displayFrom: false,\n  }\n  render() {\n    const { i18nTranslation, displayHint, from, displayFrom } = this.props\n    return (\n      <li>\n        <div\n          className=\"word-card-single-translation\"\n          style={{ fontSize: \"8vmin\" }}\n        >\n          {Object.entries(i18nTranslation.translation).map(\n            ([translationLanguage, translationText]) => {\n              return Object.keys(i18nTranslation.translation).length > 1\n                ? `${translationLanguage}:${translationText}; `\n                : `${translationText}`\n            }\n          )}\n        </div>\n        <div\n          className=\"word-card-single-translation-hint\"\n          style={{\n            visibility: displayHint ? \"inherit\" : \"hidden\",\n          }}\n        >\n          {i18nTranslation.hint && (\n            <>\n              <TinyTag>Hint</TinyTag>\n              {Object.entries(i18nTranslation.hint).map(\n                ([hintLanguage, hintText]) => {\n                  return Object.keys(i18nTranslation.hint || {}).length > 1 ? (\n                    <>\n                      {hintLanguage}\n                      <span\n                        dangerouslySetInnerHTML={{\n                          __html: hintText || \"\",\n                        }}\n                      />\n                    </>\n                  ) : (\n                    <span\n                      dangerouslySetInnerHTML={{\n                        __html: hintText || \"\",\n                      }}\n                    />\n                  )\n                }\n              )}\n            </>\n          )}\n        </div>\n        {displayFrom && (\n          <div\n            style={{\n              color: \"gray\",\n              width: \"100%\",\n              fontSize: \"1.5vmin\",\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n            }}\n          >\n            from {from}\n          </div>\n        )}\n      </li>\n    )\n  }\n}\n\nexport default GoiTranslation\n","import React from \"react\"\nimport { I18nString } from \"../../types/GoiDictionaryTypes\"\nimport { List as MuiList, Box } from \"@material-ui/core\"\nimport TinyTag from \"./TinyTag\"\n\nexport type GoiSentencePropsType = {\n  i18nSentence: {\n    from: string\n    sentence: string\n    audios?: { cv: string; wav: string }[]\n    translation?: I18nString\n    source?: string\n    link?: string\n    contributor?: string\n  }\n  locales?: string[] // WIP\n  displayFrom?: boolean\n}\n\nexport class GoiSentence extends React.Component<GoiSentencePropsType> {\n  static defaultProps = {\n    i18nSentence: {\n      from: \"\",\n      sentence: \"It's a sample sentence.\",\n      translation: {\n        en: \"It's the translation of the sample sentence.\",\n        zh: \"这是例句的中文翻译\",\n        jp: \"これは例句の日本語の翻訳です\",\n      },\n      audios: [],\n      source: \"PoiGoi\",\n      link: \"https://goi.poi.dev/\",\n      contributor: \"凪\",\n    },\n    displayHint: true,\n    locales: [\"jp\", \"zh\", \"en\"],\n    displayFrom: false,\n  }\n  render() {\n    const { i18nSentence, displayFrom } = this.props\n    return (\n      <li>\n        <div\n          className=\"word-card-single-sentence\"\n          style={{ fontSize: \"4vmin\" }}\n        >\n          <span\n            dangerouslySetInnerHTML={{ __html: i18nSentence.sentence }}\n          ></span>\n        </div>\n        <div\n          className=\"word-card-single-sentence-translation\"\n          style={{ fontSize: \"4vmin\" }}\n        >\n          {i18nSentence.translation &&\n            Object.entries(i18nSentence.translation).map(\n              ([translationLanguage, translationText]) => {\n                return Object.keys(i18nSentence.translation || []).length > 1\n                  ? `${translationLanguage}:${translationText}; `\n                  : `${translationText}`\n              }\n            )}\n        </div>\n        {displayFrom && (\n          <div\n            style={{\n              color: \"gray\",\n              width: \"100%\",\n              fontSize: \"1.5vmin\",\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n            }}\n          >\n            from {i18nSentence.from}\n          </div>\n        )}\n      </li>\n    )\n  }\n}\n\nexport default GoiSentence\n","import React from \"react\"\nimport { GoiJaWordType } from \"../../types/GoiDictionaryTypes\"\nimport { List as MuiList, Box } from \"@material-ui/core\"\nimport { GoiDictionarys } from \"../../models/GoiDictionary\"\nimport GoiTranslation from \"./GoiTranslation\"\nimport TinyTag from \"./TinyTag\"\nimport { string } from \"prop-types\"\nimport GoiSentence from \"./GoiSentence\"\n\nexport type WordCardPropsType = {\n  word: GoiJaWordType\n  display: \"simple\" | \"detailed\" | \"test-common\" | \"test-translation\"\n  status:\n    | \"input\"\n    | \"first\"\n    | \"perfect\"\n    | \"good\"\n    | \"warning\"\n    | \"failed\"\n    | \"peek\"\n    | \"review\"\n  dictionarys: string[]\n  level: number\n}\n\nconst circledNumber = (x: number) => {\n  if (x === 0) {\n    return String.fromCharCode(9450)\n  }\n  if (x >= 1 && x < 20) {\n    return String.fromCharCode(9311 + Math.floor(x))\n  }\n  return \"\"\n}\nexport class JaWordCard extends React.Component<WordCardPropsType> {\n  static defaultProps = {\n    word: {\n      common: \"Common Placeholder\",\n      translation: \"Translation Placeholder\",\n    },\n    display: \"detailed\",\n    status: \"view\",\n    dictionarys: [\n      \"KanaDictionary\",\n      \"GoiSimpleJaDictionary\",\n      \"BiaozhunRibenyu\",\n      \"XinbianRiyu\",\n      \"Xinbian\",\n      \"AnimeSong\",\n      \"Anime\",\n      \"JishoOrg\",\n      \"GooJisho\",\n    ],\n    level: -1,\n  }\n  render() {\n    const statusColor =\n      this.props.status === \"input\"\n        ? \"gray\"\n        : this.props.status === \"first\"\n        ? \"blue\"\n        : this.props.status === \"perfect\"\n        ? \"green\"\n        : this.props.status === \"good\"\n        ? \"lightgreen\"\n        : this.props.status === \"warning\"\n        ? \"yellow\"\n        : this.props.status === \"failed\"\n        ? \"red\"\n        : this.props.status === \"peek\"\n        ? \"blue\"\n        : this.props.status === \"review\"\n        ? \"black\"\n        : \"black\"\n    const word = Object.assign({}, this.props.word)\n    const sortedTranslationsDictionarys = []\n    for (let i = 0; i < this.props.dictionarys.length; i++) {\n      const tmpDictionary = this.props.dictionarys[i]\n      if (Object.keys(word.translations).includes(tmpDictionary)) {\n        sortedTranslationsDictionarys.push(tmpDictionary)\n      }\n    }\n    const filteredTranslationsDictionarys =\n      this.props.display !== \"detailed\"\n        ? sortedTranslationsDictionarys.slice(0, 1)\n        : sortedTranslationsDictionarys\n    const sortedSentences = []\n    for (let i = 0; i < this.props.dictionarys.length; i++) {\n      const tmpDictionary = this.props.dictionarys[i]\n      const tmpSentences = (word.sentences || []).filter(\n        sentence => sentence.from === tmpDictionary\n      )\n      sortedSentences.push(...tmpSentences)\n    }\n    const filteredSentences =\n      this.props.display !== \"detailed\"\n        ? sortedSentences.slice(0, 1)\n        : sortedSentences\n    console.debug(filteredTranslationsDictionarys, filteredSentences)\n    return (\n      <div className=\"word-card\">\n        <div\n          className=\"word-card-common\"\n          style={{\n            height: \"20vmin\",\n            fontSize: \"10vmin\",\n            color: statusColor,\n            visibility:\n              this.props.display === \"test-common\" ? \"hidden\" : \"inherit\",\n          }}\n        >\n          <span dangerouslySetInnerHTML={{ __html: word.common }} />\n        </div>\n        <div\n          className=\"word-card-tags\"\n          style={{\n            visibility:\n              this.props.display === \"test-common\" ? \"hidden\" : \"inherit\",\n          }}\n        >\n          {typeof word.tone === \"number\" && circledNumber(word.tone)}\n          {Array.isArray(word.tone) &&\n            word.tone\n              .map(\n                singleTone =>\n                  typeof singleTone === \"number\" && circledNumber(singleTone)\n              )\n              .join()}\n          {word.pos.includes(\"KANA\") && <TinyTag>仮名</TinyTag>}\n          {word.pos.includes(\"HIRAGANA\") && <TinyTag>平仮名</TinyTag>}\n          {word.pos.includes(\"KATAKANA\") && <TinyTag>片仮名</TinyTag>}\n          {word.pos.includes(\"VERB\") && <TinyTag>動詞</TinyTag>}\n          {word.pos.includes(\"GODAN\") && <TinyTag>五段活用</TinyTag>}\n          {word.pos.includes(\"JIDOSHI\") && <TinyTag>自動詞</TinyTag>}\n          {word.pos.includes(\"TADOSHI\") && <TinyTag>他動詞</TinyTag>}\n          {word.pos.includes(\"NOUN\") && <TinyTag>名詞</TinyTag>}\n          {word.romaji && (\n            <>\n              <TinyTag>ローマ字</TinyTag>\n              {word.romaji}\n            </>\n          )}\n          {word.wapuro && (\n            <>\n              <TinyTag>ワープロ</TinyTag>\n              {word.romaji}\n            </>\n          )}\n        </div>\n        <div className=\"word-card-translation\" style={{ color: statusColor }}>\n          <MuiList>\n            {filteredTranslationsDictionarys.map(dictionaryName => (\n              <GoiTranslation\n                key={dictionaryName}\n                i18nTranslation={word.translations[dictionaryName]}\n                displayHint={this.props.display !== \"test-common\"}\n                from={dictionaryName}\n                displayFrom={this.props.display === \"detailed\"}\n              />\n            ))}\n          </MuiList>\n        </div>\n        {this.props.display !== \"test-common\" && (\n          <div className=\"word-card-sentences\">\n            <MuiList>\n              {filteredSentences.map((sentence, sentenceId) => (\n                <GoiSentence\n                  key={sentenceId}\n                  i18nSentence={sentence}\n                  displayFrom={this.props.display === \"detailed\"}\n                />\n              ))}\n            </MuiList>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default JaWordCard\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport JaWordCard from \"../components/WordCards/JaWordCard\"\nimport * as PoiUser from \"../utils/PoiUser\"\nimport { LazyInitUserAction } from \"../actions/GoiUserActions\"\nimport { LazyInitSavingAction } from \"../actions/GoiSavingActions\"\nimport {\n  VerifyAnswerAction,\n  ShowNextWordAction,\n} from \"../actions/GoiTesterActions\"\nimport { GoiSavingId, GoiJudgeResult } from \"../types/GoiTypes\"\nimport Helmet from \"react-helmet\"\nimport { GoiWordType, GoiJaWordType } from \"../types/GoiDictionaryTypes\"\nimport { RootStateType } from \"../states/RootState\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { Action } from \"redux\"\nimport Heap from \"../algorithm/Heap\"\nimport { GoiWordRecordDataType } from \"../models/GoiSaving\"\nimport {\n  TextField,\n  InputAdornment,\n  IconButton,\n  Button,\n} from \"@material-ui/core\"\nimport SpellcheckIcon from \"@material-ui/icons/SpellcheckOutlined\"\nimport KeyboardReturnIcon from \"@material-ui/icons/KeyboardReturnOutlined\"\nimport RedoIcon from \"@material-ui/icons/RedoOutlined\"\nimport ForwardIcon from \"@material-ui/icons/ForwardOutlined\"\nimport MoreVertIcon from \"@material-ui/icons/MoreVertOutlined\"\nimport MoreHorizIcon from \"@material-ui/icons/MoreHorizOutlined\"\nimport { display } from \"@material-ui/system\"\n\ntype GoiTesterPropsType = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>\ninterface GoiTesterStateType {\n  testerInput: string\n  displayDetail: boolean\n}\nexport class GoiTester extends React.Component<\n  GoiTesterPropsType,\n  GoiTesterStateType\n> {\n  constructor(props: GoiTesterPropsType) {\n    super(props)\n    this.state = {\n      testerInput: \"\",\n      displayDetail: false,\n    }\n  }\n  JudgeInputElement: HTMLInputElement | null = null\n  async componentDidMount() {\n    console.debug(\"Lasy init user\")\n    const poiUserId = (await this.props.lazyInitUser()) as PoiUser.PoiUserId\n    console.debug(\"Lasy init saving\")\n    const savingId = await this.props.lazyInitSaving({ poiUserId })\n    await this.props.showNextWord({ poiUserId, savingId })\n  }\n  requestJudge = async ({ skip }: { skip?: boolean } = {}) => {\n    const { poiUserId, savingId } = this.props\n    const word: GoiJaWordType = this.props.currentWord.toJS()\n    const judgeResult = await this.props.judgeAnswer(\n      {\n        answer: this.state.testerInput,\n        word,\n        skip,\n      },\n      {\n        poiUserId,\n        savingId,\n      }\n    )\n    this.setState({ testerInput: \"\" })\n    if (\n      judgeResult === \"Correct\" ||\n      judgeResult === \"Accepted\" ||\n      judgeResult === \"Skipped\"\n    ) {\n      this.requestNext()\n    }\n  }\n  requestNext = () => {\n    const {\n      poiUserId,\n      savingId,\n      currentWordKey,\n      learnedCandidates,\n      prioritiedCandidates,\n      pendingCandidates,\n    } = this.props\n    this.props.showNextWord(\n      { poiUserId, savingId },\n      {\n        currentWordKey,\n        learnedCandidates,\n        prioritiedCandidates,\n        pendingCandidates,\n      }\n    )\n    this.setState({ testerInput: \"\", displayDetail: false })\n  }\n  render() {\n    const word: GoiJaWordType = this.props.currentWord.toJS()\n    const wordCardStatus =\n      this.props.judgeResult === \"Pending\"\n        ? \"input\"\n        : this.props.judgeResult === \"Correct\"\n        ? \"perfect\"\n        : this.props.judgeResult === \"Accepted\"\n        ? \"good\"\n        : this.props.judgeResult === \"Rejected\"\n        ? \"warning\"\n        : this.props.judgeResult === \"Wrong\"\n        ? \"failed\"\n        : \"review\"\n    const wordCardDisplay =\n      this.props.judgeResult === \"Pending\"\n        ? \"test-common\"\n        : this.state.displayDetail\n        ? \"detailed\"\n        : \"simple\"\n    return (\n      <div className=\"goi-tester\" style={{ marginTop: \"20px\" }}>\n        <Helmet>\n          <title>\n            {this.props.judgeResult === \"Pending\"\n              ? \"PoiGoi\"\n              : `PoiGoi - ${word.key}`}\n          </title>\n        </Helmet>\n        <div style={{ display: \"flex\" }}>\n          <TextField\n            label=\"Justify your answer\"\n            variant=\"outlined\"\n            value={this.state.testerInput}\n            style={{ flexGrow: 1 }}\n            onChange={e => {\n              this.setState({ testerInput: e.target.value })\n            }}\n            InputProps={{\n              placeholder:\n                this.props.judgeResult === \"Rejected\" ||\n                this.props.judgeResult === \"Wrong\"\n                  ? \"Type correct answer to continue\"\n                  : \"Type your answer here\",\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"Request judge\"\n                    edge=\"end\"\n                    onClick={() => this.requestJudge()}\n                  >\n                    <KeyboardReturnIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n              onKeyDown: e => {\n                if (e.key === \"Enter\") {\n                  this.requestJudge()\n                }\n              },\n            }}\n          ></TextField>\n          {this.props.judgeResult === \"Pending\" ? (\n            <Button\n              size=\"small\"\n              aria-label=\"Skip current word\"\n              onClick={() => this.requestJudge({ skip: true })}\n            >\n              Skip\n              <RedoIcon fontSize=\"small\" />\n            </Button>\n          ) : (\n            <Button\n              aria-label=\"Show next word\"\n              onClick={() => this.requestNext()}\n            >\n              Skip\n              <ForwardIcon fontSize=\"small\" />\n            </Button>\n          )}\n        </div>\n        <JaWordCard\n          word={word}\n          display={wordCardDisplay}\n          status={wordCardStatus}\n        />\n        {!wordCardDisplay.startsWith(\"test\") && (\n          <IconButton\n            aria-label=\"detail\"\n            onClick={() => {\n              this.setState({ displayDetail: true })\n            }}\n          >\n            <MoreHorizIcon />\n          </IconButton>\n        )}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: RootStateType) => {\n  console.debug(\"GoiTester state: \", state)\n  const props = {\n    poiUserId: state.GoiUser.get(\"PoiUserId\") as PoiUser.PoiUserId,\n    savingId: state.GoiSaving.get(\"SavingId\") as GoiSavingId,\n    currentWord: state.GoiTester.get(\"CurrentWord\"),\n    currentWordKey: state.GoiTester.get(\"CurrentWord\").get(\"key\") as string,\n    judgeResult: state.GoiTester.get(\"JudgeResult\") as GoiJudgeResult,\n    saving: state.GoiSaving.get(\"Saving\"),\n    tester: state.GoiTester,\n    learnedCandidates: state.GoiTester.get(\"LearnedCandidates\"),\n    prioritiedCandidates: state.GoiTester.get(\"PrioritiedCandidates\"),\n    pendingCandidates: state.GoiTester.get(\"PendingCandidates\"),\n  }\n  console.debug(\"GoiTester props: \", props)\n  return props\n}\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<RootStateType, void, Action>\n) => {\n  return {\n    lazyInitUser: () => dispatch(LazyInitUserAction()),\n    lazyInitSaving: ({ poiUserId }: { poiUserId: PoiUser.PoiUserId }) =>\n      dispatch(LazyInitSavingAction({ poiUserId })),\n    showNextWord: (\n      {\n        poiUserId,\n        savingId,\n      }: { poiUserId: PoiUser.PoiUserId; savingId: GoiSavingId },\n      {\n        currentWordKey,\n        learnedCandidates,\n        prioritiedCandidates,\n        pendingCandidates,\n      }: {\n        currentWordKey?: string\n        learnedCandidates?: Heap<GoiWordRecordDataType>\n        prioritiedCandidates?: Heap<GoiWordRecordDataType>\n        pendingCandidates?: Heap<GoiWordRecordDataType>\n      } = {}\n    ) =>\n      dispatch(\n        ShowNextWordAction(\n          { poiUserId, savingId },\n          {\n            currentWordKey,\n            learnedCandidates,\n            prioritiedCandidates,\n            pendingCandidates,\n          }\n        )\n      ),\n    judgeAnswer: (\n      {\n        answer,\n        word,\n        skip,\n      }: {\n        answer: string\n        word: GoiWordType\n        skip?: boolean\n      },\n      {\n        poiUserId,\n        savingId,\n      }: {\n        poiUserId: PoiUser.PoiUserId\n        savingId: GoiSavingId\n      }\n    ) =>\n      dispatch(\n        VerifyAnswerAction({ answer, word, skip }, { poiUserId, savingId })\n      ),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GoiTester)\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport {\n  TextField,\n  Container,\n  Dialog,\n  InputAdornment,\n  IconButton,\n  Typography,\n  Divider,\n  List as MuiList,\n  ListItem as MuiListItem,\n  ListItemText as MuiListItemText,\n  ListItemSecondaryAction as MuiListItemSecondaryAction,\n  Button,\n} from \"@material-ui/core\"\nimport SearchIcon from \"@material-ui/icons/SearchOutlined\"\nimport * as PoiUser from \"../utils/PoiUser\"\nimport {\n  DisplayWordAdderAction,\n  AddPendingQueryAction,\n  RemovePendingQueryAction,\n  AddWordsFromQuerysAction,\n  ClearPendingWordsAction,\n} from \"../actions/WordAdderActions\"\nimport {\n  WordAdderSuggestionQueryType,\n  WordAdderQueryCountersType,\n  WordAdderPendingQueryType,\n} from \"../states/WordAdderState\"\nimport { GoiSavingId } from \"../types/GoiTypes\"\nimport { RootStateType } from \"../states/RootState\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { Action } from \"redux\"\nimport { ShowNextWordAction } from \"../actions/GoiTesterActions\"\nimport DeleteIcon from \"@material-ui/icons/DeleteOutlined\"\nimport AddIcon from \"@material-ui/icons/AddOutlined\"\nimport CloseIcon from \"@material-ui/icons/CloseOutlined\"\n\ntype WordAdderPropsType = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>\ninterface WordAdderStateType {\n  customQuery: string\n}\nexport class WordAdder extends React.Component<\n  WordAdderPropsType,\n  WordAdderStateType\n> {\n  constructor(props: WordAdderPropsType) {\n    super(props)\n    this.state = { customQuery: \"\" }\n  }\n  getSuggestionQuerys = (): string[] => {\n    const suggestions: WordAdderSuggestionQueryType[] = this.props.suggestions.toJS()\n    return suggestions.map(suggestion => suggestion.Query)\n  }\n  getPendingQuerys = (): string[] => {\n    const pendings: WordAdderPendingQueryType[] = this.props.pendings.toJS()\n    return pendings.map(pending => pending.Query)\n  }\n  onClickConfirm = async () => {\n    const poiUserId = this.props.poiUserId\n    const savingId = this.props.savingId\n    await this.props.addWordsFromQuerys(\n      { querys: this.getPendingQuerys() },\n      { poiUserId, savingId }\n    )\n    this.props.close()\n    this.getPendingQuerys().map(query =>\n      this.props.removePendingQuery({ query })\n    )\n    await this.props.showNextWord(poiUserId, savingId)\n  }\n  render() {\n    if (!this.props.display) {\n      return <div className=\"word-adder\"></div>\n    }\n    const poiUserId = this.props.poiUserId\n    const savingId = this.props.savingId\n    const status = this.props.status.toJS()\n    const suggestions: WordAdderSuggestionQueryType[] = this.props.suggestions.toJS()\n    const pendings: WordAdderPendingQueryType[] = this.props.pendings.toJS()\n    const counters: WordAdderQueryCountersType = this.props.counters.toJS()\n    return (\n      <Dialog className=\"word-adder\" open={this.props.display}>\n        <div style={{ marginTop: \"20px\", marginBottom: \"20px\" }}>\n          <Container>\n            <Typography gutterBottom variant=\"h4\">\n              Add words\n            </Typography>\n            <MuiList dense={true}>\n              <Divider component=\"li\" />\n              <li>\n                <Typography display=\"block\" variant=\"caption\">\n                  Current Study Status\n                </Typography>\n              </li>\n              <MuiListItem>\n                <TextField\n                  label=\"Learned\"\n                  value={status.LearnedCount}\n                  margin=\"none\"\n                  style={{ marginRight: \"10px\", flex: 1 }}\n                  InputProps={{ readOnly: true }}\n                ></TextField>\n                <TextField\n                  label=\"Prioritied\"\n                  value={status.PrioritiedCount}\n                  margin=\"none\"\n                  style={{ marginRight: \"10px\", flex: 1 }}\n                  InputProps={{ readOnly: true }}\n                ></TextField>\n                <TextField\n                  label=\"Pending\"\n                  value={status.PendingCount}\n                  margin=\"none\"\n                  style={{ marginRight: \"10px\", flex: 1 }}\n                  InputProps={{\n                    readOnly: true,\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"Clear pending words\"\n                          onClick={() =>\n                            this.props.clearPendingWords({\n                              poiUserId,\n                              savingId,\n                            })\n                          }\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                ></TextField>\n              </MuiListItem>\n              <Divider component=\"li\" />\n              <li>\n                <Typography display=\"block\" variant=\"caption\">\n                  Suggested Word Lists\n                </Typography>\n              </li>\n              {suggestions.map(suggestion => (\n                <MuiListItem key={`suggestion${suggestion.Query}`}>\n                  <MuiListItemText\n                    primary={`${suggestion.Display} (${suggestion.Query}) ${counters[suggestion.Query].TotalCount} words`}\n                    secondary={\n                      counters[suggestion.Query] ? (\n                        <>\n                          <span>{`Learned ${counters[suggestion.Query].LearnedCount}, `}</span>\n                          <span>{`Added ${counters[suggestion.Query].AddedCount}, `}</span>\n                          <span>{`New ${counters[suggestion.Query].NewCount}`}</span>\n                        </>\n                      ) : null\n                    }\n                  ></MuiListItemText>\n                  <MuiListItemSecondaryAction>\n                    <IconButton\n                      edge=\"end\"\n                      aria-label=\"Add suggestion query\"\n                      onClick={() =>\n                        this.props.addPendingQuery(\n                          {\n                            display: suggestion.Display,\n                            query: suggestion.Query,\n                          },\n                          { poiUserId, savingId }\n                        )\n                      }\n                    >\n                      <AddIcon />\n                    </IconButton>\n                  </MuiListItemSecondaryAction>\n                </MuiListItem>\n              ))}\n              <div style={{ display: \"flex\" }}>\n                <TextField\n                  label=\"Custom Query\"\n                  variant=\"outlined\"\n                  value={this.state.customQuery}\n                  style={{ flexGrow: 1 }}\n                  onChange={e => {\n                    this.setState({ customQuery: e.target.value })\n                  }}\n                  InputProps={{\n                    placeholder: \"(e.g. JLPT-N5) Accept RegExp\",\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"add query\"\n                          edge=\"end\"\n                          onClick={() =>\n                            this.props.addPendingQuery(\n                              {\n                                display: \"Custom\",\n                                query: this.state.customQuery.trim(),\n                              },\n                              { poiUserId, savingId }\n                            )\n                          }\n                        >\n                          <SearchIcon />\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                ></TextField>\n              </div>\n              <MuiListItem></MuiListItem>\n              <Divider component=\"li\" />\n              <li>\n                <Typography display=\"block\" variant=\"caption\">\n                  Words to add (Order matters)\n                </Typography>\n              </li>\n              {pendings.length ? (\n                pendings.map(pending => (\n                  <MuiListItem key={`pending${pending.Query}`}>\n                    <MuiListItemText\n                      primary={\n                        <>\n                          {`${pending.Display} (${pending.Query})`}\n                          {counters[pending.Query] &&\n                            ` ${counters[pending.Query].TotalCount} words`}\n                        </>\n                      }\n                      secondary={\n                        counters[pending.Query] ? (\n                          <>\n                            {`Learned ${counters[pending.Query].LearnedCount}, `}\n                            {`Added ${counters[pending.Query].AddedCount}, `}\n                            {`New ${counters[pending.Query].NewCount}`}\n                          </>\n                        ) : null\n                      }\n                    ></MuiListItemText>\n\n                    <MuiListItemSecondaryAction>\n                      <IconButton\n                        edge=\"end\"\n                        aria-label=\"remove pending query\"\n                        onClick={() =>\n                          this.props.removePendingQuery({\n                            query: pending.Query,\n                          })\n                        }\n                      >\n                        <CloseIcon />\n                      </IconButton>\n                    </MuiListItemSecondaryAction>\n                  </MuiListItem>\n                ))\n              ) : (\n                <MuiListItem>\n                  <MuiListItemText>No words to add</MuiListItemText>\n                </MuiListItem>\n              )}\n            </MuiList>\n            <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              <Button onClick={() => this.props.close()}>Cancel</Button>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={this.onClickConfirm}\n              >\n                Add these words\n              </Button>\n            </div>\n          </Container>\n        </div>\n      </Dialog>\n    )\n  }\n}\n\nconst mapStateToProps = (state: RootStateType) => {\n  console.debug(\"WordAdderContainer state: \", state)\n  const props = {\n    display: state.WordAdder.get(\"Display\") as boolean,\n    status: state.WordAdder.get(\"Status\"),\n    suggestions: state.WordAdder.get(\"Suggestions\"),\n    pendings: state.WordAdder.get(\"Pendings\"),\n    counters: state.WordAdder.get(\"Counters\"),\n    saving: state.GoiSaving.get(\"Saving\"),\n    poiUserId: state.GoiUser.get(\"PoiUserId\") as PoiUser.PoiUserId,\n    savingId: state.GoiSaving.get(\"SavingId\") as GoiSavingId,\n  }\n  console.debug(\"WordAdderContainer props: \", props)\n  return props\n}\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<RootStateType, void, Action>\n) => {\n  return {\n    clearPendingWords: ({\n      poiUserId,\n      savingId,\n    }: {\n      poiUserId: PoiUser.PoiUserId\n      savingId: GoiSavingId\n    }) => dispatch(ClearPendingWordsAction({ poiUserId, savingId })),\n    addPendingQuery: (\n      { display, query }: { display: string; query: string },\n      {\n        poiUserId,\n        savingId,\n      }: { poiUserId: PoiUser.PoiUserId; savingId: GoiSavingId }\n    ) =>\n      dispatch(\n        AddPendingQueryAction({ display, query }, { poiUserId, savingId })\n      ),\n    removePendingQuery: ({ query }: { query: string }) =>\n      dispatch(RemovePendingQueryAction({ query })),\n    addWordsFromQuerys: (\n      { querys }: { querys: string[] },\n      {\n        poiUserId,\n        savingId,\n      }: { poiUserId: PoiUser.PoiUserId; savingId: GoiSavingId }\n    ) =>\n      dispatch(AddWordsFromQuerysAction({ querys }, { poiUserId, savingId })),\n    close: () => dispatch(DisplayWordAdderAction({ display: false })),\n    showNextWord: (poiUserId: PoiUser.PoiUserId, savingId: GoiSavingId) =>\n      dispatch(ShowNextWordAction({ poiUserId, savingId })),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WordAdder)\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { ShowWordAdderAction } from \"../actions/WordAdderActions\"\nimport * as PoiUser from \"../utils/PoiUser\"\nimport { GoiSavingId } from \"../types/GoiTypes\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { RootStateType } from \"../states/RootState\"\nimport { Action } from \"redux\"\nimport { Button } from \"@material-ui/core\"\nimport { SpeedDial, SpeedDialAction } from \"@material-ui/lab\"\nimport { navigate } from \"gatsby\"\nimport AddIcon from \"@material-ui/icons/AddOutlined\"\nimport SmsIcon from \"@material-ui/icons/SmsOutlined\"\nimport ShareIcon from \"@material-ui/icons/ShareOutlined\"\nimport MenuIcon from \"@material-ui/icons/MenuOutlined\"\nimport HighlightIcon from \"@material-ui/icons/HighlightOutlined\"\nimport PersonIcon from \"@material-ui/icons/PersonOutlined\"\nimport SyncIcon from \"@material-ui/icons/SyncOutlined\"\nimport FlagIcon from \"@material-ui/icons/FlagOutlined\"\nimport SearchIcon from \"@material-ui/icons/SearchOutlined\"\n\ntype CommandsBarPropsType = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>\ninterface CommandsBarStateType {\n  menuOpened: boolean\n}\n\nexport class CommandsBar extends React.Component<\n  CommandsBarPropsType,\n  CommandsBarStateType\n> {\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      menuOpened: false,\n    }\n  }\n  navigate(to: string) {\n    navigate(to, { replace: true })\n  }\n  openMenu = () => {\n    this.setState({ menuOpened: true })\n  }\n  closeMenu = () => {\n    this.setState({ menuOpened: false })\n  }\n  toggleMenu = () => {\n    this.setState({ menuOpened: !this.state.menuOpened })\n  }\n  render() {\n    const { poiUserId, savingId } = this.props\n    return (\n      <div\n        className=\"commands-bar\"\n        style={{\n          position: \"absolute\",\n          bottom: \"20px\",\n          right: \"20px\",\n          display: \"inline-flex\",\n          alignItems: \"flex-end\",\n        }}\n      >\n        <div\n          style={{\n            display: \"inline-flex\",\n            height: \"40px\",\n            margin: \"8px\",\n          }}\n        >\n          <Button size=\"small\">\n            [WIP] SwotUp\n            <FlagIcon fontSize=\"small\" />\n          </Button>\n          <Button size=\"small\">\n            [WIP] Sync\n            <SyncIcon fontSize=\"small\" />\n          </Button>\n          <Button\n            size=\"small\"\n            onClick={() => this.props.showWordAdder({ poiUserId, savingId })}\n          >\n            Words\n            <AddIcon fontSize=\"small\" />\n          </Button>\n        </div>\n        <SpeedDial\n          ariaLabel=\"menu\"\n          open={this.state.menuOpened}\n          icon={<MenuIcon fontSize=\"small\" />}\n          onBlur={this.closeMenu}\n          onClick={this.toggleMenu}\n          onClose={this.closeMenu}\n          onFocus={this.openMenu}\n          onMouseEnter={this.openMenu}\n          onMouseLeave={this.closeMenu}\n          ButtonProps={{\n            color: \"default\",\n            size: \"small\",\n            style: { background: \"white\", margin: \"8px\" },\n          }}\n        >\n          <SpeedDialAction\n            key=\"share\"\n            icon={<ShareIcon fontSize=\"small\" />}\n            tooltipTitle=\"[WIP] Share\"\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"tegami\"\n            icon={<SmsIcon fontSize=\"small\" />}\n            tooltipTitle=\"手紙\"\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              this.navigate(\"/tegami/\")\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"mamechishiki\"\n            icon={<HighlightIcon />}\n            tooltipTitle=\"豆知識\"\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              this.navigate(\"/mamechishiki/\")\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"searchwords\"\n            icon={<SearchIcon />}\n            tooltipTitle=\"[WIP] Search Words\"\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"addwords\"\n            icon={<AddIcon />}\n            tooltipTitle=\"Add Words\"\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              this.props.showWordAdder({ poiUserId, savingId })\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"profile\"\n            icon={<PersonIcon />}\n            tooltipTitle=\"[WIP] Profile, statics and settings\"\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              this.navigate(\"/\")\n            }}\n          ></SpeedDialAction>\n        </SpeedDial>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: RootStateType) => {\n  console.debug(\"CommandsBar state: \", state)\n  const props = {\n    poiUserId: state.GoiUser.get(\"PoiUserId\") as PoiUser.PoiUserId,\n    savingId: state.GoiSaving.get(\"SavingId\") as GoiSavingId,\n  }\n  console.debug(\"CommandsBar props: \", props)\n  return props\n}\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<RootStateType, void, Action>\n) => {\n  return {\n    showWordAdder: ({\n      poiUserId,\n      savingId,\n    }: {\n      poiUserId: PoiUser.PoiUserId\n      savingId: GoiSavingId\n    }) => dispatch(ShowWordAdderAction({ poiUserId, savingId })),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CommandsBar)\n","import React from \"react\"\nimport NavBar from \"../components/NavBar\"\nimport GoiTester from \"../containers/GoiTester\"\nimport WordAdder from \"../containers/WordAdder\"\nimport CommandsBar from \"../containers/CommandsBar\"\nimport Container from \"@material-ui/core/Container\"\nimport { Hidden } from \"@material-ui/core\"\n\nexport default (props: any) => (\n  // <div style={{ width: \"100%\", overflow: \"hidden\", position: \"fixed\" }}>\n  <div\n    style={{\n      width: \"100%\",\n      height: \"100%\",\n      overflow: \"hidden\",\n      position: \"fixed\",\n    }}\n  >\n    <Hidden xsDown>\n      <NavBar />\n    </Hidden>\n    <CommandsBar />\n    <main>\n      <WordAdder />\n      <Container>\n        <GoiTester />\n      </Container>\n    </main>\n    <footer style={{ position: \"absolute\", bottom: 0 }}>\n      <Container>\n        <ruby>\n          私<rt>わたし</rt>\n        </ruby>\n        たちの\n        <ruby>\n          夢<rt>ゆめ</rt>\n        </ruby>\n        がここから\n        <ruby>\n          始<rt>はじ</rt>\n        </ruby>\n        まりましょう ٩(ˊᗜˋ*)و\n      </Container>\n    </footer>\n  </div>\n)\n"],"sourceRoot":""}