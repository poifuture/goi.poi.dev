{"version":3,"sources":["webpack:///./src/components/WordCards/JaWordCard.tsx","webpack:///./src/containers/GoiTester.tsx","webpack:///./src/containers/WordAdder.tsx","webpack:///./src/containers/CommandsBar.tsx","webpack:///./src/pages/index.tsx"],"names":["TinyTag","render","react_default","a","createElement","Box","Object","assign","display","border","borderRadius","this","props","children","React","Component","JaWordCard","_React$Component2","apply","arguments","_inheritsLoose","prototype","statusColor","status","word","className","style","fontSize","dangerouslySetInnerHTML","__html","common","color","List","entries","translation","map","_ref","i18nTranslation","_ref2","translationLanguage","translationText","keys","length","hint","Fragment","JaWordCard_TinyTag","_ref3","hintLanguage","hintText","sentences","sentence","sentenceId","key","zh","defaultProps","GoiTester","_React$Component","_this","call","JudgeInputElement","requestJudge","_asyncToGenerator","regenerator_default","mark","_callee","_temp","skip","_this$props","poiUserId","savingId","judgeResult","wrap","_context","prev","next","currentWord","toJS","judgeAnswer","answer","state","testerInput","sent","setState","requestNext","stop","_x","_this$props2","currentWordKey","learnedCandidates","prioritiedCandidates","pendingCandidates","showNextWord","_proto","componentDidMount","_componentDidMount","_callee2","_context2","console","debug","lazyInitUser","lazyInitSaving","_this2","wordCardStatus","marginTop","Helmet_default","TextField","label","variant","value","flexGrow","onChange","e","target","InputProps","placeholder","endAdornment","InputAdornment","position","IconButton","aria-label","edge","onClick","KeyboardReturnOutlined_default","onKeyDown","Button","size","RedoOutlined_default","ForwardOutlined_default","WordCards_JaWordCard","MoreHorizOutlined_default","connect","GoiUser","get","GoiSaving","saving","tester","dispatch","LazyInitUserAction","LazyInitSavingAction","_ref4","_temp2","_ref5","ShowNextWordAction","_ref6","_ref7","VerifyAnswerAction","WordAdder","getSuggestionQuerys","suggestions","suggestion","Query","getPendingQuerys","pendings","pending","onClickConfirm","WordAdder_asyncToGenerator","addWordsFromQuerys","querys","close","query","removePendingQuery","customQuery","counters","Dialog","open","marginBottom","Container","Typography","gutterBottom","dense","Divider","component","ListItem","LearnedCount","margin","marginRight","flex","readOnly","PrioritiedCount","PendingCount","clearPendingWords","DeleteOutlined_default","ListItemText","primary","Display","TotalCount","secondary","AddedCount","NewCount","ListItemSecondaryAction","addPendingQuery","AddOutlined_default","trim","SearchOutlined_default","CloseOutlined_default","justifyContent","ClearPendingWordsAction","AddPendingQueryAction","RemovePendingQueryAction","AddWordsFromQuerysAction","DisplayWordAdderAction","CommandsBar","openMenu","menuOpened","closeMenu","toggleMenu","navigate","to","replace","bottom","right","alignItems","height","FlagOutlined_default","SyncOutlined_default","showWordAdder","SpeedDial","ariaLabel","icon","MenuOutlined_default","onBlur","onClose","onFocus","onMouseEnter","onMouseLeave","ButtonProps","background","SpeedDialAction","ShareOutlined_default","tooltipTitle","tooltipOpen","SmsOutlined_default","HighlightOutlined_default","PersonOutlined_default","ShowWordAdderAction","__webpack_exports__","width","overflow","Hidden","xsDown","NavBar","containers_CommandsBar","containers_WordAdder","containers_GoiTester"],"mappings":"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","file":"component---src-pages-index-tsx-3a07332bdd026fe7028c.js","sourcesContent":["import React from \"react\"\nimport { GoiJaWordType } from \"../../types/GoiDictionaryTypes\"\nimport { List as MuiList, Box } from \"@material-ui/core\"\n\nexport type WordCardPropsType = {\n  word: GoiJaWordType\n  display: \"simple\" | \"detailed\" | \"test-common\" | \"test-translation\"\n  status:\n    | \"input\"\n    | \"first\"\n    | \"perfect\"\n    | \"good\"\n    | \"warning\"\n    | \"failed\"\n    | \"peek\"\n    | \"review\"\n}\nclass TinyTag extends React.Component {\n  render() {\n    return (\n      <Box display=\"inline-flex\" border={1} borderRadius={3} {...this.props}>\n        {this.props.children}\n      </Box>\n    )\n  }\n}\n\nexport class JaWordCard extends React.Component<WordCardPropsType> {\n  static defaultProps = {\n    word: {\n      common: \"Common Placeholder\",\n      translation: \"Translation Placeholder\",\n    },\n    display: \"detailed\",\n    status: \"view\",\n  }\n  render() {\n    const statusColor =\n      this.props.status === \"input\"\n        ? \"gray\"\n        : this.props.status === \"first\"\n        ? \"blue\"\n        : this.props.status === \"perfect\"\n        ? \"darkgreen\"\n        : this.props.status === \"good\"\n        ? \"lightgreen\"\n        : this.props.status === \"warning\"\n        ? \"yellow\"\n        : this.props.status === \"failed\"\n        ? \"red\"\n        : this.props.status === \"peek\"\n        ? \"blue\"\n        : this.props.status === \"review\"\n        ? \"black\"\n        : \"black\"\n    const { word } = this.props\n    return (\n      <div className=\"word-card\">\n        <div className=\"word-card-common\" style={{ fontSize: \"10vmin\" }}>\n          {this.props.display !== \"test-common\" && (\n            <span dangerouslySetInnerHTML={{ __html: word.common }}></span>\n          )}\n        </div>\n        <div className=\"word-card-translation\" style={{ color: statusColor }}>\n          <MuiList>\n            {Object.entries(word.translation).map(\n              ([dictionaryName, i18nTranslation]) => (\n                <li>\n                  {Object.entries(i18nTranslation.translation).map(\n                    ([translationLanguage, translationText]) => {\n                      return Object.keys(i18nTranslation.translation).length > 1\n                        ? `${translationLanguage}:${translationText}; `\n                        : `${translationText}`\n                    }\n                  )}\n                  <br />\n                  {i18nTranslation.hint && (\n                    <>\n                      <TinyTag>Hint</TinyTag>\n                      {Object.entries(i18nTranslation.hint).map(\n                        ([hintLanguage, hintText]) => {\n                          return Object.keys(i18nTranslation.hint!).length > 1\n                            ? `${hintLanguage}:${hintText}; `\n                            : `${hintText}`\n                        }\n                      )}\n                    </>\n                  )}\n                </li>\n              )\n            )}\n          </MuiList>\n        </div>\n        <div className=\"word-card-sentences\">\n          {(word.sentences || []).map((sentence, sentenceId) => (\n            <div key={sentenceId}>\n              <p>\n                <span\n                  dangerouslySetInnerHTML={{ __html: sentence.sentence }}\n                ></span>\n              </p>\n              <p>\n                <span>{(sentence.translation || {}).zh}</span>\n              </p>\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default JaWordCard\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport JaWordCard from \"../components/WordCards/JaWordCard\"\nimport * as PoiUser from \"../utils/PoiUser\"\nimport { LazyInitUserAction } from \"../actions/GoiUserActions\"\nimport { LazyInitSavingAction } from \"../actions/GoiSavingActions\"\nimport {\n  VerifyAnswerAction,\n  ShowNextWordAction,\n} from \"../actions/GoiTesterActions\"\nimport { GoiSavingId, GoiJudgeResult } from \"../types/GoiTypes\"\nimport Helmet from \"react-helmet\"\nimport { GoiWordType, GoiJaWordType } from \"../types/GoiDictionaryTypes\"\nimport { RootStateType } from \"../states/RootState\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { Action } from \"redux\"\nimport Heap from \"../algorithm/Heap\"\nimport { GoiWordRecordDataType } from \"../models/GoiSaving\"\nimport {\n  TextField,\n  InputAdornment,\n  IconButton,\n  Button,\n} from \"@material-ui/core\"\nimport SpellcheckIcon from \"@material-ui/icons/SpellcheckOutlined\"\nimport KeyboardReturnIcon from \"@material-ui/icons/KeyboardReturnOutlined\"\nimport RedoIcon from \"@material-ui/icons/RedoOutlined\"\nimport ForwardIcon from \"@material-ui/icons/ForwardOutlined\"\nimport MoreVertIcon from \"@material-ui/icons/MoreVertOutlined\"\nimport MoreHorizIcon from \"@material-ui/icons/MoreHorizOutlined\"\n\ntype GoiTesterPropsType = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>\ninterface GoiTesterStateType {\n  testerInput: string\n}\nexport class GoiTester extends React.Component<\n  GoiTesterPropsType,\n  GoiTesterStateType\n> {\n  constructor(props: GoiTesterPropsType) {\n    super(props)\n    this.state = {\n      testerInput: \"\",\n    }\n  }\n  JudgeInputElement: HTMLInputElement | null = null\n  async componentDidMount() {\n    console.debug(\"Lasy init user\")\n    const poiUserId = (await this.props.lazyInitUser()) as PoiUser.PoiUserId\n    console.debug(\"Lasy init saving\")\n    const savingId = await this.props.lazyInitSaving({ poiUserId })\n    await this.props.showNextWord({ poiUserId, savingId })\n  }\n  requestJudge = async ({ skip }: { skip?: boolean } = {}) => {\n    const { poiUserId, savingId } = this.props\n    const word: GoiJaWordType = this.props.currentWord.toJS()\n    const judgeResult = await this.props.judgeAnswer(\n      {\n        answer: this.state.testerInput,\n        word,\n        skip,\n      },\n      {\n        poiUserId,\n        savingId,\n      }\n    )\n    this.setState({ testerInput: \"\" })\n    if (\n      judgeResult === \"Correct\" ||\n      judgeResult === \"Accepted\" ||\n      judgeResult === \"Skipped\"\n    ) {\n      this.requestNext()\n    }\n  }\n  requestNext = () => {\n    const {\n      poiUserId,\n      savingId,\n      currentWordKey,\n      learnedCandidates,\n      prioritiedCandidates,\n      pendingCandidates,\n    } = this.props\n    this.props.showNextWord(\n      { poiUserId, savingId },\n      {\n        currentWordKey,\n        learnedCandidates,\n        prioritiedCandidates,\n        pendingCandidates,\n      }\n    )\n    this.setState({ testerInput: \"\" })\n  }\n  render() {\n    const word: GoiJaWordType = this.props.currentWord.toJS()\n    const wordCardStatus =\n      this.props.judgeResult === \"Pending\"\n        ? \"input\"\n        : this.props.judgeResult === \"Correct\"\n        ? \"perfect\"\n        : this.props.judgeResult === \"Accepted\"\n        ? \"good\"\n        : this.props.judgeResult === \"Rejected\"\n        ? \"warning\"\n        : this.props.judgeResult === \"Wrong\"\n        ? \"failed\"\n        : \"review\"\n    return (\n      <div className=\"goi-tester\" style={{ marginTop: \"20px\" }}>\n        <Helmet>\n          <title>\n            {this.props.judgeResult === \"Pending\"\n              ? \"PoiGoi\"\n              : `PoiGoi - ${word.key}`}\n          </title>\n        </Helmet>\n        <div style={{ display: \"flex\" }}>\n          <TextField\n            label=\"Justify your answer\"\n            variant=\"outlined\"\n            value={this.state.testerInput}\n            style={{ flexGrow: 1 }}\n            onChange={e => {\n              this.setState({ testerInput: e.target.value })\n            }}\n            InputProps={{\n              placeholder:\n                this.props.judgeResult === \"Rejected\" ||\n                this.props.judgeResult === \"Wrong\"\n                  ? \"Type correct answer to continue\"\n                  : \"Type your answer here\",\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"Request judge\"\n                    edge=\"end\"\n                    onClick={() => this.requestJudge()}\n                  >\n                    <KeyboardReturnIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n              onKeyDown: e => {\n                if (e.key === \"Enter\") {\n                  this.requestJudge()\n                }\n              },\n            }}\n          ></TextField>\n          {this.props.judgeResult === \"Pending\" ? (\n            <Button\n              size=\"small\"\n              aria-label=\"Skip current word\"\n              onClick={() => this.requestJudge({ skip: true })}\n            >\n              Skip\n              <RedoIcon fontSize=\"small\" />\n            </Button>\n          ) : (\n            <Button\n              aria-label=\"Show next word\"\n              onClick={() => this.requestNext()}\n            >\n              Skip\n              <ForwardIcon fontSize=\"small\" />\n            </Button>\n          )}\n        </div>\n        <JaWordCard word={word} display=\"detailed\" status={wordCardStatus} />\n        <IconButton aria-label=\"detail\">\n          <MoreHorizIcon />\n        </IconButton>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: RootStateType) => {\n  console.debug(\"GoiTester state: \", state)\n  const props = {\n    poiUserId: state.GoiUser.get(\"PoiUserId\") as PoiUser.PoiUserId,\n    savingId: state.GoiSaving.get(\"SavingId\") as GoiSavingId,\n    currentWord: state.GoiTester.get(\"CurrentWord\"),\n    currentWordKey: state.GoiTester.get(\"CurrentWord\").get(\"key\") as string,\n    judgeResult: state.GoiTester.get(\"JudgeResult\") as GoiJudgeResult,\n    saving: state.GoiSaving.get(\"Saving\"),\n    tester: state.GoiTester,\n    learnedCandidates: state.GoiTester.get(\"LearnedCandidates\"),\n    prioritiedCandidates: state.GoiTester.get(\"PrioritiedCandidates\"),\n    pendingCandidates: state.GoiTester.get(\"PendingCandidates\"),\n  }\n  console.debug(\"GoiTester props: \", props)\n  return props\n}\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<RootStateType, void, Action>\n) => {\n  return {\n    lazyInitUser: () => dispatch(LazyInitUserAction()),\n    lazyInitSaving: ({ poiUserId }: { poiUserId: PoiUser.PoiUserId }) =>\n      dispatch(LazyInitSavingAction({ poiUserId })),\n    showNextWord: (\n      {\n        poiUserId,\n        savingId,\n      }: { poiUserId: PoiUser.PoiUserId; savingId: GoiSavingId },\n      {\n        currentWordKey,\n        learnedCandidates,\n        prioritiedCandidates,\n        pendingCandidates,\n      }: {\n        currentWordKey?: string\n        learnedCandidates?: Heap<GoiWordRecordDataType>\n        prioritiedCandidates?: Heap<GoiWordRecordDataType>\n        pendingCandidates?: Heap<GoiWordRecordDataType>\n      } = {}\n    ) =>\n      dispatch(\n        ShowNextWordAction(\n          { poiUserId, savingId },\n          {\n            currentWordKey,\n            learnedCandidates,\n            prioritiedCandidates,\n            pendingCandidates,\n          }\n        )\n      ),\n    judgeAnswer: (\n      {\n        answer,\n        word,\n        skip,\n      }: {\n        answer: string\n        word: GoiWordType\n        skip?: boolean\n      },\n      {\n        poiUserId,\n        savingId,\n      }: {\n        poiUserId: PoiUser.PoiUserId\n        savingId: GoiSavingId\n      }\n    ) =>\n      dispatch(\n        VerifyAnswerAction({ answer, word, skip }, { poiUserId, savingId })\n      ),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GoiTester)\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport {\n  TextField,\n  Container,\n  Dialog,\n  InputAdornment,\n  IconButton,\n  Typography,\n  Divider,\n  List as MuiList,\n  ListItem as MuiListItem,\n  ListItemText as MuiListItemText,\n  ListItemSecondaryAction as MuiListItemSecondaryAction,\n  Button,\n} from \"@material-ui/core\"\nimport SearchIcon from \"@material-ui/icons/SearchOutlined\"\nimport * as PoiUser from \"../utils/PoiUser\"\nimport {\n  DisplayWordAdderAction,\n  AddPendingQueryAction,\n  RemovePendingQueryAction,\n  AddWordsFromQuerysAction,\n  ClearPendingWordsAction,\n} from \"../actions/WordAdderActions\"\nimport {\n  WordAdderSuggestionQueryType,\n  WordAdderQueryCountersType,\n  WordAdderPendingQueryType,\n} from \"../states/WordAdderState\"\nimport { GoiSavingId } from \"../types/GoiTypes\"\nimport { RootStateType } from \"../states/RootState\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { Action } from \"redux\"\nimport { ShowNextWordAction } from \"../actions/GoiTesterActions\"\nimport DeleteIcon from \"@material-ui/icons/DeleteOutlined\"\nimport AddIcon from \"@material-ui/icons/AddOutlined\"\nimport CloseIcon from \"@material-ui/icons/CloseOutlined\"\n\ntype WordAdderPropsType = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>\ninterface WordAdderStateType {\n  customQuery: string\n}\nexport class WordAdder extends React.Component<\n  WordAdderPropsType,\n  WordAdderStateType\n> {\n  constructor(props: WordAdderPropsType) {\n    super(props)\n    this.state = { customQuery: \"\" }\n  }\n  getSuggestionQuerys = (): string[] => {\n    const suggestions: WordAdderSuggestionQueryType[] = this.props.suggestions.toJS()\n    return suggestions.map(suggestion => suggestion.Query)\n  }\n  getPendingQuerys = (): string[] => {\n    const pendings: WordAdderPendingQueryType[] = this.props.pendings.toJS()\n    return pendings.map(pending => pending.Query)\n  }\n  onClickConfirm = async () => {\n    const poiUserId = this.props.poiUserId\n    const savingId = this.props.savingId\n    await this.props.addWordsFromQuerys(\n      { querys: this.getPendingQuerys() },\n      { poiUserId, savingId }\n    )\n    this.props.close()\n    this.getPendingQuerys().map(query =>\n      this.props.removePendingQuery({ query })\n    )\n    await this.props.showNextWord(poiUserId, savingId)\n  }\n  render() {\n    if (!this.props.display) {\n      return <div className=\"word-adder\"></div>\n    }\n    const poiUserId = this.props.poiUserId\n    const savingId = this.props.savingId\n    const status = this.props.status.toJS()\n    const suggestions: WordAdderSuggestionQueryType[] = this.props.suggestions.toJS()\n    const pendings: WordAdderPendingQueryType[] = this.props.pendings.toJS()\n    const counters: WordAdderQueryCountersType = this.props.counters.toJS()\n    return (\n      <Dialog className=\"word-adder\" open={this.props.display}>\n        <div style={{ marginTop: \"20px\", marginBottom: \"20px\" }}>\n          <Container>\n            <Typography gutterBottom variant=\"h4\">\n              Add words\n            </Typography>\n            <MuiList dense={true}>\n              <Divider component=\"li\" />\n              <li>\n                <Typography display=\"block\" variant=\"caption\">\n                  Current Study Status\n                </Typography>\n              </li>\n              <MuiListItem>\n                <TextField\n                  label=\"Learned\"\n                  value={status.LearnedCount}\n                  margin=\"none\"\n                  style={{ marginRight: \"10px\", flex: 1 }}\n                  InputProps={{ readOnly: true }}\n                ></TextField>\n                <TextField\n                  label=\"Prioritied\"\n                  value={status.PrioritiedCount}\n                  margin=\"none\"\n                  style={{ marginRight: \"10px\", flex: 1 }}\n                  InputProps={{ readOnly: true }}\n                ></TextField>\n                <TextField\n                  label=\"Pending\"\n                  value={status.PendingCount}\n                  margin=\"none\"\n                  style={{ marginRight: \"10px\", flex: 1 }}\n                  InputProps={{\n                    readOnly: true,\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"Clear pending words\"\n                          onClick={() =>\n                            this.props.clearPendingWords({\n                              poiUserId,\n                              savingId,\n                            })\n                          }\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                ></TextField>\n              </MuiListItem>\n              <Divider component=\"li\" />\n              <li>\n                <Typography display=\"block\" variant=\"caption\">\n                  Suggested Word Lists\n                </Typography>\n              </li>\n              {suggestions.map(suggestion => (\n                <MuiListItem key={`suggestion${suggestion.Query}`}>\n                  <MuiListItemText\n                    primary={`${suggestion.Display} (${suggestion.Query}) ${counters[suggestion.Query].TotalCount} words`}\n                    secondary={\n                      counters[suggestion.Query] ? (\n                        <>\n                          <span>{`Learned ${counters[suggestion.Query].LearnedCount}, `}</span>\n                          <span>{`Added ${counters[suggestion.Query].AddedCount}, `}</span>\n                          <span>{`New ${counters[suggestion.Query].NewCount}`}</span>\n                        </>\n                      ) : null\n                    }\n                  ></MuiListItemText>\n                  <MuiListItemSecondaryAction>\n                    <IconButton\n                      edge=\"end\"\n                      aria-label=\"Add suggestion query\"\n                      onClick={() =>\n                        this.props.addPendingQuery(\n                          {\n                            display: suggestion.Display,\n                            query: suggestion.Query,\n                          },\n                          { poiUserId, savingId }\n                        )\n                      }\n                    >\n                      <AddIcon />\n                    </IconButton>\n                  </MuiListItemSecondaryAction>\n                </MuiListItem>\n              ))}\n              <div style={{ display: \"flex\" }}>\n                <TextField\n                  label=\"Custom Query\"\n                  variant=\"outlined\"\n                  value={this.state.customQuery}\n                  style={{ flexGrow: 1 }}\n                  onChange={e => {\n                    this.setState({ customQuery: e.target.value })\n                  }}\n                  InputProps={{\n                    placeholder: \"(e.g. JLPT-N5) Accept RegExp\",\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"add query\"\n                          edge=\"end\"\n                          onClick={() =>\n                            this.props.addPendingQuery(\n                              {\n                                display: \"Custom\",\n                                query: this.state.customQuery.trim(),\n                              },\n                              { poiUserId, savingId }\n                            )\n                          }\n                        >\n                          <SearchIcon />\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                ></TextField>\n              </div>\n              <MuiListItem></MuiListItem>\n              <Divider component=\"li\" />\n              <li>\n                <Typography display=\"block\" variant=\"caption\">\n                  Words to add (Order matters)\n                </Typography>\n              </li>\n              {pendings.length ? (\n                pendings.map(pending => (\n                  <MuiListItem key={`pending${pending.Query}`}>\n                    <MuiListItemText\n                      primary={\n                        <>\n                          {`${pending.Display} (${pending.Query})`}\n                          {counters[pending.Query] &&\n                            ` ${counters[pending.Query].TotalCount} words`}\n                        </>\n                      }\n                      secondary={\n                        counters[pending.Query] ? (\n                          <>\n                            {`Learned ${counters[pending.Query].LearnedCount}, `}\n                            {`Added ${counters[pending.Query].AddedCount}, `}\n                            {`New ${counters[pending.Query].NewCount}`}\n                          </>\n                        ) : null\n                      }\n                    ></MuiListItemText>\n\n                    <MuiListItemSecondaryAction>\n                      <IconButton\n                        edge=\"end\"\n                        aria-label=\"remove pending query\"\n                        onClick={() =>\n                          this.props.removePendingQuery({\n                            query: pending.Query,\n                          })\n                        }\n                      >\n                        <CloseIcon />\n                      </IconButton>\n                    </MuiListItemSecondaryAction>\n                  </MuiListItem>\n                ))\n              ) : (\n                <MuiListItem>\n                  <MuiListItemText>No words to add</MuiListItemText>\n                </MuiListItem>\n              )}\n            </MuiList>\n            <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n              <Button onClick={() => this.props.close()}>Cancel</Button>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={this.onClickConfirm}\n              >\n                Add these words\n              </Button>\n            </div>\n          </Container>\n        </div>\n      </Dialog>\n    )\n  }\n}\n\nconst mapStateToProps = (state: RootStateType) => {\n  console.debug(\"WordAdderContainer state: \", state)\n  const props = {\n    display: state.WordAdder.get(\"Display\") as boolean,\n    status: state.WordAdder.get(\"Status\"),\n    suggestions: state.WordAdder.get(\"Suggestions\"),\n    pendings: state.WordAdder.get(\"Pendings\"),\n    counters: state.WordAdder.get(\"Counters\"),\n    saving: state.GoiSaving.get(\"Saving\"),\n    poiUserId: state.GoiUser.get(\"PoiUserId\") as PoiUser.PoiUserId,\n    savingId: state.GoiSaving.get(\"SavingId\") as GoiSavingId,\n  }\n  console.debug(\"WordAdderContainer props: \", props)\n  return props\n}\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<RootStateType, void, Action>\n) => {\n  return {\n    clearPendingWords: ({\n      poiUserId,\n      savingId,\n    }: {\n      poiUserId: PoiUser.PoiUserId\n      savingId: GoiSavingId\n    }) => dispatch(ClearPendingWordsAction({ poiUserId, savingId })),\n    addPendingQuery: (\n      { display, query }: { display: string; query: string },\n      {\n        poiUserId,\n        savingId,\n      }: { poiUserId: PoiUser.PoiUserId; savingId: GoiSavingId }\n    ) =>\n      dispatch(\n        AddPendingQueryAction({ display, query }, { poiUserId, savingId })\n      ),\n    removePendingQuery: ({ query }: { query: string }) =>\n      dispatch(RemovePendingQueryAction({ query })),\n    addWordsFromQuerys: (\n      { querys }: { querys: string[] },\n      {\n        poiUserId,\n        savingId,\n      }: { poiUserId: PoiUser.PoiUserId; savingId: GoiSavingId }\n    ) =>\n      dispatch(AddWordsFromQuerysAction({ querys }, { poiUserId, savingId })),\n    close: () => dispatch(DisplayWordAdderAction({ display: false })),\n    showNextWord: (poiUserId: PoiUser.PoiUserId, savingId: GoiSavingId) =>\n      dispatch(ShowNextWordAction({ poiUserId, savingId })),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WordAdder)\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { ShowWordAdderAction } from \"../actions/WordAdderActions\"\nimport * as PoiUser from \"../utils/PoiUser\"\nimport { GoiSavingId } from \"../types/GoiTypes\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { RootStateType } from \"../states/RootState\"\nimport { Action } from \"redux\"\nimport { Button } from \"@material-ui/core\"\nimport { SpeedDial, SpeedDialAction } from \"@material-ui/lab\"\nimport { navigate } from \"gatsby\"\nimport AddIcon from \"@material-ui/icons/AddOutlined\"\nimport SmsIcon from \"@material-ui/icons/SmsOutlined\"\nimport ShareIcon from \"@material-ui/icons/ShareOutlined\"\nimport MenuIcon from \"@material-ui/icons/MenuOutlined\"\nimport HighlightIcon from \"@material-ui/icons/HighlightOutlined\"\nimport PersonIcon from \"@material-ui/icons/PersonOutlined\"\nimport SyncIcon from \"@material-ui/icons/SyncOutlined\"\nimport FlagIcon from \"@material-ui/icons/FlagOutlined\"\nimport SearchIcon from \"@material-ui/icons/SearchOutlined\"\n\ntype CommandsBarPropsType = ReturnType<typeof mapStateToProps> &\n  ReturnType<typeof mapDispatchToProps>\ninterface CommandsBarStateType {\n  menuOpened: boolean\n}\n\nexport class CommandsBar extends React.Component<\n  CommandsBarPropsType,\n  CommandsBarStateType\n> {\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      menuOpened: false,\n    }\n  }\n  navigate(to: string) {\n    navigate(to, { replace: true })\n  }\n  openMenu = () => {\n    this.setState({ menuOpened: true })\n  }\n  closeMenu = () => {\n    this.setState({ menuOpened: false })\n  }\n  toggleMenu = () => {\n    this.setState({ menuOpened: !this.state.menuOpened })\n  }\n  render() {\n    const { poiUserId, savingId } = this.props\n    return (\n      <div\n        className=\"commands-bar\"\n        style={{\n          position: \"absolute\",\n          bottom: \"20px\",\n          right: \"20px\",\n          display: \"inline-flex\",\n          alignItems: \"flex-end\",\n        }}\n      >\n        <div\n          style={{\n            display: \"inline-flex\",\n            height: \"40px\",\n            margin: \"8px\",\n          }}\n        >\n          <Button size=\"small\">\n            [WIP] SwotUp\n            <FlagIcon fontSize=\"small\" />\n          </Button>\n          <Button size=\"small\">\n            [WIP] Sync\n            <SyncIcon fontSize=\"small\" />\n          </Button>\n          <Button\n            size=\"small\"\n            onClick={() => this.props.showWordAdder({ poiUserId, savingId })}\n          >\n            Words\n            <AddIcon fontSize=\"small\" />\n          </Button>\n        </div>\n        <SpeedDial\n          ariaLabel=\"menu\"\n          open={this.state.menuOpened}\n          icon={<MenuIcon fontSize=\"small\" />}\n          onBlur={this.closeMenu}\n          onClick={this.toggleMenu}\n          onClose={this.closeMenu}\n          onFocus={this.openMenu}\n          onMouseEnter={this.openMenu}\n          onMouseLeave={this.closeMenu}\n          ButtonProps={{\n            color: \"default\",\n            size: \"small\",\n            style: { background: \"white\", margin: \"8px\" },\n          }}\n        >\n          <SpeedDialAction\n            key=\"share\"\n            icon={<ShareIcon fontSize=\"small\" />}\n            tooltipTitle=\"[WIP] Share\"\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"tegami\"\n            icon={<SmsIcon fontSize=\"small\" />}\n            tooltipTitle=\"手紙\"\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              this.navigate(\"/tegami/\")\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"mamechishiki\"\n            icon={<HighlightIcon />}\n            tooltipTitle=\"豆知識\"\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              this.navigate(\"/mamechishiki/\")\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"searchwords\"\n            icon={<SearchIcon />}\n            tooltipTitle=\"[WIP] Search Words\"\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"addwords\"\n            icon={<AddIcon />}\n            tooltipTitle=\"Add Words\"\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              this.props.showWordAdder({ poiUserId, savingId })\n            }}\n          ></SpeedDialAction>\n          <SpeedDialAction\n            key=\"profile\"\n            icon={<PersonIcon />}\n            tooltipTitle=\"[WIP] Profile and settings\"\n            tooltipOpen\n            onClick={() => {\n              this.closeMenu()\n              this.navigate(\"/\")\n            }}\n          ></SpeedDialAction>\n        </SpeedDial>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: RootStateType) => {\n  console.debug(\"CommandsBar state: \", state)\n  const props = {\n    poiUserId: state.GoiUser.get(\"PoiUserId\") as PoiUser.PoiUserId,\n    savingId: state.GoiSaving.get(\"SavingId\") as GoiSavingId,\n  }\n  console.debug(\"CommandsBar props: \", props)\n  return props\n}\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<RootStateType, void, Action>\n) => {\n  return {\n    showWordAdder: ({\n      poiUserId,\n      savingId,\n    }: {\n      poiUserId: PoiUser.PoiUserId\n      savingId: GoiSavingId\n    }) => dispatch(ShowWordAdderAction({ poiUserId, savingId })),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CommandsBar)\n","import React from \"react\"\nimport NavBar from \"../components/NavBar\"\nimport GoiTester from \"../containers/GoiTester\"\nimport WordAdder from \"../containers/WordAdder\"\nimport CommandsBar from \"../containers/CommandsBar\"\nimport Container from \"@material-ui/core/Container\"\nimport { Hidden } from \"@material-ui/core\"\n\nexport default (props: any) => (\n  // <div style={{ width: \"100%\", overflow: \"hidden\", position: \"fixed\" }}>\n  <div\n    style={{\n      width: \"100%\",\n      height: \"100%\",\n      overflow: \"hidden\",\n      position: \"fixed\",\n    }}\n  >\n    <Hidden xsDown>\n      <NavBar />\n    </Hidden>\n    <CommandsBar />\n    <main>\n      <Container>\n        <WordAdder />\n        <GoiTester />\n      </Container>\n    </main>\n    <footer>\n      <Container>\n        <ruby>\n          私<rt>わたし</rt>\n        </ruby>\n        たちの\n        <ruby>\n          夢<rt>ゆめ</rt>\n        </ruby>\n        がここから\n        <ruby>\n          始<rt>はじ</rt>\n        </ruby>\n        まります ٩(ˊᗜˋ*)و\n      </Container>\n    </footer>\n  </div>\n)\n"],"sourceRoot":""}