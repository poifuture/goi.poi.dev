{"version":3,"sources":["webpack:///./src/components/WordCards/JaWordCard.tsx","webpack:///./src/containers/GoiTester.tsx","webpack:///./src/containers/WordAdder.tsx","webpack:///./src/containers/CommandsBar.tsx","webpack:///./src/pages/index.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/PoiColors.ts","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/NavBar.tsx"],"names":["WordCard","_React$Component","apply","this","arguments","prototype","render","statusColor","props","status","react_default","a","createElement","className","word","pos","Fragment","display","dangerouslySetInnerHTML","__html","common","style","color","translation","KanaDictionary","ja","sentences","map","sentence","sentenceId","key","zh","JSON","stringify","React","Component","defaultProps","GoiTester","_this","_len","length","args","Array","_key","call","concat","JudgeInputElement","onRequestJudge","value","poiUserId","savingId","currentWord","toJS","judgeAnswer","onRequestNext","judgeResult","_this$props","currentWordKey","learnedCandidates","prioritiedCandidates","pendingCandidates","showNextWord","_proto","componentDidMount","_componentDidMount","regenerator_default","mark","_callee","wrap","_context","prev","next","console","debug","lazyInitUser","sent","lazyInitSaving","stop","_this2","wordCardStatus","Helmet_default","ref","c","onClick","JaWordCard","tester","saving","connect","state","GoiUser","get","GoiSaving","dispatch","LazyInitUserAction","_ref","LazyInitSavingAction","_ref2","_temp","_ref3","ShowNextWordAction","answer","options","VerifyAnswerAction","WordAdder","CustomQueryInput","getSuggestionQuerys","suggestions","suggestion","Query","getPendingQuerys","pendings","pending","onClickConfirm","WordAdder_asyncToGenerator","addWordsFromQuerys","querys","close","query","removePendingQuery","counters","LearnedCount","PrioritiedCount","PendingCount","clearPendingWords","Display","TotalCount","AddedCount","NewCount","addPendingQuery","ClearPendingWordsAction","_ref4","AddPendingQueryAction","_ref5","RemovePendingQueryAction","_ref6","_ref7","AddWordsFromQuerysAction","DisplayWordAdderAction","CommandsBar","showWordAdder","Fab","variant","aria-label","Navigation_default","ShowWordAdderAction","__webpack_exports__","NavBar","containers_CommandsBar","containers_WordAdder","containers_GoiTester","m","module","exports","require","default","__webpack_require__","d","poisky","poisky3","poisky5","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","loader","enqueue","createContext","styled","nav","withConfig","displayName","componentId","NavBarList","ul","NavBarLink","Link","NavBarItem","to"],"mappings":"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","file":"component---src-pages-index-tsx-fdb9a93a38113e793b82.js","sourcesContent":["import React from \"react\"\nimport { GoiJaWordType } from \"../../types/GoiDictionaryTypes\"\n\nexport type WordCardPropsType = {\n  word: GoiJaWordType\n  display: \"simple\" | \"detailed\" | \"test-common\" | \"test-translation\"\n  status:\n    | \"input\"\n    | \"first\"\n    | \"perfect\"\n    | \"good\"\n    | \"warning\"\n    | \"failed\"\n    | \"peek\"\n    | \"review\"\n}\n\nexport class WordCard extends React.Component<WordCardPropsType> {\n  static defaultProps = {\n    word: {\n      common: \"Common Placeholder\",\n      translation: \"Translation Placeholder\",\n    },\n    display: \"detailed\",\n    status: \"view\",\n  }\n  render() {\n    const statusColor =\n      this.props.status === \"input\"\n        ? \"gray\"\n        : this.props.status === \"first\"\n        ? \"blue\"\n        : this.props.status === \"perfect\"\n        ? \"darkgreen\"\n        : this.props.status === \"good\"\n        ? \"lightgreen\"\n        : this.props.status === \"warning\"\n        ? \"yellow\"\n        : this.props.status === \"failed\"\n        ? \"red\"\n        : this.props.status === \"peek\"\n        ? \"blue\"\n        : this.props.status === \"review\"\n        ? \"black\"\n        : \"black\"\n    return (\n      <div className=\"word-card\">\n        {this.props.word.pos === \"KANA\" ? (\n          <>\n            <div className=\"word-card-common\">\n              {this.props.display !== \"test-common\" && (\n                <span\n                  dangerouslySetInnerHTML={{ __html: this.props.word.common }}\n                ></span>\n              )}\n            </div>\n            <div\n              className=\"word-card-translation\"\n              style={{ color: statusColor }}\n            >\n              {this.props.word.translation.KanaDictionary.translation.ja}\n            </div>\n            <div className=\"word-card-sentences\">\n              {(this.props.word.sentences || []).map((sentence, sentenceId) => (\n                <div key={sentenceId}>\n                  <p>\n                    <span\n                      dangerouslySetInnerHTML={{ __html: sentence.sentence }}\n                    ></span>\n                  </p>\n                  <p>\n                    <span>{(sentence.translation || {}).zh}</span>\n                  </p>\n                </div>\n              ))}\n            </div>\n            <pre className=\"word-card-debug\">\n              {JSON.stringify(this.props.word, null, 2)}\n            </pre>\n          </>\n        ) : (\n          <></>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default WordCard\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport WordCard from \"../components/WordCards/JaWordCard\"\nimport * as PoiUser from \"../utils/PoiUser\"\nimport { LazyInitUserAction } from \"../actions/GoiUserActions\"\nimport { LazyInitSavingAction } from \"../actions/GoiSavingActions\"\nimport {\n  VerifyAnswerAction,\n  ShowNextWordAction,\n} from \"../actions/GoiTesterActions\"\nimport { GoiSavingId, GoiJudgeResult } from \"../types/GoiTypes\"\nimport Helmet from \"react-helmet\"\nimport { GoiWordType, GoiJaWordType } from \"../types/GoiDictionaryTypes\"\nimport { RootStateType } from \"../states/RootState\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { Action } from \"redux\"\nimport Heap from \"../algorithm/Heap\"\nimport { GoiWordRecordDataType } from \"../models/GoiSaving\"\n\nexport class GoiTester extends React.Component<\n  ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>\n> {\n  JudgeInputElement: HTMLInputElement | null = null\n  async componentDidMount() {\n    console.debug(\"Lasy init user\")\n    const poiUserId = (await this.props.lazyInitUser()) as PoiUser.PoiUserId\n    console.debug(\"Lasy init saving\")\n    const savingId = await this.props.lazyInitSaving({ poiUserId })\n    await this.props.showNextWord({ poiUserId, savingId })\n  }\n  onRequestJudge = () => {\n    if (!this.JudgeInputElement || !this.JudgeInputElement.value) {\n      return\n    }\n    const poiUserId = this.props.poiUserId\n    const savingId = this.props.savingId\n    const word: GoiJaWordType = this.props.currentWord.toJS()\n    this.props.judgeAnswer(this.JudgeInputElement.value, word, {\n      poiUserId,\n      savingId,\n    })\n  }\n  onRequestNext = () => {\n    if (this.props.judgeResult === \"Pending\") {\n      //store skip result\n    }\n    const {\n      poiUserId,\n      savingId,\n      currentWordKey,\n      learnedCandidates,\n      prioritiedCandidates,\n      pendingCandidates,\n    } = this.props\n    this.props.showNextWord(\n      { poiUserId, savingId },\n      {\n        currentWordKey,\n        learnedCandidates,\n        prioritiedCandidates,\n        pendingCandidates,\n      }\n    )\n  }\n  render() {\n    const word: GoiJaWordType = this.props.currentWord.toJS()\n    const wordCardStatus =\n      this.props.judgeResult === \"Pending\"\n        ? \"input\"\n        : this.props.judgeResult === \"Correct\"\n        ? \"perfect\"\n        : this.props.judgeResult === \"Accepted\"\n        ? \"good\"\n        : this.props.judgeResult === \"Rejected\"\n        ? \"warning\"\n        : this.props.judgeResult === \"Wrong\"\n        ? \"failed\"\n        : \"review\"\n    return (\n      <div className=\"goi-core\">\n        <Helmet>\n          <title>{word.key || \"PoiGoi\"}</title>\n        </Helmet>\n        <input ref={c => (this.JudgeInputElement = c)}></input>\n        <button onClick={this.onRequestJudge}>Judge</button>\n        <button onClick={this.onRequestNext}>Next</button>\n        <WordCard word={word} display=\"detailed\" status={wordCardStatus} />\n        <pre className=\"goi-debug\">\n          {JSON.stringify(this.props.tester, null, 2)}\n          {JSON.stringify(this.props.saving, null, 2)}\n        </pre>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: RootStateType) => {\n  console.debug(\"GoiTester state: \", state)\n  const props = {\n    poiUserId: state.GoiUser.get(\"PoiUserId\") as PoiUser.PoiUserId,\n    savingId: state.GoiSaving.get(\"SavingId\") as GoiSavingId,\n    currentWord: state.GoiTester.get(\"CurrentWord\"),\n    currentWordKey: state.GoiTester.get(\"CurrentWord\").get(\"key\") as string,\n    judgeResult: state.GoiTester.get(\"JudgeResult\") as GoiJudgeResult,\n    saving: state.GoiSaving.get(\"Saving\"),\n    tester: state.GoiTester,\n    learnedCandidates: state.GoiTester.get(\"LearnedCandidates\"),\n    prioritiedCandidates: state.GoiTester.get(\"PrioritiedCandidates\"),\n    pendingCandidates: state.GoiTester.get(\"PendingCandidates\"),\n  }\n  console.debug(\"GoiTester props: \", props)\n  return props\n}\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<RootStateType, void, Action>\n) => {\n  return {\n    lazyInitUser: () => dispatch(LazyInitUserAction()),\n    lazyInitSaving: ({ poiUserId }: { poiUserId: PoiUser.PoiUserId }) =>\n      dispatch(LazyInitSavingAction({ poiUserId })),\n    showNextWord: (\n      {\n        poiUserId,\n        savingId,\n      }: { poiUserId: PoiUser.PoiUserId; savingId: GoiSavingId },\n      {\n        currentWordKey,\n        learnedCandidates,\n        prioritiedCandidates,\n        pendingCandidates,\n      }: {\n        currentWordKey?: string\n        learnedCandidates?: Heap<GoiWordRecordDataType>\n        prioritiedCandidates?: Heap<GoiWordRecordDataType>\n        pendingCandidates?: Heap<GoiWordRecordDataType>\n      } = {}\n    ) =>\n      dispatch(\n        ShowNextWordAction(\n          { poiUserId, savingId },\n          {\n            currentWordKey,\n            learnedCandidates,\n            prioritiedCandidates,\n            pendingCandidates,\n          }\n        )\n      ),\n    judgeAnswer: (\n      answer: string,\n      word: GoiWordType,\n      options: { poiUserId: PoiUser.PoiUserId; savingId: GoiSavingId }\n    ) =>\n      dispatch(\n        VerifyAnswerAction(answer, word, {\n          poiUserId: options.poiUserId,\n          savingId: options.savingId,\n        })\n      ),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GoiTester)\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport * as PoiUser from \"../utils/PoiUser\"\nimport {\n  DisplayWordAdderAction,\n  AddPendingQueryAction,\n  RemovePendingQueryAction,\n  AddWordsFromQuerysAction,\n  ClearPendingWordsAction,\n} from \"../actions/WordAdderActions\"\nimport {\n  WordAdderSuggestionQueryType,\n  WordAdderQueryCountersType,\n  WordAdderPendingQueryType,\n} from \"../states/WordAdderState\"\nimport { GoiSavingId } from \"../types/GoiTypes\"\nimport { RootStateType } from \"../states/RootState\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { Action } from \"redux\"\nimport { ShowNextWordAction } from \"../actions/GoiTesterActions\"\n\nexport class WordAdder extends React.Component<\n  ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>\n> {\n  CustomQueryInput: HTMLInputElement | null = null\n  getSuggestionQuerys = (): string[] => {\n    const suggestions: WordAdderSuggestionQueryType[] = this.props.suggestions.toJS()\n    return suggestions.map(suggestion => suggestion.Query)\n  }\n  getPendingQuerys = (): string[] => {\n    const pendings: WordAdderPendingQueryType[] = this.props.pendings.toJS()\n    return pendings.map(pending => pending.Query)\n  }\n  onClickConfirm = async () => {\n    const poiUserId = this.props.poiUserId\n    const savingId = this.props.savingId\n    await this.props.addWordsFromQuerys(\n      { querys: this.getPendingQuerys() },\n      { poiUserId, savingId }\n    )\n    this.props.close()\n    this.getPendingQuerys().map(query =>\n      this.props.removePendingQuery({ query })\n    )\n    await this.props.showNextWord(poiUserId, savingId)\n  }\n  render() {\n    if (!this.props.display) {\n      return <div className=\"word-adder\"></div>\n    }\n    const poiUserId = this.props.poiUserId\n    const savingId = this.props.savingId\n    const status = this.props.status.toJS()\n    const suggestions: WordAdderSuggestionQueryType[] = this.props.suggestions.toJS()\n    const pendings: WordAdderPendingQueryType[] = this.props.pendings.toJS()\n    const counters: WordAdderQueryCountersType = this.props.counters.toJS()\n    return (\n      <div className=\"word-adder\">\n        <h1>Word Adder</h1>\n        <p>Status:</p>\n        <div>Learned:{status.LearnedCount}</div>\n        <div>Prioritied:{status.PrioritiedCount}</div>\n        <div>\n          Pending:{status.PendingCount}\n          <button\n            onClick={() =>\n              this.props.clearPendingWords({ poiUserId, savingId })\n            }\n          >\n            Clear\n          </button>\n        </div>\n        <p>Suggestions:</p>\n        {suggestions.map(suggestion => (\n          <div key={suggestion.Display}>\n            {suggestion.Display}({suggestion.Query})\n            {counters[suggestion.Query] && (\n              <span>\n                Total:\n                {counters[suggestion.Query].TotalCount}\n                (Learned:\n                {counters[suggestion.Query].LearnedCount}, Added:\n                {counters[suggestion.Query].AddedCount}, New:\n                {counters[suggestion.Query].NewCount})\n              </span>\n            )}\n            <button\n              onClick={() =>\n                this.props.addPendingQuery(\n                  { display: suggestion.Display, query: suggestion.Query },\n                  { poiUserId, savingId }\n                )\n              }\n            >\n              +\n            </button>\n          </div>\n        ))}\n        <p>\n          Custom Query:<input ref={c => (this.CustomQueryInput = c)}></input>\n          <button\n            onClick={() =>\n              this.CustomQueryInput &&\n              this.props.addPendingQuery(\n                { display: \"Custom\", query: this.CustomQueryInput.value },\n                { poiUserId, savingId }\n              )\n            }\n          >\n            +\n          </button>\n        </p>\n        <p>Pendings (order matters):</p>\n        {pendings.map(pending => (\n          <div key={pending.Query}>\n            {pending.Display}({pending.Query})\n            {counters[pending.Query] && (\n              <span>\n                Total:\n                {counters[pending.Query].TotalCount}\n                (Learned:\n                {counters[pending.Query].LearnedCount}, Added:\n                {counters[pending.Query].AddedCount}, New:\n                {counters[pending.Query].NewCount})\n              </span>\n            )}\n            <button\n              onClick={() =>\n                this.props.removePendingQuery({ query: pending.Query })\n              }\n            >\n              -\n            </button>\n          </div>\n        ))}\n        <button onClick={this.onClickConfirm}>Confirm</button>\n        <button onClick={() => this.props.close()}>Cancel</button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: RootStateType) => {\n  console.debug(\"WordAdderContainer state: \", state)\n  const props = {\n    display: state.WordAdder.get(\"Display\") as boolean,\n    status: state.WordAdder.get(\"Status\"),\n    suggestions: state.WordAdder.get(\"Suggestions\"),\n    pendings: state.WordAdder.get(\"Pendings\"),\n    counters: state.WordAdder.get(\"Counters\"),\n    saving: state.GoiSaving.get(\"Saving\"),\n    poiUserId: state.GoiUser.get(\"PoiUserId\") as PoiUser.PoiUserId,\n    savingId: state.GoiSaving.get(\"SavingId\") as GoiSavingId,\n  }\n  console.debug(\"WordAdderContainer props: \", props)\n  return props\n}\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<RootStateType, void, Action>\n) => {\n  return {\n    clearPendingWords: ({\n      poiUserId,\n      savingId,\n    }: {\n      poiUserId: PoiUser.PoiUserId\n      savingId: GoiSavingId\n    }) => dispatch(ClearPendingWordsAction({ poiUserId, savingId })),\n    addPendingQuery: (\n      { display, query }: { display: string; query: string },\n      {\n        poiUserId,\n        savingId,\n      }: { poiUserId: PoiUser.PoiUserId; savingId: GoiSavingId }\n    ) =>\n      dispatch(\n        AddPendingQueryAction({ display, query }, { poiUserId, savingId })\n      ),\n    removePendingQuery: ({ query }: { query: string }) =>\n      dispatch(RemovePendingQueryAction({ query })),\n    addWordsFromQuerys: (\n      { querys }: { querys: string[] },\n      {\n        poiUserId,\n        savingId,\n      }: { poiUserId: PoiUser.PoiUserId; savingId: GoiSavingId }\n    ) =>\n      dispatch(AddWordsFromQuerysAction({ querys }, { poiUserId, savingId })),\n    close: () => dispatch(DisplayWordAdderAction({ display: false })),\n    showNextWord: (poiUserId: PoiUser.PoiUserId, savingId: GoiSavingId) =>\n      dispatch(ShowNextWordAction({ poiUserId, savingId })),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WordAdder)\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { ShowWordAdderAction } from \"../actions/WordAdderActions\"\nimport * as PoiUser from \"../utils/PoiUser\"\nimport { GoiSavingId } from \"../types/GoiTypes\"\nimport { ThunkDispatch } from \"redux-thunk\"\nimport { RootStateType } from \"../states/RootState\"\nimport { Action } from \"redux\"\nimport Fab from \"@material-ui/core/Fab\"\nimport NavigationIcon from \"@material-ui/icons/Navigation\"\n\nexport class CommandsBar extends React.Component<\n  ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps>\n> {\n  render() {\n    const poiUserId = this.props.poiUserId\n    const savingId = this.props.savingId\n    return (\n      <div className=\"commands-bar\">\n        <button\n          onClick={() => this.props.showWordAdder({ poiUserId, savingId })}\n        >\n          Add Words\n        </button>\n\n        <Fab variant=\"extended\" aria-label=\"delete\">\n          [WIP]Menud\n          <NavigationIcon />\n        </Fab>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: RootStateType) => {\n  console.debug(\"CommandsBar state: \", state)\n  const props = {\n    poiUserId: state.GoiUser.get(\"PoiUserId\") as PoiUser.PoiUserId,\n    savingId: state.GoiSaving.get(\"SavingId\") as GoiSavingId,\n  }\n  console.debug(\"CommandsBar props: \", props)\n  return props\n}\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<RootStateType, void, Action>\n) => {\n  return {\n    showWordAdder: ({\n      poiUserId,\n      savingId,\n    }: {\n      poiUserId: PoiUser.PoiUserId\n      savingId: GoiSavingId\n    }) => dispatch(ShowWordAdderAction({ poiUserId, savingId })),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CommandsBar)\n","import React from \"react\"\nimport NavBar from \"../components/NavBar\"\nimport GoiTester from \"../containers/GoiTester\"\nimport WordAdder from \"../containers/WordAdder\"\nimport CommandsBar from \"../containers/CommandsBar\"\n\nexport default (props: any) => (\n  <>\n    <NavBar />\n    <main>\n      <CommandsBar />\n      <WordAdder />\n      <GoiTester />\n    </main>\n    <footer>\n      <ruby>\n        私<rt>わたし</rt>\n      </ruby>\n      たちの\n      <ruby>\n        夢<rt>ゆめ</rt>\n      </ruby>\n      がここから\n      <ruby>\n        始<rt>はじ</rt>\n      </ruby>\n      まります ٩(ˊᗜˋ*)و\n    </footer>\n  </>\n)\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","// Follow Ant Design\n// https://ant.design/docs/spec/colors\n\nexport const poisky = \"#99ccff\"\nexport const poisky1 = \"#f0faff\"\nexport const poisky2 = \"#f0f9ff\"\nexport const poisky3 = \"#f0f9ff\"\nexport const poisky4 = \"#ebf6ff\"\nexport const poisky5 = \"#c2e2ff\"\nexport const poisky6 = \"#99ccff\"\nexport const poisky7 = \"#77a5d9\"\nexport const poisky8 = \"#5980b3\"\nexport const poisky9 = \"#3f5e8c\"\nexport const poisky10 = \"#2d4266\"\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\nimport { Helmet } from \"react-helmet\"\nimport { poisky, poisky5 } from \"../utils/PoiColors\"\n\nconst NavBar = styled.nav`\n  top: 0;\n  left: 0;\n  width: 100%;\n`\nconst NavBarList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n  background-color: ${poisky};\n`\n\nconst NavBarLink = styled(Link)`\n  display: block;\n  color: white;\n  text-align: center;\n  padding: 14px 16px;\n  text-decoration: none;\n\n  :hover {\n    background-color: ${poisky5};\n  }\n`\n\nconst UnstyledNavBarItem = (props: any) => (\n  <li>\n    <NavBarLink {...props} />\n  </li>\n)\n\nconst NavBarItem = styled(UnstyledNavBarItem)`\n  float: left;\n`\n\nexport default () => (\n  <NavBar>\n    <NavBarList>\n      <NavBarItem to=\"/\">Home</NavBarItem>\n      <NavBarItem to=\"/mamechishiki/\">豆知識</NavBarItem>\n      <NavBarItem to=\"/tegami/\">手紙</NavBarItem>\n    </NavBarList>\n  </NavBar>\n)\n"],"sourceRoot":""}